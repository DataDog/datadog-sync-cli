name: Release

permissions:
  contents: write

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    steps:
      - name: Create release
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          RELEASE_BRANCH: ${{ github.head_ref }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tagName = `${process.env.RELEASE_BRANCH.split("/")[1]}`;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tagName}`,
              sha: context.payload.pull_request.merge_commit_sha,
            });
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              generate_release_notes: true,
              tag_name: tagName,
            });
  build_artifacts:
    needs: create_release
    name: Build executables
    strategy:
      matrix:
        os: [ubuntu-24.04-arm, ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set tag
        env:
          RELEASE_BRANCH: ${{ github.head_ref }}
        run: |
          TAG_NAME=$(echo $RELEASE_BRANCH | cut -d "/" -f2)
          echo "tag_name=$TAG_NAME" >> "$GITHUB_ENV"
        shell: bash
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ env.tag_name }}
          fetch-depth: 0
      - uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c # v4.9.1
        with:
          python-version: "3.12"
      - name: Install requirements
        run: |
          python -m pip install .
          python -m pip install -r scripts/build_requirements.txt
      - name: Build and upload executables
        run: python scripts/build.py -f -u
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
