interactions:
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Content-Type:
      - application/json
    method: GET
    uri: https://api.datadoghq.com/api/v1/logs/config/pipelines
  response:
    body:
      string: '[{"is_enabled": true, "name": "Test pipeline", "filter": {"query":
        "test:query"}, "is_read_only": false, "type": "pipeline", "id": "Rvk36Rj0SJizOBX_N24BSQ",
        "processors": []}, {"is_enabled": true, "name": "Test Pipeline - Complex",
        "filter": {"query": "source:foo"}, "is_read_only": false, "type": "pipeline",
        "id": "0i9e0i3ET6WPZV1b9ZeoPg", "processors": [{"is_enabled": true, "name":
        "sample arithmetic processor", "expression": "(time1 - time2)*1000", "is_replace_missing":
        true, "type": "arithmetic-processor", "target": "my_arithmetic"}, {"is_enabled":
        true, "override_on_conflict": false, "target": "db", "target_format": "string",
        "source_type": "tag", "target_type": "attribute", "sources": ["db.instance"],
        "preserve_source": true, "type": "attribute-remapper", "name": "sample attribute
        processor"}, {"is_enabled": true, "type": "category-processor", "name": "sample
        category processor", "categories": [{"filter": {"query": "@severity: \".\""},
        "name": "debug"}, {"filter": {"query": "@severity: \"-\""}, "name": "verbose"}],
        "target": "foo.severity"}, {"is_enabled": true, "sources": ["_timestamp",
        "published_date"], "type": "date-remapper", "name": "sample date remapper"},
        {"is_enabled": true, "ip_processing_behavior": "do-nothing", "name": "sample
        geo ip parser", "sources": ["network.client.ip"], "type": "geo-ip-parser",
        "target": "network.client.geoip"}, {"is_enabled": true, "grok": {"support_rules":
        "", "match_rules": "Rule %{word:my_word2} %{number:my_float2}"}, "name": "sample
        grok parser", "source": "message", "samples": ["sample log 1"], "type": "grok-parser"},
        {"is_enabled": true, "name": "sample lookup processor", "source": "service_id",
        "lookup_table": ["1,my service"], "default_lookup": "unknown service", "type":
        "lookup-processor", "target": "service_name"}, {"is_enabled": true, "sources":
        ["msg"], "type": "message-remapper", "name": "sample message remapper"}, {"is_enabled":
        true, "filter": {"query": "source:foo"}, "type": "pipeline", "name": "nested
        pipeline", "processors": [{"is_enabled": false, "name": "sample url parser",
        "sources": ["url", "extra"], "target": "http_url", "type": "url-parser", "normalize_ending_slashes":
        true}]}, {"is_enabled": true, "sources": ["service"], "type": "service-remapper",
        "name": "sample service remapper"}, {"is_enabled": true, "sources": ["info",
        "trace"], "type": "status-remapper", "name": "sample status remapper"}, {"is_enabled":
        true, "name": "sample string builder processor", "is_replace_missing": false,
        "template": "%{user.name} logged in at %{timestamp}", "type": "string-builder-processor",
        "target": "user_activity"}, {"is_enabled": true, "sources": ["dd.trace_id"],
        "type": "trace-id-remapper", "name": "sample trace id remapper"}, {"is_enabled":
        true, "name": "sample user agent parser", "sources": ["user", "agent"], "is_encoded":
        false, "type": "user-agent-parser", "target": "http_agent"}]}, {"is_enabled":
        true, "name": "Sinatra", "filter": {"query": "source:sinatra"}, "is_read_only":
        true, "type": "pipeline", "id": "INocz-I8T6247bE8XOKGcg", "processors": [{"is_enabled":
        true, "grok": {"support_rules": "_auth %{notSpace:http.auth:nullIf(\"-\")}\n_bytes_written
        %{integer:network.bytes_written}\n_client_ip %{ipOrHost:network.client.ip}\n_version
        HTTP\\/%{regex(\"\\\\d+\\\\.\\\\d+\"):http.version}\n_url %{notSpace:http.url}\n_ident
        %{notSpace:http.ident:nullIf(\"-\")}\n_status_code %{integer:http.status_code}\n_method
        %{word:http.method}\n_date_access (%{date(\"dd/MMM/yyyy:HH:mm:ss Z\"):date_access}|%{date(\"dd/MMM/yyyy
        HH:mm:ss\"):date_access})\n_duration %{number:duration:scale(1000000000)}\n",
        "match_rules": "access.common %{_client_ip} %{_ident} %{_auth} \\[%{_date_access}\\]
        \"(?>%{_method} |)%{_url}(?> %{_version}|)\" %{_status_code} (?>%{_bytes_written}|-)(
        %{_duration}|-)?\n"}, "name": "Parsing Sinatra logs", "source": "message",
        "samples": ["127.0.0.1 - - [15/Jul/2018:17:41:40 +0000] \"GET /uptime_status
        HTTP/1.1\" 200 34 0.0004", "127.0.0.1 - - [15/Jul/2018 23:40:31] \"GET /uptime_status
        HTTP/1.1\" 200 6997 1.8096"], "type": "grok-parser"}, {"is_enabled": true,
        "name": "", "sources": ["http.url"], "target": "http.url_details", "type":
        "url-parser", "normalize_ending_slashes": false}, {"is_enabled": true, "sources":
        ["date_access"], "type": "date-remapper", "name": "Define `date_access` as
        the official date of the log"}, {"is_enabled": true, "type": "category-processor",
        "name": "Categorise status code", "categories": [{"filter": {"query": "@http.status_code:[200
        TO 299]"}, "name": "OK"}, {"filter": {"query": "@http.status_code:[300 TO
        399]"}, "name": "notice"}, {"filter": {"query": "@http.status_code:[400 TO
        499]"}, "name": "warning"}, {"filter": {"query": "@http.status_code:[500 TO
        599]"}, "name": "error"}], "target": "http.status_category"}, {"is_enabled":
        true, "sources": ["http.status_category"], "type": "status-remapper", "name":
        "Define `http.status_category` as the official status of the log"}]}]'
    headers:
      Content-Type:
      - application/json
    status:
      code: 200
      message: OK
version: 1
