interactions:
- request:
    body: null
    headers:
      Content-Type:
      - application/json
    method: GET
    uri: https://us5.datadoghq.com/api/v2/hamr
  response:
    body:
      string: '{"data": {"id": "b9e754c7-857e-11ef-afbd-c64ba5fcf2d1", "type": "hamr_org_connections",
        "attributes": {"HamrStatus": 1, "IsPrimary": false, "ModifiedAt": "2024-10-08
        15:06:20.300120", "ModifiedBy": "charlie.zhang", "TargetOrgDatacenter": "eu1.prod.dog",
        "TargetOrgName": "DDR Internal Testing eu1", "TargetOrgUuid": "30187db5-8582-11ef-969b-8248c7cda362"}}}'
    headers:
      Content-Type:
      - application/vnd.api+json
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Content-Type:
      - application/json
    method: GET
    uri: https://api.datadoghq.eu/api/v2/hamr
  response:
    body:
      string: '{"data": {"id": "30187db5-8582-11ef-969b-8248c7cda362", "type": "hamr_org_connections",
        "attributes": {"HamrStatus": 1, "IsPrimary": true, "ModifiedAt": "2024-10-08
        15:06:20.300120", "ModifiedBy": "charlie.zhang", "TargetOrgDatacenter": "us5.prod.dog",
        "TargetOrgName": "DDR Internal Testing US5", "TargetOrgUuid": "b9e754c7-857e-11ef-afbd-c64ba5fcf2d1"}}}'
    headers:
      Content-Type:
      - application/vnd.api+json
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Content-Type:
      - application/json
    method: GET
    uri: https://us5.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=0&page%5Bsize%5D=100
  response:
    body:
      string: '{"data": [{"name": "1Password activity observed from Tor client IP",
        "createdAt": 1687967178397, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:1password @threat_intel.results.category:tor", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "tor_client_activity"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "critical", "notifications": [], "condition":
        "tor_client_activity > 0"}], "message": "## Goal\nDetect when 1Password activity
        is observed from a Tor exit node. \n\n## Strategy\nThis rule monitors 1Password
        logs to determine when an activity originated from a Tor client. Datadog enriches
        all ingested logs with [expert-curated threat intelligence][1] in real-time.
        An attacker may use a Tor client to anonymize their true origin.  \n\n## Triage
        and response\n1. Determine if `{{@usr.email}}` from IP address `{{@network.client.ip}}`
        should have made the `{{@evt.name}}` API call.\n2. If the results of the triage
        indicate that an attacker has taken the action, begin your company''s incident
        response process and an investigation.\n\n## Changelog\n* 17 August 2023 -
        Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog",
        "tags": ["mitre_platform:saas", "technique:T1078-valid-accounts", "source:1password",
        "scope:onepassword", "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:1password", "scope:onepassword", "technique:T1078-valid-accounts",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:saas"],
        "version": 87, "id": "def-000-syp", "updatedAt": 1736369573205, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "1Password service account token activity
        observed", "createdAt": 1687967174578, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:1password @evt.type:1password-audit-events @object_type:satoken
        @evt.name:create", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "token_creation"},
        {"query": "source:1password @evt.type:1password-audit-events @object_type:satoken
        @evt.name:trename", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "token_update"},
        {"query": "source:1password @evt.type:1password-audit-events @object_type:satoken
        @evt.name:tverify", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "token_registration"},
        {"query": "source:1password @evt.type:1password-audit-events @object_type:satoken
        @evt.name:trevoke", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "token_revoke"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "token created", "status": "high",
        "notifications": [], "condition": "token_creation > 0"}, {"name": "token updated",
        "status": "medium", "notifications": [], "condition": "token_update > 0"},
        {"name": "token registered", "status": "low", "notifications": [], "condition":
        "token_registration > 0"}, {"name": "token revoked", "status": "info", "notifications":
        [], "condition": "token_revoke > 0"}], "message": "## Goal\nDetect when a
        1Password service account token activity is observed.\n\n## Strategy\nThis
        rule monitors 1Password audit logs to determine when any of the following
        [actions][1] is observed for a 1Password service account token:\n- **create**:
        A service account token was registered.\t\n- **trename**: A service account
        token name was updated.\t\n- **tverify**: A service account token signature
        was registered.\n- **trevoke**: A service account token was revoked.\t\n\n[1Password
        Service Accounts](https://developer.1password.com/docs/service-accounts/)
        help automate secrets management in your applications and infrastructure without
        the need to deploy additional services.\n\nToken activity from these service
        accounts could indicate an attacker using a non-user identity to compromise
        a 1Password tenant.\n\n\n## Triage & response\n- Investigate the user `{{@usr.email}}`
        performing the service account token activity `{{@evt.name}}`.\n- In the event
        of an accidental credentials exposure follow the 1Password Service Account
        security [recommendation][2].\n    - You must create a new service account
        with the same permissions, and delete the 1Password service account with the
        exposed credentials.\n\n[1]: https://developer.1password.com/docs/events-api/audit-events#service-account-tokens\n[2]:
        https://developer.1password.com/docs/service-accounts/security/", "tags":
        ["technique:T1098-account-manipulation", "mitre_platform:saas", "source:1password",
        "scope:onepassword", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:1password", "scope:onepassword", "security:attack",
        "tactic:TA0003-persistence", "technique:T1098-account-manipulation", "mitre_platform:saas"],
        "version": 87, "id": "def-000-xcb", "updatedAt": 1736369573245, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "1Password vault export attempt by user",
        "createdAt": 1689320826132, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:1password @evt.type:1password-audit-events @evt.name:export
        @object_type:vault", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "vault_exfiltration"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "vault_exfiltration > 0"}], "message": "## Goal\nDetect possible
        exfiltration attempts from 1Password through a vault export.\n\n## Strategy\nThis
        rule monitors 1Password audit logs to determine when the [export](https://developer.1password.com/docs/events-api/item-usage-actions/#export)
        item usage action occurs on a vault. This could indicate exfiltration attempts
        from 1Password by downloading or exporting items within a vault.\n\n## Triage
        & response\n1. Investigate the `{{@usr.email}}` attempting to download or
        export vault `{{@vault_uuid}}`.\n2. If this action was unintended by the user:\n    -
        Rotate the user''s 1Password master password\n    - Identify all the items
        within the vault that were exported and rotate the necessary authentication
        credentials", "tags": ["technique:T1567-exfiltration-over-web-service", "mitre_platform:saas",
        "source:1password", "scope:onepassword", "tactic:TA0010-exfiltration", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0010-exfiltration", "source:1password",
        "scope:onepassword", "mitre_platform:cloud", "security:attack", "technique:T1567-exfiltration-over-web-service",
        "mitre_platform:saas"], "version": 89, "id": "def-000-oui", "updatedAt": 1736369573299,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "A Kubernetes user attempted to perform
        a high number of actions that were denied", "createdAt": 1649946055720, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "(source:kubernetes.audit
        OR (source:azure.containerservice @evt.category:(kube-audit OR kube-audit-admin)))
        @responseStatus.reason:Forbidden -@usr.id:(system\\:serviceaccount\\:*\\:datadog*
        OR system\\:kube-scheduler OR system\\:anonymous OR eks\\:authenticator OR
        eks\\:pod-identity-mutating-webhook OR system\\:serviceaccount\\:kube-system\\:root-ca-cert-publisher)",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@http.url_details.path"], "aggregation": "cardinality", "name": "access_denied"},
        {"query": "source:gcp.k8s.cluster service:k8s.io @data.protoPayload.status.code:7",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@data.protoPayload.resourceName"], "aggregation": "cardinality", "name":
        "gke_access_denied"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 7200, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "medium", "notifications": [], "condition": "access_denied >
        10 || gke_access_denied > 10"}], "message": "## Goal\nIdentify when a Kubernetes
        user attempts to perform a high number of actions that are denied in a short
        amount of time.\n\n## Strategy\nThis rule identifies responses of the API
        server where the reason for the error is set to `Forbidden`, indicating that
        an authenticated user attempted to perform an action that they are not explicitly
        authorized to perform.\n\nThe rule flags users who receive permission denied
        errors on several distinct API endpoints in a short amount of time.\n\n##
        Triage and response\n1. Determine if the user: `{{@usr.id}}` is expected to
        perform the denied actions. If yes, the alert may be due to a misconfigured
        application or a service account with insufficient privileges.\n2. Use the
        Cloud SIEM `User Investigation` dashboard to review any user actions that
        may have occurred after the potentially malicious action.\n\n## Changelog\n*
        7 May 2024 - Updated detection query to include logs from Azure Kubernetes
        Service.\n* 15 July 2024 - Updated detection query to include logs from Google
        Kubernetes Engine.", "tags": ["source:kubernetes", "mitre_platform:containers",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "technique:T1613-container-and-resource-discovery",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:kubernetes",
        "technique:T1613-container-and-resource-discovery", "security:attack", "mitre_platform:containers",
        "tactic:TA0007-discovery", "mitre_platform:iaas"], "version": 88, "id": "bz1-7ay-vqj",
        "updatedAt": 1736369573664, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "A Kubernetes user was assigned cluster administrator
        permissions", "createdAt": 1649946055962, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "(source:kubernetes.audit OR (source:azure.containerservice
        @evt.category:(kube-audit OR kube-audit-admin))) @http.method:create @requestObject.kind:ClusterRoleBinding
        @requestObject.roleRef.name:cluster-admin -@usr.id:system\\:apiserver", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "cluster_admin_added"}, {"query": "source:gcp.k8s.cluster
        service:k8s.io @data.protoPayload.request.roleRef.name:cluster-admin @data.protoPayload.request.kind:ClusterRoleBinding
        @http.method:create", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "gke_clusterrole_binding_admin"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "", "status": "medium", "notifications": [], "condition": "cluster_admin_added
        > 0 || gke_clusterrole_binding_admin > 0"}], "message": "## Goal\n\nIdentify
        when a Kubernetes user is assigned cluster-level administrative permissions.\n\n##
        Strategy\n\nThis rule monitors when a `ClusterRoleBinding` object is created
        to bind a Kubernetes user to the `cluster-admin` [default cluster-wide role](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles).
        This effectively grants the referenced user with full administrator permissions
        over all the Kubernetes cluster.\n\n## Triage and response\n\n1. Determine
        if the Kubernetes user referenced in `@requestObject.subjects` is expected
        to have been granted administrator permissions on the cluster\n2. Determine
        if the actor (`@usr.id`) is authorized to assign administrator permissions\n3.
        Use the Cloud SIEM `User Investigation` dashboard to review any user actions
        that may have occurred after the potentially malicious action.\n\n## Changelog\n*
        20 September 2022 - Updated tags.\n* 7 May 2024 - Updated detection query
        to include logs from Azure Kubernetes Service.\n* 15 July 2024 - Updated detection
        query to include logs from Google Kubernetes Engine.", "tags": ["tactic:TA0004-privilege-escalation",
        "technique:T1098-account-manipulation", "source:kubernetes", "mitre_platform:containers",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "source:kubernetes", "tactic:TA0004-privilege-escalation", "security:attack",
        "mitre_platform:containers", "mitre_platform:iaas", "technique:T1098-account-manipulation"],
        "version": 88, "id": "q2g-reo-fw1", "updatedAt": 1736369573645, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "A Microsoft Teams member was made owner
        of multiple teams", "createdAt": 1695944003583, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:microsoft-365 service:MicrosoftTeams
        @evt.name:MemberRoleChanged @Members.Role:2", "groupByFields": ["@Members.UPN"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@TeamName"], "aggregation":
        "cardinality", "name": "user_role_modified_to_owner_role"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "user_role_modified_to_owner_role > 1"}], "message": "## Goal\nDetect when
        a user is made owner of multiple Microsoft Teams. This could indicate an adversary
        or insider threat attempting to escalate the privileges of the assigned user
        with regard to various teams chats, as most users tend to own few teams curated
        to specific topics.\n\n## Strategy\nMonitor Microsoft Teams audit logs to
        look for events with an `@evt.name` value of `MemberRoleChanged` and a `@Members.Role`
        value of `2` indicating the change to an Owner role. Generally, most users
        will own a few teams related to specific topics that correlate with that job
        role. However, if this activity is observed from an external user or a user
        whose job function does not correlate with the assigned team, this might be
        an indicator of malicious activity.\n\n## Triage and response\n1. Determine
        if the user `{{@usr.email}}` intended to make the assigned user `{{@Member.UPN}}`
        the owner of the teams within the`{{TeamName}}` attribute.\n2. If the `{{@usr.email}}`
        didn''t intend to assign the owner privileges to `{{@Member.UPN}}`:\n    *
        Investigate other activities performed by the user `{{@usr.email}}` using
        the Cloud SIEM - User Investigation dashboard.\n    * Investigate other activities
        performed by the source IP `{{@network.client.ip}}` using the Cloud SIEM -
        IP Investigation dashboard.\n    * Investigate the activities that might have
        been performed by the subject user `{{@Member.UPN}}` after they were assigned
        the owner privileges. \n    * Begin your organization''s incident response
        process and investigate.", "tags": ["tactic:TA0004-privilege-escalation",
        "source:microsoft-365", "scope:microsoft-teams", "mitre_platform:saas", "technique:T1078-valid-accounts",
        "mitre_platform:office-suite", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "mitre_platform:saas", "source:microsoft-365", "mitre_platform:cloud",
        "technique:T1078-valid-accounts", "tactic:TA0004-privilege-escalation", "mitre_platform:office-suite",
        "scope:microsoft-teams"], "version": 87, "id": "def-000-poi", "updatedAt":
        1736369573630, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "A new Kubernetes admission controller was created", "createdAt": 1649946055899,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "(source:kubernetes.audit
        OR (source:azure.containerservice @evt.category:(kube-audit OR kube-audit-admin)))
        @http.method:create @objectRef.resource:(mutatingwebhookconfigurations OR
        validatingwebhookconfigurations) -@usr.id:(eks\\:cluster-bootstrap OR system\\:serviceaccount\\:kyverno\\:kyverno
        OR system\\:serviceaccount\\:kube-system\\:*)", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "admission_controller_created"}, {"query": "source:gcp.k8s.cluster
        service:k8s.io @data.protoPayload.request.kind:(ValidatingWebhookConfiguration
        OR MutatingWebhookConfiguration) @http.method:create -@usr.id:\"system:vpa-admission-controller\"",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gke_admission_controller_created"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "", "status": "medium", "notifications": [], "condition": "admission_controller_created
        > 0 || gke_admission_controller_created > 0"}], "message": "## Goal\nIdentify
        when a new Kubernetes [admission controller][1] is created in the cluster.\n\nAdmission
        controllers can intercept all incoming requests to the API server. An attacker
        can use them to establish persistence or to access sensitive data (such as
        secrets) sent to the API server.\n\n## Strategy\nThis rule identifies when
        a `MutatingWebhookConfiguration` or `ValidatingWebhookConfiguration` is created.\n\n##
        Triage and response\n1. Determine if the admission controller being created
        is expected.\n2. Determine if the user: `{{@usr.id}}` should be creating the
        admission controller.\n3. Use the Cloud SIEM `User Investigation` dashboard
        to review user actions that occurred after the potentially malicious action.\n\n##
        Changelog\n* 20 September 2022 - Updated tags.\n* 7 May 2024 - Updated detection
        query to include logs from Azure Kubernetes Service.\n* 15 July 2024 - Updated
        detection query to include logs from Google Kubernetes Engine.\n\n[1]: https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/\n\n",
        "tags": ["source:kubernetes", "technique:T1578-modify-cloud-compute-infrastructure",
        "mitre_platform:containers", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "source:kubernetes",
        "technique:T1578-modify-cloud-compute-infrastructure", "security:attack",
        "tactic:TA0005-defense-evasion", "mitre_platform:containers", "mitre_platform:iaas"],
        "version": 88, "id": "wpm-g1s-8yx", "updatedAt": 1736369573915, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "A new Microsoft 365 application was
        installed", "createdAt": 1636984787990, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 @evt.name:\"Add application.\"
        @evt.outcome:Success", "groupByFields": ["@ObjectId", "@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@ObjectId", "metrics": ["@ObjectId"],
        "aggregation": "new_value", "name": ""}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 0, "keepAlive": 0,
        "newValueOptions": {"forgetAfter": 28, "learningDuration": 7, "learningThreshold":
        0, "learningMethod": "duration"}}, "cases": [{"name": "", "status": "low",
        "notifications": []}], "message": "## Goal\nDetect when a new Microsoft 365
        app is installed as a means of establishing persistence.\n\n## Strategy\nMonitor
        Microsoft 365 audit logs to look for events with an `@evt.name` value of `Add
        application.` and event `@evt.outcome` of `Success`.\n\n## Triage and response\n1.
        Determine if the user `{{@usr.email}}` intended to install `{{@ObjectId}}`.\n2.
        If `{{@usr.email}}` is not responsible for installing `{{@ObjectId}}`, investigate
        `{{@usr.email}}` for anomalous activity. If necessary, initiate your company''s
        incident response (IR) process.", "tags": ["source:microsoft-365", "technique:T1136-create-account",
        "mitre_platform:saas", "mitre_platform:office-suite", "scope:microsoft-365",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:saas", "source:microsoft-365", "tactic:TA0003-persistence",
        "mitre_platform:cloud", "mitre_platform:office-suite", "technique:T1136-create-account",
        "scope:microsoft-365"], "version": 88, "id": "kc5-vk1-ysw", "updatedAt": 1736369573898,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "A new Microsoft Teams app or bot was
        observed", "createdAt": 1636984787708, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 service:MicrosoftTeams @evt.name:AppInstalled
        @AddOnType:(1 OR 4)", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@AddOnName", "metrics": ["@AddOnName"],
        "aggregation": "new_value", "name": ""}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 86400, "keepAlive":
        3600, "newValueOptions": {"forgetAfter": 28, "learningDuration": 7, "learningThreshold":
        0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv": true},
        "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when a new Microsoft 365 teams app or bot is installed as
        a means of establishing persistence.\n\n## Strategy\nMonitor Microsoft 365
        audit logs to look for events with an `@evt.name` value of `AppInstalled`,
        where the `AddOnType` has a value of `1` OR `4` and a new `@AddOnName` is
        observed.\n\nAccording to [Microsoft][1], the following values indicate the
        types of add-ons that exist:\n- `1` - Indicates a bot.\n- `2` - Indicates
        a connector.\n- `3` - Indicates a tab.\n\nHowever, some add-ons use the value
        `4` for existing teams apps that could be potentially unapproved bots or applications
        that could be malicious.\n\n## Triage and response\n1. Determine if the user
        `{{@usr.email}}` intended to install `{{@AddOnName}}`.\n2. If `{{@usr.email}}`
        is not responsible for installing `{{@AddOnName}}`, investigate `{{@usr.email}}`
        for anomalous activity. If necessary, initiate your company''s incident response
        (IR) process.\n\n[1]: https://learn.microsoft.com/en-us/purview/audit-log-detailed-properties\n\n##
        Changelog\nUpdated rule name and query to include bots.", "tags": ["source:microsoft-365",
        "scope:microsoft-teams", "mitre_platform:saas", "mitre_platform:office-suite",
        "technique:T1137-office-application-startup", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "mitre_platform:saas", "source:microsoft-365",
        "tactic:TA0003-persistence", "mitre_platform:cloud", "mitre_platform:office-suite",
        "technique:T1137-office-application-startup", "scope:microsoft-teams"], "version":
        87, "id": "qdk-m4v-gw0", "updatedAt": 1736369574034, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "A potentially malicious file was sent
        in a Microsoft Teams message", "createdAt": 1696319207984, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:microsoft-365 @AppAccessContext.ClientAppName:\"Microsoft
        Teams Services\" @evt.name:FileUploaded @SourceFileName:(*.exe OR *.msi OR
        *.bin OR *.dll OR *.bat OR *.ps1 OR *.vbs OR *.js OR *.scr OR *.zip OR *.rar
        *.7z *.cab OR *.tar OR *.gz OR *.bz2)", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@SourceFileName"], "aggregation": "cardinality",
        "name": "teams_message_with_malicious_link"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "teams_message_with_malicious_link > 0"}], "message": "## Goal\nDetect when
        a potentially malicious file is sent in Microsoft Teams. Threat actors sometimes
        send malicious files to unsuspecting users as a means of initial access.\n\n##
        Strategy\nMonitor Microsoft 365 Sharepoint audit logs to look for the operation
        [`FileUploaded`][1]. When a file is shared in Teams, it utilizes the underlying
        Microsoft Office APIs to upload the file using SharePoint. The Teams file
        uploads are audited within the Microsoft Office\u2019s activity log as SharePoint
        file operations. To differentiate Teams file uploads from those of other services,
        we use the `AppAccessContext.ClientAppName` attribute with the value of `Microsoft
        Teams Chat Files`. This detection identifies when a file with any of the following
        extensions is uploaded: \n- exe       \n- msi \n- bin \n- dll \n- bat \n-
        ps1 \n- vbs\n- js \n- scr \n- zip \n- rar\n- 7z \n- cab \n- tar \n- gz \n-
        bz2\n\n## Triage and response\n1. Investigate the potentially malicious file:
        `{{@SourceFileName}}` that was sent by viewing the Sharepoint link: `{{@ObjectId}}`
        containing the file.\n2. Determine if the user `{{@usr.email}}` intended to
        send the observed file.\n3. If `{{@usr.email}}` didn''t intend to send the
        observed file or happens to be a guest or external user:\n    * Investigate
        other activities performed by the user `{{@usr.email}}` using the Cloud SIEM
        - User Investigation dashboard.\n    * Begin your organization''s incident
        response process and investigate.\n\n[1]: https://learn.microsoft.com/en-us/purview/audit-log-activities",
        "tags": ["technique:T1566-phishing", "source:microsoft-365", "scope:microsoft-teams",
        "technique:T1199-trusted-relationship", "mitre_platform:saas", "mitre_platform:office-suite",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "technique:T1199-trusted-relationship", "technique:T1566-phishing",
        "mitre_platform:saas", "source:microsoft-365", "mitre_platform:office-suite",
        "tactic:TA0001-initial-access", "mitre_platform:cloud", "scope:microsoft-teams"],
        "version": 88, "id": "def-000-8ui", "updatedAt": 1736369574055, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "A user received an anomalous number
        of AccessDenied errors", "createdAt": 1664178446754, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @error.kind:AccessDenied",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@evt.name"], "aggregation": "cardinality", "name": "unique_events_denied"}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 1800, "keepAlive": 1800}, "cases": [{"name": "", "status":
        "medium", "notifications": []}], "message": "## Goal\nDetect when a user is
        assessing privileges in AWS through API bruteforcing technique.\n\n## Strategy\nThis
        rule lets you monitor CloudTrail to detect when the error message of `AccessDenied`
        is returned on an anomalous number of unique API calls.\n\n## Triage and response\n1.
        Determine if `{{@userIdentity.arn}}` should be attempting to use the identified
        API calls: `{{@evt.name}}`.\n   * Use the Cloud SIEM - User Investigation
        dashboard to assess user activity.\n2. Contact the user to see if they intended
        to make these API calls.\n3. If the user did not make the API calls:\n   *
        Rotate the credentials.\n   * Investigate to see what API calls might have
        been made that were successful throughout the rest of the environment.", "tags":
        ["scope:amazon", "iaas:aws", "source:cloudtrail", "technique:T1069-permission-groups-discovery",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "mitre_platform:cloud", "technique:T1069-permission-groups-discovery",
        "tactic:TA0007-discovery", "scope:amazon", "iaas:aws", "mitre_platform:iaas",
        "source:cloudtrail"], "version": 88, "id": "9el-i95-dnl", "updatedAt": 1736369574075,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS AMI Made Public", "createdAt": 1629705615945,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @evt.name:ModifyImageAttribute @requestParameters.launchPermission.add.items.group:\"all\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600, "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "", "status":
        "high", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when an AMI is made public.\n\n## Strategy\nThis rule lets you monitor these
        CloudTrail API calls to detect if an AMI is made public.\n\n* [ModifyImageAttribute][1]\n\nThis
        rule inspects the `@requestParameters.launchPermission.add.items.group` array
        to determine if the string `all` is contained. This is the indicator which
        means the image is made public.\n\n## Triage and response\n1. Determine if
        the AMI (`@requestParameters.imageId`) should be made public using CloudTrail
        logs.\n2. Investigate the following ARN (`{{@userIdentity.arn}}`) that made
        the AMI public.\n3. Contact the user to see if they intended to make the image
        public.\n4. If the user did not make the API call:\n    * Rotate the credentials.\n    *
        Investigate if the same credentials made other unauthorized API calls.\n    *
        Revert AMI permissions to the original state.\n    * Begin your company''s
        IR process and investigate.\n\n## Changelog\n11 November 2022 - Add steps
        to Triage and response section.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-image-attribute.html#examples",
        "tags": ["security:compliance", "scope:ec2", "iaas:aws", "tactic:TA0009-collection",
        "source:cloudtrail", "technique:T1530-data-from-cloud-storage", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas", "security:attack",
        "iaas:aws", "tactic:TA0009-collection", "security:compliance", "technique:T1530-data-from-cloud-storage",
        "scope:ec2", "mitre_platform:cloud", "source:cloudtrail"], "version": 88,
        "id": "93d-bf1-e17", "updatedAt": 1736369574520, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS CloudTrail configuration modified",
        "createdAt": 1629705619734, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @evt.name:StopLogging", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "cloudtrail_trail_stopped"}, {"query": "source:cloudtrail @evt.name:DeleteTrail",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "cloudtrail_trail_deleted"},
        {"query": "source:cloudtrail @evt.name:UpdateTrail", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "cloudtrail_trail_updated"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 7200},
        "cases": [{"name": "trail deleted", "status": "medium", "notifications": [],
        "condition": "cloudtrail_trail_deleted > 0"}, {"name": "trail stopped", "status":
        "low", "notifications": [], "condition": "cloudtrail_trail_stopped > 0"},
        {"name": "trail updated", "status": "info", "notifications": [], "condition":
        "cloudtrail_trail_updated > 0"}], "message": "## Goal\nDetect when an attacker
        is trying to evade defenses by modifying CloudTrail.\n\n## Strategy\nThis
        rule detects if a user is modifying CloudTrail by monitoring the following
        CloudTrail API calls:\n- [StopLogging][1]\n- [DeleteTrail][2]\n- [UpdateTrail][3]\n\n##
        Triage and response\n1. Review the `@responseElements` in the `{{@evt.name}}`
        event to determine the scope of the changes.\n2. Determine if the user ARN
        (`{{@userIdentity.arn}}`) intended to make a CloudTrail modification.\n3.
        If the user did not make the API call:\n    * Rotate the credentials.\n    *
        Investigate if the same credentials made other unauthorized API calls.\n\n[1]:
        https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_StopLogging.html\n[2]:
        https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_DeleteTrail.html\n[3]:
        https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_UpdateTrail.html",
        "tags": ["iaas:aws", "scope:cloudtrail", "source:cloudtrail", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "scope:cloudtrail", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "cf4-844-4a0", "updatedAt": 1736369574545, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS CloudWatch log group deleted", "createdAt":
        1631618540876, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:DeleteLogGroup -@level:Error -@http.useragent:(cloudformation.amazonaws.com
        OR *www.terraform.io*) -@userIdentity.invokedBy:cloudformation.amazonaws.com",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a CloudWatch Log Group is deleted.
        \n\n## Strategy\nDetect a successful `@evt.name:DeleteLogGroup` event.\n\n##
        Triage and response\n1. Ensure that the `{{@requestParameters.logGroupName}}`
        log group is not used for auditing or security purposes.\n2. If it is then:\n    *
        Ensure that the user: `{{@userIdentity.session_name}}` should be making this
        API call to your `{{env}}` environment.\n    * Consider adding to the allowlist
        the log group name: `{{@requestParameters.logGroupName}}` through a [suppression
        list][1].\n3. If not, begin your company''s IR process and investigate.\n\n##
        Changelog\n11 October 2022 - updated severity.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["iaas:aws", "scope:amazon-cloudwatch", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud", "iaas:aws", "scope:amazon-cloudwatch", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "bif-xha-5if", "updatedAt": 1736369574664, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS CloudWatch rule disabled or deleted",
        "createdAt": 1631618540663, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventSource:events.amazonaws.com @evt.name:(DisableRule
        OR DeleteRule) -@userIdentity.invokedBy:(backup.amazonaws.com OR schemas.amazonaws.com
        OR cloudformation.amazonaws.com)", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "cloudwatch_disable_or_delete_rule"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "cloudwatch_disable_or_delete_rule > 0"}], "message": "## Goal\nDetect when
        a CloudWatch rule has been disabled or deleted.\n\n## Strategy\nThis rule
        lets you monitor CloudTrail and detect if a [`DisableRule`][1] or [`DeleteRule`][2]
        API call has occurred. An attacker may delete rules in an attempt to evade
        defenses.\n\n## Triage and response\n1. Determine if `{{@userIdentity.arn}}`
        should have made the `{{@evt.name}}` API call.\n2. If the API call was **not**
        made legitimately by the user:\n  * Rotate user credentials.\n  * Determine
        what other API calls were made by the user.\n  * Enable or create a rule using
        the `aws-cli` commands [`enable-rule`][4] or [`put-rule`][3], or reference
        the [AWS documentation][5] to revert the rules back to the last known good
        state.\n3. If the API call was made legitimately by the user:\n  * Determine
        if the user was authorized to make that change.\n  * If **Yes**, consider
        including the EventBus name in a [suppression list][6]: `{{@requestParameters.eventBusName}}`.\n  *
        If **No**, enable or create a rule using the `aws-cli` commands [`enable-rule`][4]
        or [`put-rule`][3], respectively, or reference the [AWS documentation][5]
        to revert the rules back to the last known good state.\n    * Begin your company''s
        IR process and investigate.\n\n## Changelog\n* 4 October 2022 - Updated severity\n\n[1]:
        https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteRule.html\n[2]:
        https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/events/put-rule.html\n[4]:
        https://docs.aws.amazon.com/cli/latest/reference/events/enable-rule.html\n[5]:
        https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-rules.html\n[6]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["iaas:aws", "scope:amazon-cloudwatch", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud", "iaas:aws", "scope:amazon-cloudwatch", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "dkk-6z8-rmg", "updatedAt": 1736369574689, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Config modified", "createdAt": 1629705616883,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @evt.name:(StopConfigurationRecorder OR DeleteDeliveryChannel)", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "aws_config_deleted_or_stopped"}, {"query":
        "source:cloudtrail @evt.name:(PutDeliveryChannel OR PutConfigurationRecorder)",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "aws_config_modified"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "Deleted/Stopped", "status": "low", "notifications": [], "condition":
        "aws_config_deleted_or_stopped > 0"}, {"name": "Modified", "status": "info",
        "notifications": [], "condition": "aws_config_modified > 0"}], "message":
        "## Goal\nDetect when an attacker is trying to evade defenses by disabling
        or modifying AWS Config.\n\n## Strategy\nThis rule lets you monitor these
        AWS Config API calls per [CIS-AWS-4.9: Ensure a log metric filter and alarm
        exist for AWS Config configuration changes][5]:\n\n* [StopConfigurationRecorder][1]
        \n* [DeleteDeliveryChannel][2] \n* [PutDeliveryChannel][3]\n* [PutConfigurationRecorder][4]\n\n##
        Triage and response\n1. Determine which if {{@userIdentity.arn}} should have
        done a {{@evt.name}} to AWS Config.\n2. If the user did not make the API call:\n   *
        Rotate the credentials.\n   * Investigate if the same credentials made other
        unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/config/latest/APIReference/API_StopConfigurationRecorder.html\n[2]:
        https://docs.aws.amazon.com/config/latest/APIReference/API_DeleteDeliveryChannel.html\n[3]:
        https://docs.aws.amazon.com/config/latest/APIReference/API_PutDeliveryChannel.html\n[4]:
        https://docs.aws.amazon.com/config/latest/APIReference/API_PutConfigurationRecorder.html\n[5]:
        https://docs.aws.amazon.com/config/latest/developerguide/operational-best-practices-for-cis_aws_benchmark_level_2.html\n\n##
        Changelog\n* 1 April 2022 - Updated rule and signal message.\n* 10 October
        2022 - Updated severities.", "tags": ["security:compliance", "iaas:aws", "control:4.9",
        "requirement:Monitoring", "framework:cis-aws", "scope:amazon-config", "source:cloudtrail",
        "technique:T1562-impair-defenses", "mitre_platform:iaas", "tactic:TA0005-defense-evasion",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "source:cloudtrail", "framework:cis-aws", "scope:amazon-config", "iaas:aws",
        "control:4.9", "security:compliance", "requirement:Monitoring", "mitre_platform:iaas",
        "mitre_platform:cloud"], "version": 87, "id": "d17-702-f4a", "updatedAt":
        1736369574755, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS ConsoleLogin with MFA triggered Impossible Travel scenario", "createdAt":
        1638460540800, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:ConsoleLogin -@level:Error (@userIdentity.sessionContext.attributes.mfaAuthenticated:true
        OR @additionalEventData.MFAUsed:Yes) -@threat_intel.results.category:corp_vpn",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@network.client.geoip", "metrics": ["@network.client.geoip"],
        "aggregation": "geo_data", "name": "impossible_travel_mfa"}], "options": {"evaluationWindow":
        0, "detectionMethod": "impossible_travel", "maxSignalDuration": 86400, "keepAlive":
        21600, "impossibleTravelOptions": {"baselineUserLocations": true, "detectIpTransition":
        false}}, "cases": [{"name": "impossible travel event for ConsoleLogin with
        MFA", "status": "low", "notifications": []}], "message": "## Goal\nDetect
        an Impossible Travel event when a `@userIdentity.type:` `{{@userIdentity.type}}`
        performs a `consoleLogin` with a multi-factor authentication (MFA) device.\n\n##
        Strategy\nThe Impossible Travel detection type''s algorithm compares the GeoIP
        data of the last log and the current log to determine if the user with `@userIdentity.session_name:`
        `{{@userIdentity.session_name}}` traveled more than 500km at over 1,000km/h
        and the user used MFA.\n\n## Triage and response\n1. Determine if `{{@userIdentity.session_name}}`
        should be connecting from  `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}` in a
        short period of time.\n2. If the user should not be connecting from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`, then
        consider isolating the account and reset credentials.\n3. Use the Cloud SIEM
        - User Investigation dashboard to audit any user actions that may have occurred
        after the illegitimate login. \n\n## Changelog\n* 10 March 2022 - Updated
        rule.\n* 15 December 2022 - Updated rule to cover edge case.\n* 30 September
        2024 - Updated query to replace attribute `@threat_intel.results.subcategory:anonymizer`.",
        "tags": ["iaas:aws", "scope:cloudtrail", "technique:T1078-valid-accounts",
        "source:cloudtrail", "mitre_platform:iaas", "tactic:TA0001-initial-access",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "scope:cloudtrail", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "iaas:aws", "mitre_platform:iaas", "source:cloudtrail"], "version": 87, "id":
        "oky-4op-88y", "updatedAt": 1736369574777, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS ConsoleLogin without MFA triggered
        Impossible Travel scenario", "createdAt": 1638460541276, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "@evt.name:ConsoleLogin -@level:Error
        (@userIdentity.sessionContext.attributes.mfaAuthenticated:false OR @additionalEventData.MFAUsed:No)
        -@threat_intel.results.category:corp_vpn", "groupByFields": ["@userIdentity.session_name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@network.client.geoip",
        "metrics": ["@network.client.geoip"], "aggregation": "geo_data", "name": "impossible_travel_no_mfa"}],
        "options": {"evaluationWindow": 0, "detectionMethod": "impossible_travel",
        "maxSignalDuration": 86400, "keepAlive": 21600, "impossibleTravelOptions":
        {"baselineUserLocations": true, "detectIpTransition": false}}, "cases": [{"name":
        "", "status": "medium", "notifications": []}], "message": "## Goal\nDetect
        an Impossible Travel event when a `@userIdentity.type:` `{{@userIdentity.type}}`
        performs a `consoleLogin` without a multi-factor authentication (MFA) device.\n\n##
        Strategy\nThe Impossible Travel detection type''s algorithm compares the GeoIP
        data of the last log and the current log to determine if the user with `@userIdentity.session_name:`
        `{{@userIdentity.session_name}}` traveled more than 500km at over 1,000km/h
        and the account does not have MFA enabled.\n\n## Triage and response\n1. Determine
        if `{{@userIdentity.session_name}}` should be connecting from  `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}` in a
        short period of time.\n2. If the user should not be connecting from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`, then
        consider isolating the account and reset credentials.\n3. Use the Cloud SIEM
        - User Investigation dashboard to audit any user actions that may have occurred
        after the illegitimate login. \n\n## Changelog\n* 30 September 2024 - Updated
        query to replace attribute `@threat_intel.results.subcategory:anonymizer`.",
        "tags": ["iaas:aws", "scope:cloudtrail", "technique:T1078-valid-accounts",
        "source:cloudtrail", "mitre_platform:iaas", "tactic:TA0001-initial-access",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "scope:cloudtrail", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "iaas:aws", "mitre_platform:iaas", "source:cloudtrail"], "version": 87, "id":
        "spm-un2-i9l", "updatedAt": 1736369574798, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Detective Graph deleted", "createdAt":
        1631642350423, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @eventSource:detective.amazonaws.com @evt.name:DeleteGraph",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600, "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "", "status":
        "medium", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when a user deletes an Amazon Detective behavior graph.\n\n## Strategy\nThis
        rule lets you monitor this CloudTrail API call to detect if a user has deleted
        an Amazon Detective behavior graph:\n\n* [DeleteGraph][1]\n\n## Triage and
        response\n1. Determine if the behavior graph should have been deleted.\n2.
        Determine which user ({{@userIdentity.arn}}) in your organization deleted
        the behavior graph.\n3. If the user did not make the API call:\n   * Rotate
        the credentials.\n   * Investigate if the same credentials made other unauthorized
        API calls.\n\n## Changelog\n* 1 April 2022 - Updated rule and signal message.\n*
        18 November 2022 - Updated severity.\n\n[1]: https://docs.aws.amazon.com/detective/latest/APIReference/API_DeleteGraph.html\n\n",
        "tags": ["iaas:aws", "technique:T1562-impair-defenses", "source:cloudtrail",
        "scope:aws-detective", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas",
        "technique:T1562-impair-defenses", "source:cloudtrail", "scope:aws-detective"],
        "version": 87, "id": "9fq-2av-prp", "updatedAt": 1736369574905, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Disable Cloudtrail with event selectors",
        "createdAt": 1652794196329, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventSource:cloudtrail.amazonaws.com @evt.name:PutEventSelectors
        @requestParameters.eventSelectors.includeManagementEvents:false", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "disable_cloudtrail_with_event_selectors"},
        {"query": "source:cloudtrail @eventSource:cloudtrail.amazonaws.com @evt.name:PutEventSelectors
        @requestParameters.eventSelectors.includeManagementEvents:false @responseElements.eventSelectors.dataResources.type:(\"AWS::S3::Object\"
        AND \"AWS::Lambda::Function\") @responseElements.eventSelectors.readWriteType:ReadOnly",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "public_poc"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Public POC", "status": "medium",
        "notifications": [], "condition": "public_poc > 0"}, {"name": "IncludeManagementEvents
        set to False", "status": "low", "notifications": [], "condition": "disable_cloudtrail_with_event_selectors
        > 0"}], "message": "## Goal\nDetect when CloudTrail has been disabled by creating
        an event selector on the Trail.\n\n## Strategy\nThis rule lets you monitor
        CloudTrail and detect if an attacker used the [`PutEventSelectors`][1] API
        call to filter out management events, effectively disabling CloudTrail for
        the specified Trail.\n\nSee the [public Proof of Concept][2] (PoC) for this
        attack.\n\n## Triage and response\n1. Determine if `{{@userIdentity.arn}}`
        should have made the `{{@evt.name}}` API call.\n2. If the API call was **not**
        made legitimately by the user:\n  * Rotate user credentials.\n  * Determine
        what other API calls were made by the user.\n  * Remove the event selector
        using the `aws-cli` command [`put-event-selectors`][3] or use the [AWS console][4]
        to revert the event selector back to the last known good state.\n3. If the
        API call was made legitimately by the user:\n  * Determine if the user was
        authorized to make that change.\n  * If **Yes**, work with the user to ensure
        that CloudTrail logs for the affected account `{{@userIdentity.accountId}}`
        are being sent to the Datadog platform.\n  * If **No**, remove the event selector
        using the `aws-cli` command [`put-event-selectors`][3] or reference the [AWS
        console documentation][4] to revert the event selector back to the last known
        good state.\n\n## Changelog\n* 17 October 2022 - Updated tags.\n\n[1]: https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_PutEventSelectors.html\n[2]:
        https://github.com/RhinoSecurityLabs/Cloud-Security-Research/tree/master/AWS/cloudtrail_guardduty_bypass\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/cloudtrail/put-event-selectors.html\n[4]:
        https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-update-a-trail-console.html",
        "tags": ["iaas:aws", "scope:cloudtrail", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "scope:cloudtrail", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "tar-dhx-0hv", "updatedAt": 1736369574930, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS EBS Snapshot Made Public", "createdAt":
        1629705612381, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:ModifySnapshotAttribute @requestParameters.createVolumePermission.add.items.group:\"all\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600, "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "", "status":
        "high", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when an EBS snapshot is made public.\n\n## Strategy\nThis rule lets you monitor
        these CloudTrail API calls to detect when an EBS snapshot is made public:\n\n*
        [ModifySnapshotAttribute][1]\n\nThis rule inspects the `@requestParameters.createVolumePermission.add.items.group`
        array to determine if the string `all` is contained. This is the indicator
        which means the EBS snapshot is made public.\n\n## Triage and response\n1.
        Determine if the EBS snapshot should be made public.\n2. Determine which user,
        `{{@@userIdentity.arn}}`, in your organization made the EBS snapshot public.\n3.
        Contact the user to see if they intended to make the EBS snapshot public.\n4.
        If the user did not make the API call:\n    * Rotate the credentials.\n    *
        Investigate if the same credentials made other unauthorized API calls.\n    *
        Revert AMI permissions to the original state.\n    * Begin your company''s
        IR process and investigate.\n\n## Changelog\n11 November 2022 - Added additional
        triage and response steps.\n\n[1]: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ec2/modify-snapshot-attribute.html#examples\n",
        "tags": ["security:compliance", "scope:ec2", "iaas:aws", "tactic:TA0009-collection",
        "source:cloudtrail", "technique:T1530-data-from-cloud-storage", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas", "security:attack",
        "iaas:aws", "tactic:TA0009-collection", "security:compliance", "technique:T1530-data-from-cloud-storage",
        "scope:ec2", "mitre_platform:cloud", "source:cloudtrail"], "version": 87,
        "id": "f7b-f88-363", "updatedAt": 1736369574947, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS EBS Snapshot possible exfiltration",
        "createdAt": 1655223201146, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @evt.name:CreateSnapshot -@userIdentity.invokedBy:(dlm.amazonaws.com
        OR events.amazonaws.com OR backup.amazonaws.com)  (-@userIdentity.assumed_role:(*orca*
        OR *wiz*) -@responseElements.description:\"Orca automatically generated snapshot\"
        -@requestParameters.description:auto-generatedbyWiz -@responseElements.description:\"auto-generated
        by Wiz\")", "groupByFields": ["@responseElements.snapshotId"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "snapshot_created"},
        {"query": "source:cloudtrail @evt.name:ModifySnapshotAttribute @requestParameters.attributeType:CREATE_VOLUME_PERMISSION
        -@userIdentity.invokedBy:(dlm.amazonaws.com OR events.amazonaws.com OR backup.amazonaws.com)
        (@requestParameters.createVolumePermission.add.items.userId:* OR @requestParameters.createVolumePermission.add.items.group:*)
        -@requestParameters.createVolumePermission.add.items.userId:(\"135916806842\"
        OR \"463932680998\" OR \"727815099310\" OR \"553950354547\" OR \"784971140435\"
        OR \"222606875197\")", "groupByFields": ["@requestParameters.snapshotId"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "snapshot_shared"}], "options": {"evaluationWindow": 7200, "detectionMethod":
        "threshold", "maxSignalDuration": 7200, "keepAlive": 7200}, "cases": [{"name":
        "EBS Snapshot created then shared", "status": "medium", "notifications": [],
        "condition": "snapshot_created > 0 && snapshot_shared > 0"}, {"name": "EBS
        Snapshot shared", "status": "info", "notifications": [], "condition": "snapshot_shared
        > 0"}], "message": "## Goal\nDetect the possible exfiltration of an EBS snapshot.\n\n##
        Strategy\nThis rule allows you to monitor CloudTrail and detect the following
        API calls within a 15 minute time window:\n\n* [`CreateSnapshot`][1]\n* [`ModifySnapshotAttribute`][2]\n\nAn
        attacker can create a EBS snapshot from the EBS volume and modify the permissions
        of the snapshot to allow it to be shared [publicly][3] or with another AWS
        account. Using an attacker-controlled account, a new EBS volume can be created
        from the snapshot and attached to an EC2 instance for analysis.\n\n## Triage
        and response\n1. Determine if `{{@userIdentity.arn}}` should have made the
        API calls.\n2. If the API call was not made by the user:\n  * Rotate user
        credentials.\n  * Determine what other API calls were made by the user.\n  *
        Remove any snapshot attributes generated by the user with the `aws-cli` command
        [`modify-snapshot-attribute`][4].\n  * Begin your organization''s incident
        response process and investigate.\n3. If the API calls were made by the user:\n  *
        Determine if the user should be performing these API calls.\n  * If **No**,
        see if other API calls were made by the user and determine if they warrant
        further investigation.\n\n## Changelog\n10 October 2022 - Updated query and
        severity.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSnapshot.html\n[2]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotAttribute.html\n[3]:
        https://docs.datadoghq.com/security/default_rules/cloudtrail-aws-ebs-snapshot-made-public/\n[4]:
        https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-snapshot-attribute.html",
        "tags": ["scope:ec2", "technique:T1537-transfer-data-to-cloud-account", "iaas:aws",
        "source:cloudtrail", "mitre_platform:iaas", "tactic:TA0010-exfiltration",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["tactic:TA0010-exfiltration",
        "security:attack", "mitre_platform:cloud", "iaas:aws", "scope:ec2", "technique:T1537-transfer-data-to-cloud-account",
        "source:cloudtrail", "mitre_platform:iaas"], "version": 87, "id": "nfk-un1-yds",
        "updatedAt": 1736369574973, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS EBS default encryption disabled", "createdAt": 1629705618314,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(cloudtrail
        OR amazon-security-lake) @eventSource:ec2.amazonaws.com @evt.name:DisableEbsEncryptionByDefault",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when an EBS encryption is disabled
        by default. \n\n## Strategy\nMonitor CloudTrail and detect when EBS encryption
        is disabled by default via the following API call:\n\n* [DisableEbsEncryptionByDefault][1]\n\n##
        Triage and response\n1. Determine which user in your organization owns the
        API key that made this API call.\n2. Contact the user and let them know that
        it is best practice to enable EBS encryption by default.\n3. Re-enable EBS
        encryption by default.\n\nFor more information about Amazon EBS Encryption,
        check out the [Amazon EBS Encryption][2] documentation.\n\n## Changelog\n*
        18 March 2022 - Rule query and severity updated.\n* 16 November 2022 - Rule
        query updated.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html\n[2]:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html\n",
        "tags": ["security:compliance", "scope:ec2", "iaas:aws", "framework:cis-aws",
        "control:2.2.1", "source:cloudtrail", "technique:T1562-impair-defenses", "mitre_platform:iaas",
        "tactic:TA0005-defense-evasion", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:ec2",
        "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses", "security:compliance",
        "framework:cis-aws", "mitre_platform:cloud", "tactic:TA0005-defense-evasion",
        "control:2.2.1", "source:cloudtrail"], "version": 87, "id": "ee2-dc1-3c1",
        "updatedAt": 1736369575010, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS EC2 Instance Victim to Metadata DNS Rebind Attack",
        "createdAt": 1629705613465, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries":
        [{"query": "source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MetadataDNSRebind)",
        "groupByFields": ["instance-id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "a > 0"}], "message": "## WARNING: This rule is being deprecated on 6 March
        2023.\n\n- Cloud SIEM team performs a regular audit of all detection rules
        to maintain high signal quality. We will be replacing this rule with an improved
        third party detection rule after the deprecation date. This rule will allow
        you to receive coverage with all GuardDuty detections and correlate them with
        other security signals fired.\n\n## Goal\nDetect when an EC2 instance makes
        a DNS request and resolves to the AWS metadata IP address (169.254.169.254).\n\n##
        Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n*
        [UnauthorizedAccess:EC2/MetadataDNSRebind][2]\n\n\n## Triage and response\n1.
        Determine which process made the DNS request. The DNS request can be found
        in the samples.\n2. Ensure the process is not a victim of an SSRF attack to
        steal the AWS EC2 Instance profile''s STS credentials.  \n2. If the STS credentials
        are compromised:\n   * Review the AWS [documentation][3] on revoking the session.\n\n##
        Changelog\n1 November 2022 - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#unauthorizedaccess-ec2-metadatadnsrebind\n[3]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_revoke-sessions.html\n",
        "tags": ["scope:ec2", "source:guardduty", "tactic:TA0006-credential-access",
        "mitre_platform:iaas", "security:attack", "technique:T1522-cloud-instance-metadata-api",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:ec2", "tactic:TA0006-credential-access",
        "security:attack", "mitre_platform:iaas", "source:guardduty", "technique:T1522-cloud-instance-metadata-api"],
        "version": 3, "id": "342-9e0-678", "updatedAt": 1734518915567, "blocking":
        false, "deprecationDate": 1678060800000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "AWS EC2 instance Sending spam emails", "createdAt": 1629705619726,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": true, "queries": [{"query": "source:guardduty
        @evt.name:(Backdoor\\:EC2\\/Spambot)", "groupByFields": ["instance-id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "a > 0"}], "message": "## WARNING: This rule is being deprecated
        on 6 March 2023.\n\n- Cloud SIEM team performs a regular audit of all detection
        rules to maintain high signal quality. We will be replacing this rule with
        an improved third party detection rule after the deprecation date. This rule
        will allow you to receive coverage with all GuardDuty detections and correlate
        them with other security signals fired.\n\n## Goal\nDetect when an EC2 instance
        is compromised and sending spam emails.\n\n## Strategy\nThis rule lets you
        monitor this [GuardDuty integration][1] finding:\n\n* [Backdoor:EC2/Spambot][2]\n\n\n##
        Triage and response\n1. Determine if the EC2 should be sending out email over
        port 25. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3]
        on remediating a compromised EC2 instance.\n\n## Changelog\n1 November 2022
        - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#backdoor-ec2-spambot\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n",
        "tags": ["scope:ec2", "source:guardduty", "tactic:TA0040-impact", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "scope:ec2", "tactic:TA0040-impact", "security:attack", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "source:guardduty"], "version": 3, "id": "a90-d33-371",
        "updatedAt": 1734518917599, "blocking": false, "deprecationDate": 1678060800000,
        "metadata": {"entities": null, "sources": null}, "creator": {"handle": "",
        "name": ""}, "updater": {"handle": "", "name": ""}}, {"name": "AWS EC2 instance
        communicated with a malicious server", "createdAt": 1629705620038, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": true, "queries": [{"query": "source:guardduty @evt.name:(Trojan\\:EC2\\/BlackholeTraffic
        OR Trojan\\:EC2\\/DropPoint OR Trojan\\:EC2\\/BlackholeTraffic\\!DNS OR Trojan\\:EC2\\/DriveBySourceTraffic\\!DNS
        OR Trojan\\:EC2\\/DropPoint\\!DNS OR Trojan\\:EC2\\/DGADomainRequest.B OR
        Trojan\\:EC2\\/DGADomainRequest.C\\!DNS OR Backdoor\\:EC2\\/C&CActivity.B\\!DNS
        OR Trojan\\:EC2\\/PhishingDomainRequest\\!DNS)", "groupByFields": ["instance-id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "a > 0"}], "message": "## WARNING: This rule is being deprecated on 6 March
        2023.\n\n- Cloud SIEM team performs a regular audit of all detection rules
        to maintain high signal quality. We will be replacing this rule with an improved
        third party detection rule after the deprecation date. This rule will allow
        you to receive coverage with all GuardDuty detections and correlate them with
        other security signals fired.\n\n## Goal\nDetect when an EC2 instance is communicating
        with a malicious server.\n\n## Strategy\nThis rule lets you monitor these
        [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/C&CActivity.B!DNS][2]\n*
        [Trojan:EC2/BlackholeTraffic][3]\n* [Trojan:EC2/DropPoint][4]\n* [Trojan:EC2/BlackholeTraffic!DNS][5]\n*
        [Trojan:EC2/DriveBySourceTraffic!DNS][6]\n* [Trojan:EC2/DropPoint!DNS][7]\n*
        [Trojan:EC2/DGADomainRequest.B][8]\n* [Trojan:EC2/DGADomainRequest.C!DNS][9]\n*
        [Trojan:EC2/DNSDataExfiltration][10]\n* [Trojan:EC2/PhishingDomainRequest!DNS][11]\n\n\n##
        Triage and response\n1. Determine which domain name or IP address triggered
        the signal. This can be found in the samples.\n2. If the instance is compromised:\n    *
        Review the AWS [documentation][12] on remediating a compromised EC2 instance.\n\n##
        Changelog\n1 November 2022 - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#backdoor-ec2-ccactivitybdns\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#trojan-ec2-blackholetraffic\n[4]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#trojan-ec2-droppoint\n[5]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#trojan-ec2-blackholetrafficdns\n[6]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#trojan-ec2-drivebysourcetrafficdns\n[7]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#trojan-ec2-droppointdns\n[8]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#trojan-ec2-dgadomainrequestb\n[9]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#trojan-ec2-dgadomainrequestcdns\n[10]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#trojan-ec2-dnsdataexfiltration\n[11]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#trojan-ec2-phishingdomainrequestdns\n[12]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n",
        "tags": ["scope:ec2", "source:guardduty", "technique:T1071-application-layer-protocol",
        "tactic:TA0011-command-and-control", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1071-application-layer-protocol",
        "scope:ec2", "tactic:TA0011-command-and-control", "security:attack", "mitre_platform:iaas",
        "source:guardduty"], "version": 3, "id": "f20-5ca-a05", "updatedAt": 1734518917599,
        "blocking": false, "deprecationDate": 1678060800000, "metadata": {"entities":
        null, "sources": null}, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "", "name": ""}}, {"name": "AWS EC2 instance communicating over
        unusual port", "createdAt": 1629705618487, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        true, "queries": [{"query": "source:guardduty @evt.name:(Behavior\\:EC2\\/NetworkPortUnusual)",
        "groupByFields": ["instance-id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "a > 0"}], "message": "## WARNING: This rule is being deprecated on 6 March
        2023.\n\n- Cloud SIEM team performs a regular audit of all detection rules
        to maintain high signal quality. We will be replacing this rule with an improved
        third party detection rule after the deprecation date. This rule will allow
        you to receive coverage with all GuardDuty detections and correlate them with
        other security signals fired.\n\n## Goal\nDetect when an EC2 instance is communicating
        over an unusual port.\n\n## Strategy\nThis rule lets you monitor this [GuardDuty
        integration][1] finding:\n\n* [Behavior:EC2/NetworkPortUnusual][2]\n\n\n##
        Triage and response\n1. Determine which port triggered the signal. This can
        be found in the samples.\n2. If the instance is compromised:\n   * Review
        the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n##
        Changelog\n1 November 2022 - updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#behavior-ec2-networkportunusual\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n",
        "tags": ["scope:ec2", "source:guardduty", "security:anomaly", "tactic:TA0011-command-and-control",
        "mitre_platform:iaas", "technique:T1571-non-standard-port", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:anomaly", "scope:ec2", "tactic:TA0011-command-and-control",
        "mitre_platform:iaas", "source:guardduty", "technique:T1571-non-standard-port"],
        "version": 3, "id": "6b8-6d0-cae", "updatedAt": 1734518898739, "blocking":
        false, "deprecationDate": 1678060800000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "AWS EC2 instance communicating with a cryptocurrency server",
        "createdAt": 1629705616177, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries":
        [{"query": "source:guardduty @evt.name:(CryptoCurrency\\:EC2\\/BitcoinTool.B\\!DNS
        OR CryptoCurrency\\:EC2\\/BitcoinTool.B)", "groupByFields": ["instance-id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "high", "notifications": [], "condition": "a > 0"}], "message": "## WARNING:
        This rule is being deprecated on 6 March 2023.\n\n- Cloud SIEM team performs
        a regular audit of all detection rules to maintain high signal quality. We
        will be replacing this rule with an improved third party detection rule after
        the deprecation date. This rule will allow you to receive coverage with all
        GuardDuty detections and correlate them with other security signals fired.\n\n##
        Goal\nDetect when an EC2 instance is communicating with a cryptocurrency server\n\n##
        Strategy\nThis rule lets you leverage GuardDuty to detect when an EC2 instance
        has made a DNS request or is communicating with an IP that is associated with
        cryptocurrency operations. The following GuardDuty Findings trigger this signal:\n\n*
        [CryptoCurrency:EC2/BitcoinTool.B!DNS][1]\n* [CryptoCurrency:EC2/BitcoinTool.B][2]\n\n\n##
        Triage and response\n1. Determine which domain name or IP address triggered
        the signal. This can be found in the samples. \n2. If the domain or IP address
        should not have been requested, open a security investigation, and determine
        which process requested the domain name or IP address.\n\n## Changelog\n*
        1 November 2022 - Updated links.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#cryptocurrency-ec2-bitcointoolbdns\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#cryptocurrency-ec2-bitcointoolb\n",
        "tags": ["scope:ec2", "source:guardduty", "tactic:TA0040-impact", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "scope:ec2", "tactic:TA0040-impact", "security:attack", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "source:guardduty"], "version": 3, "id": "ecb-6e7-738",
        "updatedAt": 1734518905058, "blocking": false, "deprecationDate": 1678060800000,
        "metadata": {"entities": null, "sources": null}, "creator": {"handle": "",
        "name": ""}, "updater": {"handle": "", "name": ""}}, {"name": "AWS EC2 instance
        communicating with malicious IP", "createdAt": 1629705612838, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": true, "queries": [{"query": "source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/MaliciousIPCaller.Custom)",
        "groupByFields": ["instance-id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "a > 0"}], "message": "## WARNING: This rule is being deprecated on 6 March
        2023.\n\n- Cloud SIEM team performs a regular audit of all detection rules
        to maintain high signal quality. We will be replacing this rule with an improved
        third party detection rule after the deprecation date. This rule will allow
        you to receive coverage with all GuardDuty detections and correlate them with
        other security signals fired.\n\n## Goal\nDetect when an EC2 instance makes
        an outbound network connection to a malcious IP address.\n\n## Strategy\nThis
        rule lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/MaliciousIPCaller.Custom][2]\n\n##
        Triage and response\n1. Determine which IP address triggered the signal. This
        can be found in the sample.\n2. If the instance is compromised:\n   * Review
        the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n##
        Changelog\n1 November 2022 - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#unauthorizedaccess-ec2-maliciousipcallercustom\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n",
        "tags": ["scope:ec2", "security:threat-intel", "source:guardduty", "technique:T1078-valid-accounts",
        "mitre_platform:iaas", "mitre_platform:cloud", "tactic:TA0001-initial-access"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "scope:ec2", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "mitre_platform:iaas", "source:guardduty", "security:threat-intel"], "version":
        3, "id": "933-c10-749", "updatedAt": 1734518907762, "blocking": false, "deprecationDate":
        1678060800000, "metadata": {"entities": null, "sources": null}, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "", "name": ""}}, {"name":
        "AWS EC2 instance conducting a port scan", "createdAt": 1629705614223, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": true, "queries": [{"query": "source:guardduty @evt.name:(Recon\\:EC2\\/Portscan)",
        "groupByFields": ["instance-id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "a > 0"}], "message": "## WARNING: This rule is being deprecated on 6 March
        2023.\n\n- Cloud SIEM team performs a regular audit of all detection rules
        to maintain high signal quality. We will be replacing this rule with an improved
        third party detection rule after the deprecation date. This rule will allow
        you to receive coverage with all GuardDuty detections and correlate them with
        other security signals fired.\n\n## Goal\nDetect when an EC2 instance is conducting
        a port scan.\n\n## Strategy\nThis rule lets you monitor this [GuardDuty integration][1]
        finding:\n\n* [Recon:EC2/Portscan][2]\n\n\n## Triage and response\n1. Determine
        why traffic from the EC2 instance appears to be conducting a port scan.\n2.
        If the instance is compromised:\n   * Review the AWS [documentation][3] on
        remediating a compromised EC2 instance.\n\n## Changelog\n* 17 October 2022
        - Updated tags.\n* 1 November 2022 - Updated links.\n \n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#recon-ec2-portscan\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n",
        "tags": ["scope:ec2", "source:guardduty", "technique:T1046-network-service-discovery",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1046-network-service-discovery", "scope:ec2",
        "security:attack", "tactic:TA0007-discovery", "source:guardduty", "mitre_platform:iaas"],
        "version": 3, "id": "e81-5e9-154", "updatedAt": 1734518915566, "blocking":
        false, "deprecationDate": 1678060800000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "AWS EC2 instance connecting to TOR as a relay", "createdAt":
        1629705613862, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries": [{"query":
        "source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorRelay)", "groupByFields":
        ["instance-id"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": ""}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600,
        "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "", "status": "high",
        "notifications": [], "condition": "a > 0"}], "message": "## WARNING: This
        rule is being deprecated on 6 March 2023.\n\n- Cloud SIEM team performs a
        regular audit of all detection rules to maintain high signal quality. We will
        be replacing this rule with an improved third party detection rule after the
        deprecation date. This rule will allow you to receive coverage with all GuardDuty
        detections and correlate them with other security signals fired.\n\n## Goal\nDetect
        when an EC2 instance is being used as a TOR relay.\n\n## Strategy\nThis rule
        lets you monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorRelay][2]\n\n\n##
        Triage and response\n1. Determine if the EC2 instance should be uses as a
        TOR relay. \n2. If the instance is compromised:\n   * Review the AWS [documentation][3]
        on remediating a compromised EC2 instance. \n\n## Changelog\n1 November 2022
        - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#unauthorizedaccess-ec2-torrelay\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n",
        "tags": ["scope:ec2", "source:guardduty", "tactic:TA0040-impact", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "scope:ec2", "tactic:TA0040-impact", "security:attack", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "source:guardduty"], "version": 3, "id": "86f-3ac-c70",
        "updatedAt": 1734518919709, "blocking": false, "deprecationDate": 1678060800000,
        "metadata": {"entities": null, "sources": null}, "creator": {"handle": "",
        "name": ""}, "updater": {"handle": "", "name": ""}}, {"name": "AWS EC2 instance
        inbound connections from TOR", "createdAt": 1629705615530, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": true, "queries": [{"query": "source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/TorIPCaller)",
        "groupByFields": ["instance-id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## WARNING: This rule is being deprecated on 6 March
        2023.\n\n- Cloud SIEM team performs a regular audit of all detection rules
        to maintain high signal quality. We will be replacing this rule with an improved
        third party detection rule after the deprecation date. This rule will allow
        you to receive coverage with all GuardDuty detections and correlate them with
        other security signals fired.\n\n## Goal\nDetect when an EC2 instance receives
        an inbound network connection from TOR.\n\n## Strategy\nThis rule lets you
        monitor this [GuardDuty integration][1] finding:\n\n* [UnauthorizedAccess:EC2/TorIPCaller][2]\n\n\n##
        Triage and response\n1. This is typically an informative signal. However,
        if this instance should not be publicly available, you should review the security
        group for this instance. \n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_unauthorized.html#unauthorized7\n",
        "tags": ["scope:ec2", "security:threat-intel", "source:guardduty", "technique:T1078-valid-accounts",
        "mitre_platform:iaas", "mitre_platform:cloud", "tactic:TA0001-initial-access"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "scope:ec2", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "mitre_platform:iaas", "source:guardduty", "security:threat-intel"], "version":
        3, "id": "152-b40-a1f", "updatedAt": 1734518901601, "blocking": false, "deprecationDate":
        1678060800000, "metadata": {"entities": null, "sources": null}, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "", "name": ""}}, {"name":
        "AWS EC2 instance involved in brute force attack", "createdAt": 1629705618015,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": true, "queries": [{"query": "source:guardduty
        @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce OR UnauthorizedAccess\\:EC2\\/RDPBruteForce
        OR Impact\\:EC2\\/WinRMBruteForce) @detail.service.resourceRole:ACTOR", "groupByFields":
        ["instance-id"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": "actor"}, {"query": "source:guardduty @evt.name:(UnauthorizedAccess\\:EC2\\/SSHBruteForce
        OR UnauthorizedAccess\\:EC2\\/RDPBruteForce OR Impact\\:EC2\\/WinRMBruteForce)
        @detail.service.resourceRole:TARGET", "groupByFields": ["instance-id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "target"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "Actor", "status": "high", "notifications": [], "condition": "actor
        > 0"}, {"name": "Target", "status": "info", "notifications": [], "condition":
        "target > 0"}], "message": "## WARNING: This rule is being deprecated on 6
        March 2023.\n\n- Cloud SIEM team performs a regular audit of all detection
        rules to maintain high signal quality. We will be replacing this rule with
        an improved third party detection rule after the deprecation date. This rule
        will allow you to receive coverage with all GuardDuty detections and correlate
        them with other security signals fired.\n\n## Goal\nDetect Brute Force Attacks\n\n##
        Strategy\nLeverage GuardDuty and detect when an attacker is performing a brute
        force attack. The following are GuardDuty findings trigger this signal:\n\n*
        [UnauthorizedAccess:EC2/SSHBruteForce][1]\n* [UnauthorizedAccess:EC2/RDPBruteForce][2]\n\n\n##
        Triage and response\n1. Inspect the role of the EC2 instance in the attack.
        Find the role in the signal name - either `ACTOR` or `TARGET`.\n   * If you
        are the `TARGET` and the instance is available on the internet, expect to
        see IPs scanning your systems.\n   * If you are the `TARGET` and the instance
        is **not** available on the internet, this means a host on your internal network
        is scanning your EC2 instance. Open an investigation.\n   * If you are the
        `ACTOR`, this means that your instance is performing brute force attacks on
        other systems. Open an investigation.\n\n## Changelog\n1 November 2022 - Updated
        links.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#unauthorizedaccess-ec2-sshbruteforce\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#unauthorizedaccess-ec2-rdpbruteforce\n",
        "tags": ["scope:ec2", "source:guardduty", "tactic:TA0006-credential-access",
        "technique:T1110-brute-force", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "scope:ec2", "tactic:TA0006-credential-access", "security:attack",
        "mitre_platform:iaas", "source:guardduty", "technique:T1110-brute-force"],
        "version": 3, "id": "bb9-ecf-230", "updatedAt": 1734518901599, "blocking":
        false, "deprecationDate": 1678060800000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "AWS EC2 instance network traffic volume unusual", "createdAt":
        1629705617373, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries": [{"query":
        "source:guardduty @evt.name:(Behavior\\:EC2\\/TrafficVolumeUnusual)", "groupByFields":
        ["instance-id"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": ""}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "a > 0"}], "message": "## WARNING: This rule is being deprecated on 6 March
        2023.\n\n- Cloud SIEM team performs a regular audit of all detection rules
        to maintain high signal quality. We will be replacing this rule with an improved
        third party detection rule after the deprecation date. This rule will allow
        you to receive coverage with all GuardDuty detections and correlate them with
        other security signals fired.\n\n## Goal\nDetect when an EC2 instance network
        traffic volume is unusual.\n\n## Strategy\nThis rule lets you monitor this
        [GuardDuty integration][1] finding:\n\n* [Behavior:EC2/TrafficVolumeUnusual][2]\n\n##
        Triage and response\n1. Determine which port triggered the signal. This can
        be found in the samples.\n2. If the instance is compromised:\n   * Review
        the AWS [documentation][3] on remediating a compromised EC2 instance.\n\n##
        Changelog\n* 10 October 2022 - Updated tags.\n* 1 November 2022 - Updated
        links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#behavior-ec2-trafficvolumeunusual\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n",
        "tags": ["scope:ec2", "tactic:TA0009-collection", "source:guardduty", "security:anomaly",
        "technique:T1530-data-from-cloud-storage", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "tactic:TA0009-collection",
        "mitre_platform:cloud", "security:anomaly", "source:guardduty", "mitre_platform:iaas",
        "scope:ec2", "technique:T1530-data-from-cloud-storage"], "version": 3, "id":
        "a34-639-3d4", "updatedAt": 1734518927857, "blocking": false, "deprecationDate":
        1678060800000, "metadata": {"entities": null, "sources": null}, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "", "name": ""}}, {"name":
        "AWS EC2 instance outbound connections to TOR", "createdAt": 1629705613412,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": true, "queries": [{"query": "source:guardduty
        @evt.name:(UnauthorizedAccess\\:EC2\\/TorClient)", "groupByFields": ["instance-id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "high", "notifications": [], "condition": "a > 0"}], "message": "## WARNING:
        This rule is being deprecated on 6 March 2023.\n\n- Cloud SIEM team performs
        a regular audit of all detection rules to maintain high signal quality. We
        will be replacing this rule with an improved third party detection rule after
        the deprecation date. This rule will allow you to receive coverage with all
        GuardDuty detections and correlate them with other security signals fired.\n\n##
        Goal\nDetect when an EC2 instance makes an outbound network connection from
        TOR.\n\n## Strategy\nThis rule lets you monitor this [GuardDuty integration][1]
        finding:\n\n* [UnauthorizedAccess:EC2/TorClient][2]\n\n\n## Triage and response\n1.
        Determine if the EC2 instance should be making requests to TOR. \n2. If the
        instance is compromised:\n   * Review the AWS [documentation][3] on remediating
        a compromised EC2 instance.\n\n## Changelog\n1 November 2022 - Updated links.\n\n[1]:
        https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#unauthorizedaccess-ec2-torclient\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n",
        "tags": ["scope:ec2", "source:guardduty", "tactic:TA0011-command-and-control",
        "technique:T1188-multi-hop-proxy", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:ec2", "tactic:TA0011-command-and-control",
        "security:attack", "mitre_platform:iaas", "source:guardduty", "technique:T1188-multi-hop-proxy"],
        "version": 3, "id": "f71-905-58d", "updatedAt": 1734518919774, "blocking":
        false, "deprecationDate": 1678060800000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "AWS EC2 instance participating in a DoS attack", "createdAt":
        1629705617991, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries": [{"query":
        "source:guardduty @evt.name:(Backdoor\\:EC2\\/DenialOfService.Tcp OR Backdoor\\:EC2\\/DenialOfService.Udp
        OR Backdoor\\:EC2\\/DenialOfService.Dns OR Backdoor\\:EC2\\/DenialOfService.UdpOnTcpPorts
        OR Backdoor\\:EC2\\/DenialOfService.UnusualProtocol)", "groupByFields": ["instance-id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "a > 0"}], "message": "## WARNING: This rule is being deprecated on 6 March
        2023.\n\n- Cloud SIEM team performs a regular audit of all detection rules
        to maintain high signal quality. We will be replacing this rule with an improved
        third party detection rule after the deprecation date. This rule will allow
        you to receive coverage with all GuardDuty detections and correlate them with
        other security signals fired.\n\n## Goal\nDetect when an EC2 instance is participating
        in a Denial of Service (DoS) attack.\n\n## Strategy\nThis rule lets you monitor
        these [GuardDuty integration][1] findings:\n\n* [Backdoor:EC2/DenialOfService.Tcp][2]\n*
        [Backdoor:EC2/DenialOfService.Udp][3]\n* [Backdoor:EC2/DenialOfService.Dns][4]\n*
        [Backdoor:EC2/DenialOfService.UdpOnTcpPorts][5]\n* [Backdoor:EC2/DenialOfService.UnusualProtocol][6]\n\n\n##
        Triage and response\n1. Determine if the EC2 instance is compromised and participating
        in a DoS attack.\n2. If the instance is compromised:\n    * Review the AWS
        [documentation][7] on remediating a compromised EC2 instance.\n\n## Changelog\n1
        November 2022 - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#backdoor-ec2-denialofservicetcp\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#backdoor-ec2-denialofserviceudp\n[4]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#backdoor-ec2-denialofservicedns\n[5]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#backdoor-ec2-denialofserviceudpontcpports\n[6]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#backdoor-ec2-denialofserviceunusualprotocol\n[7]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-ec2\n",
        "tags": ["scope:ec2", "source:guardduty", "tactic:TA0040-impact", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "scope:ec2", "tactic:TA0040-impact", "security:attack", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "source:guardduty"], "version": 3, "id": "d6a-d57-3bb",
        "updatedAt": 1734518905008, "blocking": false, "deprecationDate": 1678060800000,
        "metadata": {"entities": null, "sources": null}, "creator": {"handle": "",
        "name": ""}, "updater": {"handle": "", "name": ""}}, {"name": "AWS EC2 instance
        probed by scanner", "createdAt": 1629705612241, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        true, "queries": [{"query": "source:guardduty @evt.name:(Recon\\:EC2\\/PortProbeUnprotectedPort
        OR Recon\\:EC2\\/PortProbeEMRUnprotectedPort)", "groupByFields": ["instance-id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "info", "notifications": [], "condition": "a > 0"}], "message": "## WARNING:
        This rule is being deprecated on 6 March 2023.\n\n- Cloud SIEM team performs
        a regular audit of all detection rules to maintain high signal quality. We
        will be replacing this rule with an improved third party detection rule after
        the deprecation date. This rule will allow you to receive coverage with all
        GuardDuty detections and correlate them with other security signals fired.\n\n##
        Goal\nDetect when an EC2 instance is being probed by a scanner.\n\n## Strategy\nThis
        rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:EC2/PortProbeUnprotectedPort][2]\n*
        [Recon:EC2/PortProbeEMRUnprotectedPort][3]\n\n\n## Triage and response\n1.
        This is typically an informative signal. However, if this instance should
        not be publicly available, you should review the security group for this instance.\n\n##
        Changelog\n* 1 November 2022 - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#recon-ec2-portprobeunprotectedport\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#recon-ec2-portprobeemrunprotectedport\n",
        "tags": ["scope:ec2", "source:guardduty", "technique:T1046-network-service-discovery",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1046-network-service-discovery", "scope:ec2",
        "security:attack", "tactic:TA0007-discovery", "source:guardduty", "mitre_platform:iaas"],
        "version": 3, "id": "d6c-c15-186", "updatedAt": 1734518915565, "blocking":
        false, "deprecationDate": 1678060800000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "AWS EC2 new event for EKS Node Group", "createdAt": 1633097153938,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail",
        "groupByFields": ["eks_nodegroup-name"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@evt.name", "metrics": ["@evt.name"], "aggregation":
        "new_value", "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod":
        "new_value", "maxSignalDuration": 86400, "keepAlive": 3600, "newValueOptions":
        {"forgetAfter": 21, "learningDuration": 7, "learningThreshold": 0, "learningMethod":
        "duration"}}, "cases": [{"name": "", "status": "info", "notifications": []}],
        "message": "## Goal\nDetect when an AWS EKS node group makes a new API call.\n\n##
        Strategy\nThis rule sets a baseline for host activity across an AWS EKS node
        group, and enables detection of potentially anomalous activity when a node
        group makes a new API call.\n\nA new API call from a node group can indicate
        an attacker gaining a foothold within the system and trying API calls not
        normally associated with this node group.\n\n## Triage and response\n1. Investigate
        API activity for the AWS EKS node group to determine if the specific API call
        is malicious.\n2. Review any other security signals for the AWS EKS node group.\n3.
        If the activity is deemed malicious:\n    * If possible, isolate the compromised
        hosts.\n    * Determine what other API calls were made by the EKS node group.\n    *
        Begin your organization''s incident response process and investigate.", "tags":
        ["scope:ec2", "iaas:aws", "technique:T1078-valid-accounts", "source:cloudtrail",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud", "tactic:TA0001-initial-access"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "mitre_platform:cloud", "technique:T1078-valid-accounts",
        "tactic:TA0001-initial-access", "iaas:aws", "scope:ec2", "mitre_platform:iaas",
        "source:cloudtrail"], "version": 87, "id": "49s-nqd-u7j", "updatedAt": 1736369575341,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS EC2 new event for application",
        "createdAt": 1632769124151, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail host:i-*", "groupByFields": ["application"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@evt.name",
        "metrics": ["@evt.name"], "aggregation": "new_value", "name": ""}], "options":
        {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter": 7, "learningDuration":
        7, "learningThreshold": 0, "learningMethod": "duration"}}, "cases": [{"name":
        "", "status": "low", "notifications": []}], "message": "## Goal\nDetects when
        an application on a host has a new, unrecognized API call.\n\n## Strategy\nUsing
        the `New Value` detection method, find when an `application` has a new `@evt.name`
        on a `host`.\n\n## Triage and response\n1. Determine if the `host: {{host}}`
        running the `application: {{application}}` should have done the following
        event(s)`{{@evt.name}}`:\n   * If yes, you can `Archive` the signal.\n   *
        If no, investigate further by clicking on the **Suggested Actions** tab for
        the signal\n2. If necessary, initiate your company''s incident response process.\n\n##
        Changelog\n* 14 November 2022 - Updated severity.\n\n", "tags": ["scope:ec2",
        "iaas:aws", "technique:T1580-cloud-infrastructure-discovery", "source:cloudtrail",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "mitre_platform:cloud", "technique:T1580-cloud-infrastructure-discovery",
        "tactic:TA0007-discovery", "iaas:aws", "scope:ec2", "mitre_platform:iaas",
        "source:cloudtrail"], "version": 87, "id": "unr-9hi-6ng", "updatedAt": 1736369575372,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS EC2 subnet deleted", "createdAt":
        1629705614378, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @evt.name:DeleteSubnet -@level:Error",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when an attacker is destroying an EC2
        subnet.\n\n## Strategy\nThis rule lets you monitor this CloudTrail API call
        to detect if an attacker is deleting an EC2 subnet.\n\n* [DeleteSubnet][1]\n\n##
        Triage and response\n1. Determine if {{@userIdentity.arn}} should be deleting
        EC2 subnets.\n2. Contact the user to see if they intended to make this API
        call.\n3. If the user did not make the API call:\n   * Rotate the credentials.\n   *
        Investigate if the same credentials made other unauthorized API calls.\n\n##
        Changelog\n1 April 2022 - Updated rule and signal message.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-subnet.html\n",
        "tags": ["scope:ec2", "technique:T1485-data-destruction", "iaas:aws", "tactic:TA0040-impact",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1485-data-destruction", "security:attack", "mitre_platform:cloud",
        "tactic:TA0040-impact", "iaas:aws", "scope:ec2", "mitre_platform:iaas", "source:cloudtrail"],
        "version": 87, "id": "506-0ba-81f", "updatedAt": 1736369575392, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS ECS CreateCluster API calls in multiple
        regions", "createdAt": 1705305596484, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @evt.name:CreateCluster @eventSource:ecs.amazonaws.com",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@awsRegion"], "aggregation": "cardinality", "name": "aws_ecs_createcluster"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        300, "keepAlive": 300}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "aws_ecs_createcluster > 7"}], "message": "## Goal\nDetect
        when there is an attempt to create AWS ECS clusters in multiple regions.\n\n##
        Strategy\nMonitor CloudTrail and detect when an attempt to create AWS ECS
        clusters in multiple regions occurs. An attacker may use ECS clusters as a
        means of creating easily scalable resources to mine cryptocurrency. See the
        following Datadog Security Labs [blog post][1] for further detail.\n\n## Triage
        and response\n1. Determine if `{{@userIdentity.arn}}` should have carried
        out this operation.\n2. If the API calls were not made by the user:\n  * Rotate
        user credentials.\n  * Remove the newly created cluster `{{@requestParameters.clusterName}}`
        and any associated tasks or services.\n  * Determine what other API calls
        were made by the user.\n  * Begin your organization''s incident response process
        and investigate.\n\n[1]: https://securitylabs.datadoghq.com/articles/tales-from-the-cloud-trenches-ecs-crypto-mining/",
        "tags": ["iaas:aws", "tactic:TA0040-impact", "source:cloudtrail", "technique:T1496-resource-hijacking",
        "mitre_platform:containers", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "mitre_platform:cloud", "mitre_platform:containers", "technique:T1496-resource-hijacking",
        "tactic:TA0040-impact", "iaas:aws", "mitre_platform:iaas", "source:cloudtrail"],
        "version": 87, "id": "def-000-fy7", "updatedAt": 1736369575404, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS ECS cluster deleted", "createdAt":
        1629705619416, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @eventSource:ecs.amazonaws.com @evt.name:DeleteCluster",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when an attacker is destroying an ECS
        Cluster\n\n## Strategy\nThis rule lets you monitor this CloudTrail API call
        to detect if an ECS cluster is deleted:\n\n* [DeleteCluster][1]\n\n## Triage
        and response\n1. Determine if {{@userIdentity.arm}} should be making a {{@evt.name}}
        API call.\n2. Contact the user to see if they intended to make this API call.\n3.
        If the user did not make the API call:\n    * Rotate the credentials.\n    *
        Investigate if the same credentials made other unauthorized API calls.\n\n##
        Changelog\n1 April 2022 - Updated rule query.\n\n[1]: https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DeleteCluster.html\n",
        "tags": ["scope:ecs", "technique:T1485-data-destruction", "iaas:aws", "tactic:TA0040-impact",
        "source:cloudtrail", "mitre_platform:containers", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "technique:T1485-data-destruction",
        "iaas:aws", "security:attack", "scope:ecs", "tactic:TA0040-impact", "mitre_platform:cloud",
        "source:cloudtrail", "mitre_platform:containers"], "version": 87, "id": "9d1-0fa-76a",
        "updatedAt": 1736369575425, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS ELB HTTP requests from security scanner", "createdAt":
        1629705616877, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:elb @http.status_code:[400 TO 499] @http.useragent:(*burp* OR *burpcollaborator.net*
        OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel*
        OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR
        *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR
        *eval* OR *javascript* OR *alert*)", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@http.url_details.path"],
        "aggregation": "cardinality", "name": "multiple_400s_and_unique_paths"}, {"query":
        "source:elb @http.status_code:[200 TO 299] @http.useragent:(*burp* OR *burpcollaborator.net*
        OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel*
        OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR
        *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR
        *eval* OR *javascript* OR *alert*)", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@http.url_details.path"],
        "aggregation": "cardinality", "name": "multiple_200s_and_unique_paths"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "scan detected returning several
        200s", "status": "low", "notifications": [], "condition": "multiple_200s_and_unique_paths
        > 10"}, {"name": "scan detected returning several 400s", "status": "info",
        "notifications": [], "condition": "multiple_400s_and_unique_paths > 10"}],
        "message": "## Goal\nDetect when a web application is being scanned. This
        will identify attacker IP addresses who are not trying to hide their attempt
        to attack your system. More advanced hackers will use an inconspicuous `@http.useragent`.
        \n\n## Strategy\nInspect the user agent in the HTTP headers to determine if
        an IP is scanning your application using an HTTP header from [darkqusar][1]''s
        [gist][2]. The detection does this using 2 cases:\n* Case 1: The scanner is
        accessing several unique `@http.url_details.path`s and receiving `@http.status_code`s
        in the range of `200 TO 299`\n* Case 2: The scanner is accessing several unique
        `@http.url_details.path`s and receiving `@http.status_code`s in the range
        of `400 TO 499`\n\n## Triage and response\n1. Determine if this IP: {{@network.client.ip}}
        is making authenticated requests to the application.\n2. Check if these authentication
        requests are successful.\n   * If they are successful, change the status of
        the signal to `UNDER REVIEW` and begin your company''s incident response plan.\n   *
        If they are not successful, `ARCHIVE` the signal.\n\n**NOTE:** Your organization
        should tune out user agents that are valid and triggering this signal. To
        do this, see our [Fine-tune security signals to reduce noise][3] blog.\n\n##
        Changelog\n4 April 2022 - Updated rule cases and signal message.\n\n[1]: https://gist.github.com/darkquasar\n[2]:
        https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n[3]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n",
        "tags": ["technique:T1190-exploit-public-facing-application", "source:elb",
        "scope:elb", "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "tactic:TA0001-initial-access", "technique:T1190-exploit-public-facing-application",
        "scope:elb", "mitre_platform:iaas", "source:elb"], "version": 87, "id": "088-a06-67c",
        "updatedAt": 1736369575764, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS EventBridge rule disabled or deleted", "createdAt":
        1629705617529, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @eventSource:events.amazonaws.com @evt.name:(DeleteRule
        OR DisableRule)", "groupByFields": ["@userIdentity.arn", "@requestParameters.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "info", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when an attacker is trying to evade defenses by deleting or disabling EventBridge
        rules.\n\n## Strategy\nThis rule lets you monitor these CloudTrail API calls
        to detect if an attacker is modifying or disabling EventBridge rules:\n\n*
        [DeleteRule][1]\n* [DisableRule][2]\n\n## Triage and response\n1. Determine
        if the arn: {{@userIdentity.arn}} should have made the {{@evt.name}} API call.\n2.
        Contact the user to see if they intended to make this API call.\n3. If the
        user did not make the API call:\n    * Rotate the credentials.\n    * Investigate
        if the same credentials made other unauthorized API calls.\n\n**NOTE:** Your
        organization should tune out user agents that are valid and triggering this
        signal. To do this, see our [Fine-tune security signals to reduce noise][3]
        blog.\n\n## Changelog\n4 April 2022 - Updated rule query, options, and signal
        markdown.\n\n[1]: https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DeleteRule.html\n[2]:
        https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DisableRule.html\n[3]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n",
        "tags": ["scope:eventbridge", "iaas:aws", "technique:T1089-disabling-security-tools",
        "source:cloudtrail", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "technique:T1089-disabling-security-tools", "scope:eventbridge", "iaas:aws",
        "tactic:TA0005-defense-evasion", "source:cloudtrail", "mitre_platform:iaas"],
        "version": 87, "id": "998-f99-7bd", "updatedAt": 1736369575783, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS FSx Excessive File Denied", "createdAt":
        1629705617669, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:aws.fsx @evt.id:4656 @Event.System.Keywords:0x8010000000000000", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": ["@ObjectName"],
        "aggregation": "cardinality", "name": "file_deny"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "file_deny > 10"}], "message": "## Goal\nDetect and identify users accessing
        files they do not have permission to access.\n\n## Strategy\nMonitor AWS FSx
        logs and detect more than 10 occurrences where `@evt.id` is equal to `4656`
        and `@Event.System.Keywords` is equal to `0x8010000000000000`. \n\n## Triage
        & Response\n1. Inspect the log and determine if the user should be accessing
        the file: `{{@ObjectName}}`.\n2. If access is not legitimate, investigate
        user `({{@usr.id}})` activity. \n", "tags": ["iaas:aws", "source:amazon-fsx",
        "scope:amazon-fsx", "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack",
        "technique:T1526-cloud-service-discovery", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:cloud", "technique:T1526-cloud-service-discovery", "scope:amazon-fsx",
        "tactic:TA0007-discovery", "iaas:aws", "mitre_platform:iaas", "source:amazon-fsx"],
        "version": 87, "id": "3fe-1fm-dlw", "updatedAt": 1736369575797, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS FlowLogs removed", "createdAt":
        1629705612135, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries": [{"query":
        "source:(cloudtrail OR amazon-security-lake) @evt.name:DeleteFlowLogs -@responseElements.DeleteFlowLogsResponse.unsuccessful:\"\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 0"}], "message": "## WARNING: This rule is being deprecated on May 4,
        2023.\n\n## Goal\nDetect when an attacker is removing a FlowLogs collector.\n\n##
        Strategy\nThis rule lets you monitor this EC2 API call:\n\n* [DeleteFlowLogs][1]\n\n##
        Triage and response\n1. Determine if arn: {{@userIdentity.arn}} should make
        this API call.\n2. Contact the user to see if they intended to make this API
        call.\n3. If the user did not make the API call:\n    * Rotate the credentials.\n    *
        Investigate if the same credentials made other unauthorized API calls.\n\n##
        Changelog\n* 4 April 2022 - Updated query and signal message.\n* 16 November
        2022 - Updated rule query.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html\n",
        "tags": ["scope:ec2", "technique:T1485-data-destruction", "iaas:aws", "tactic:TA0040-impact",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1485-data-destruction", "security:attack", "mitre_platform:cloud",
        "tactic:TA0040-impact", "iaas:aws", "scope:ec2", "mitre_platform:iaas", "source:cloudtrail"],
        "version": 3, "id": "5f8-ed8-0d6", "updatedAt": 1734518872029, "blocking":
        false, "deprecationDate": 1683158400000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "AWS GuardDuty detector deleted", "createdAt": 1629705613799,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @evt.name:DeleteDetector", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "", "status": "high", "notifications": [], "condition": "a > 0"}],
        "message": "## Goal\nDetect when an attacker is trying to evade defenses by
        deleting a GuardDuty detector.\n\n## Strategy\nThis rule lets you monitor
        this CloudTrail API call to detect if an attacker is deleting a GuardDuty
        Detector:\n\n* [DeleteDetector][1]\n\n## Triage and response\n1. Determine
        which user in your organization owns the API key that made this API call.\n2.
        Contact the user to see if they intended to make this API call.\n3. If the
        user did not make the API call:\n    * Rotate the credentials.\n    * Investigate
        if the same credentials made other unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/ug/delete-detector.html\n",
        "tags": ["iaas:aws", "scope:guardduty", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "scope:guardduty", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "719-39f-9cd", "updatedAt": 1736369575798, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS GuardDuty finding", "createdAt":
        1645432335969, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "@detail.service.additionalInfo.sample:true", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@detail.severity:[1.0 TO 3.9]", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@detail.severity:[4.0 TO 6.9]", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@detail.severity:[7.0 TO 8.9]", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@detail.severity:[9.0 TO 10.0]", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "third_party", "maxSignalDuration":
        86400, "keepAlive": 1800, "thirdPartyRuleOptions": {"signalTitleTemplate":
        "AWS GuardDuty finding - {{ @triggering_event.title }}", "defaultStatus":
        "high", "rootQueries": [{"query": "source:guardduty @detail-type:\"GuardDuty
        Finding\" @evt.name:*\\:EC2\\/*", "groupByFields": ["instance-id"]}, {"query":
        "source:guardduty @detail-type:\"GuardDuty Finding\" @evt.name:*\\:IAMUser\\/*",
        "groupByFields": ["@usr.id"]}, {"query": "source:guardduty @detail-type:\"GuardDuty
        Finding\" @evt.name:*\\:Kubernetes\\/*", "groupByFields": ["@detail.resource.eksClusterDetails.name"]},
        {"query": "source:guardduty @detail-type:\"GuardDuty Finding\" @evt.name:*\\:S3\\/*",
        "groupByFields": ["@detail.resource.s3BucketDetails.arn"]}, {"query": "source:guardduty
        @detail-type:\"GuardDuty Finding\" @evt.name:*\\:RDS\\/*", "groupByFields":
        ["@detail.resource.rdsDbInstanceDetails.dbInstanceArn"]}, {"query": "source:guardduty
        @detail-type:\"GuardDuty Finding\" @evt.name:*\\:Lambda\\/*", "groupByFields":
        ["@detail.resource.lambdaDetails.functionArn"]}, {"query": "source:guardduty
        @detail-type:\"GuardDuty Finding\" @evt.name:*\\:ECS\\/*", "groupByFields":
        ["@detail.resource.ecsClusterDetails.arn"]}, {"query": "source:guardduty @detail-type:\"GuardDuty
        Finding\" @evt.name:*\\:Container\\/*", "groupByFields": ["@detail.resource.containerDetails.name"]},
        {"query": "source:guardduty @detail-type:\"GuardDuty Finding\" @evt.name:*\\:Runtime\\/*
        instance-id:*", "groupByFields": ["instance-id"]}, {"query": "source:guardduty
        @detail-type:\"GuardDuty Finding\" @evt.name:*\\:Runtime\\/*", "groupByFields":
        ["@detail.resource.ecsClusterDetails.arn"]}, {"query": "source:guardduty @detail-type:\"GuardDuty
        Finding\" @evt.name:AttackSequence*", "groupByFields": ["@detail.service.detection.sequence.actors.user.name"]},
        {"query": "source:guardduty @detail-type:\"GuardDuty Finding\"", "groupByFields":
        []}], "defaultNotifications": []}, "relatedSignalsFields": ["@network.client.ip",
        "instance-id", "@usr.id"]}, "cases": [{"name": "", "status": "info", "notifications":
        []}, {"name": "", "status": "low", "notifications": []}, {"name": "", "status":
        "medium", "notifications": []}, {"name": "", "status": "high", "notifications":
        []}, {"name": "", "status": "critical", "notifications": []}], "message":
        "## Goal\nDetect when an [AWS GuardDuty finding][1] has been raised.\n\n##
        Strategy\nAWS GuardDuty is a native threat detection service that monitors:\n\n*
        CloudTrail management events\n* AWS CloudTrail data events for Amazon S3 \n*
        DNS logs\n* Kubernetes audit logs\n* Amazon VPC flow logs\n* RDS login activity
        monitoring \n\nIt also analyzes Amazon EBS volume data for Malware Protection
        in Amazon GuardDuty. With these data sources, GuardDuty generates security
        findings for your account.\n\n## Triage and response\n1. Investigate the GuardDuty
        finding to determine if it is malicious or benign.\n2. If the finding is deemed
        malicious, follow the [remediation guidance][2] provided by Amazon along with
        any internal incident response processes.\n3. Otherwise findings can be managed
        to reduce false positives through:\n    * [Suppression rules][3]\n    * [Trusted
        IP lists][4]\n\n## Changelog\n* 7 September 2023 - Updated group by value
        for EC2 query.\n* 28 November 2023 - Added query for Runtime findings.\n*
        19 December 2023 - Added query for Runtime findings from ECS clusters.\n*
        9 December 2024 - Added query for Attack sequence findings and critical severity.\n\n[1]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings.html \n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/findings_suppression-rule.html\n[4]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html",
        "tags": ["iaas:aws", "source:guardduty"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["source:guardduty", "iaas:aws"],
        "version": 87, "id": "we5-t9i-qng", "updatedAt": 1736369575838, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "thirdPartyCases":
        [{"name": "", "status": "info", "notifications": [], "query": "@detail.service.additionalInfo.sample:true"},
        {"name": "", "status": "low", "notifications": [], "query": "@detail.severity:[1.0
        TO 3.9]"}, {"name": "", "status": "medium", "notifications": [], "query":
        "@detail.severity:[4.0 TO 6.9]"}, {"name": "", "status": "high", "notifications":
        [], "query": "@detail.severity:[7.0 TO 8.9]"}, {"name": "", "status": "critical",
        "notifications": [], "query": "@detail.severity:[9.0 TO 10.0]"}], "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS GuardDuty publishing destination
        deleted", "createdAt": 1631642348062, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @evt.name:DeletePublishingDestination",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a user deletes a publishing destination
        for a detector which will prevent the exporting of findings. \n\n## Strategy\nThis
        rule lets you monitor this CloudTrail API call to detect if a user has deleted
        a Guard Duty publishing destination.\n\n* [DeletePublishingDestination][1]\n\n##
        Triage and response\n1. Determine which user in your organization owns the
        API key that made this API call.\n2. Contact the user to see if they intended
        to make this API call.\n3. If the user did not make the API call:\n    * Rotate
        the credentials.\n    * Investigate if the same credentials made other unauthorized
        API calls.\n\n[1]: https://docs.aws.amazon.com/fr_fr/guardduty/latest/APIReference/API_DeletePublishingDestination.html",
        "tags": ["iaas:aws", "scope:guardduty", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "scope:guardduty", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "wv9-wm3-v0s", "updatedAt": 1736369575816, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS GuardDuty threat intel set deleted",
        "createdAt": 1631642350729, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @evt.name:DeleteThreatIntelSet", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "aws_guardduty_threatintel_set_deleted"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "aws_guardduty_threatintel_set_deleted > 0"}], "message":
        "## Goal\nDetect when an attacker is trying to evade defenses by deleting
        a GuardDuty ThreatIntelSet.\n\n## Strategy\nThis rule lets you monitor this
        CloudTrail API call to detect if an attacker is deleting a GuardDuty ThreatIntelSet:\n\n*
        [DeleteThreatIntelSet][1]\n\n## Triage and response\n1. Determine if user:
        `{{@userIdentity.arn}}` should have made a `{{@evt.name}}` API call.\n2. If
        the API call was not made by the user:\n  * Rotate user credentials.\n  *
        Determine what other API calls were made by the user.\n  * Replace ThreatIntelSets
        deleted by the user with the `aws-cli` command [create-threat-intel-set][2]
        or use the [AWS Console][3].\n3. If the API call was made by the user:\n  *
        Determine if the user should be performing this API call and if it was an
        authorized change.\n  * If No, see if other API calls were made by the user
        and determine if they warrant further investigation.\n\n[1]: https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DeleteThreatIntelSet.html\n[2]:
        https://docs.aws.amazon.com/cli/latest/reference/guardduty/create-threat-intel-set.html\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_upload-lists.html",
        "tags": ["iaas:aws", "scope:guardduty", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "scope:guardduty", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "dhz-27i-ani", "updatedAt": 1736369575818, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS IAM AdministratorAccess policy was
        applied to a group", "createdAt": 1683790831289, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:iam.amazonaws.com
        @evt.name:AttachGroupPolicy @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AdministratorAccess\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "aws_admin_policy_attached"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "aws_admin_policy_attached > 0"}], "message": "## Goal\nDetect
        when the `AdministratorAccess` policy is attached to an AWS IAM group.\n\n##
        Strategy\nThis rule allows you to monitor CloudTrail and detect if an attacker
        has attached the AWS managed policy [`AdministratorAccess`][1] to an AWS IAM
        group using the [`AttachGroupPolicy`][2] API call.\n\n## Triage and response\n1.
        Determine if `{{@userIdentity.session_name}}` should have made a `{{@evt.name}}`
        API call.\n2. If the API call was not made by the user:\n  * Rotate user credentials.\n  *
        Determine what other API calls were made by the user.\n  * Remove the `AdministratorAccess`
        policy from the `{{@requestParameters.groupName}}` group using the `aws-cli`
        command [detach-group-policy][3].\n3. If the API call was made legitimately
        by the user:\n  * Determine if the group `{{@requestParameters.groupName}}`
        requires the `AdministratorAccess` policy to perform the intended function.\n  *
        Advise the user to find the [least privileged][4] policy that allows the group
        to operate as intended.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_administrator\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-group-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["scope:iam", "tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1098-account-manipulation", "security:attack", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation", "iaas:aws", "mitre_platform:iaas", "scope:iam",
        "source:cloudtrail"], "version": 88, "id": "def-000-wnq", "updatedAt": 1736369575889,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS IAM AdministratorAccess policy was
        applied to a role", "createdAt": 1683790831350, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:iam.amazonaws.com
        @evt.name:AttachRolePolicy @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AdministratorAccess\"
        -@userIdentity.invokedBy:(member.org.stacksets.cloudformation.amazonaws.com
        OR sso.amazonaws.com OR cloudformation.amazonaws.com)", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "aws_admin_policy_attached"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 21600},
        "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "aws_admin_policy_attached > 0"}], "message": "## Goal\nDetect when the `AdministratorAccess`
        policy is attached to an AWS IAM role.\n\n## Strategy\nThis rule lets you
        monitor CloudTrail to detect if an attacker has attached the AWS managed policy
        [`AdministratorAccess`][1] to an AWS IAM role via the [`AttachRolePolicy`][2]
        API call.\n\n## Triage and response\n1. Determine if `{{@userIdentity.session_name}}`
        should have made a `{{@evt.name}}` API call.\n2. If the API call was not made
        by the user:\n  * Rotate user credentials.\n  * Determine what other API calls
        were made by the user.\n  * Remove the `AdministratorAccess` policy from the
        `{{@requestParameters.roleName}}` role using the `aws-cli` command [detach-role-policy][3].\n3.
        If the API call was made legitimately by the user:\n  * Determine if the role
        `{{@requestParameters.roleName}}` requires the AdministratorAccess policy
        to perform its intended function.\n  * Advise the user to find the [least
        privileged][4] policy that allows the role to operate as intended.\n\n[1]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_administrator\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-role-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["scope:iam", "tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1098-account-manipulation", "security:attack", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation", "iaas:aws", "mitre_platform:iaas", "scope:iam",
        "source:cloudtrail"], "version": 88, "id": "def-000-4z1", "updatedAt": 1736369575990,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS IAM AdministratorAccess policy was
        applied to a user", "createdAt": 1683790831353, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:iam.amazonaws.com
        @evt.name:AttachUserPolicy @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AdministratorAccess\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "aws_admin_policy_attached"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "aws_admin_policy_attached > 0"}], "message": "## Goal\nDetect
        when the `AdministratorAccess` policy is attached to an AWS IAM user.\n\n##
        Strategy\nThis rule allows you to monitor CloudTrail and detect if an attacker
        has attached the AWS managed policy [`AdministratorAccess`][1] to an AWS IAM
        user using the [`AttachUserPolicy`][2] API call.\n\n## Triage and response\n1.
        Determine if `{{@userIdentity.session_name}}` should have made a `{{@evt.name}}`
        API call.\n2. If the API call was not made by the user:\n  * Rotate user credentials.\n  *
        Determine what other API calls were made by the user.\n  * Remove the `AdministratorAccess`
        policy from the `{{@requestParameters.userName}}` user using the `aws-cli`
        command [detach-user-policy][3].\n3. If the API call was made legitimately
        by the user:\n  * Determine if the user `{{@requestParameters.userName}}`
        requires the AdministratorAccess policy to perform the intended function.\n  *
        Advise the user to find the [least privileged][4] policy that allows the user
        to operate as intended.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_administrator\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-user-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["scope:iam", "tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1098-account-manipulation", "security:attack", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation", "iaas:aws", "mitre_platform:iaas", "scope:iam",
        "source:cloudtrail"], "version": 88, "id": "def-000-sd5", "updatedAt": 1736369576010,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS IAM AmazonSESFullAccess policy was
        applied to a group", "createdAt": 1733733720648, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:iam.amazonaws.com
        @evt.name:AttachGroupPolicy @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AmazonSESFullAccess\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "aws_sesfullaccess_policy_attached"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "aws_sesfullaccess_policy_attached > 0"}], "message": "##
        Goal\nDetect when the `AmazonSESFullAccess` policy is attached to an AWS IAM
        group.\n\n## Strategy\nThis rule allows you to monitor CloudTrail and detect
        if an attacker has attached the AWS managed policy [`AmazonSESFullAccess`][1]
        to an AWS IAM group using the [`AttachGroupPolicy`][2] API call. An attacker
        with an objective of leveraging the AWS Simple Email Service (SES) may only
        attach a policy relating to SES to avoid detections relating to the AWS managed
        policy [`AdministratorAccess`].\n\n## Triage and response\n1. Determine if
        `{{@userIdentity.session_name}}` should have made a `{{@evt.name}}` API call.\n2.
        If the API call was not made by the user:\n  * Rotate user credentials.\n  *
        Determine what other API calls were made by the user.\n  * Remove the `AmazonSESFullAccess`
        policy from the `{{@requestParameters.groupName}}` group using the `aws-cli`
        command [detach-group-policy][3].\n3. If the API call was made legitimately
        by the user:\n  * Determine if the group `{{@requestParameters.groupName}}`
        requires the `AmazonSESFullAccess` policy to perform the intended function.\n  *
        Advise the user to find the [least privileged][4] policy that allows the group
        to operate as intended.\n\n[1]: https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AmazonSESFullAccess.html\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-group-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["scope:iam", "tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1098-account-manipulation", "security:attack", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation", "iaas:aws", "mitre_platform:iaas", "scope:iam",
        "source:cloudtrail"], "version": 19, "id": "def-000-beg", "updatedAt": 1736369576184,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS IAM AmazonSESFullAccess policy was
        applied to a role", "createdAt": 1733733726491, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:iam.amazonaws.com
        @evt.name:AttachRolePolicy @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AmazonSESFullAccess\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "aws_sesfullaccess_policy_attached"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "aws_sesfullaccess_policy_attached > 0"}], "message": "##
        Goal\nDetect when the `AmazonSESFullAccess` policy is attached to an AWS IAM
        role.\n\n## Strategy\nThis rule allows you to monitor CloudTrail and detect
        if an attacker has attached the AWS managed policy [`AmazonSESFullAccess`][1]
        to an AWS IAM role using the [`AttachRolePolicy`][2] API call. An attacker
        with an objective of leveraging the AWS Simple Email Service (SES) may only
        attach a policy relating to SES to avoid detections relating to the AWS managed
        policy [`AdministratorAccess`].\n\n## Triage and response\n1. Determine if
        `{{@userIdentity.session_name}}` should have made a `{{@evt.name}}` API call.\n2.
        If the API call was not made by the user:\n  * Rotate user credentials.\n  *
        Determine what other API calls were made by the user.\n  * Remove the `AmazonSESFullAccess`
        policy from the `{{@requestParameters.roleName}}` role using the `aws-cli`
        command [detach-role-policy][3].\n3. If the API call was made legitimately
        by the user:\n  * Determine if the role `{{@requestParameters.roleName}}`
        requires the `AmazonSESFullAccess` policy to perform the intended function.\n  *
        Advise the user to find the [least privileged][4] policy that allows the role
        to operate as intended.\n\n[1]: https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AmazonSESFullAccess.html\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-role-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["scope:iam", "tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1098-account-manipulation", "security:attack", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation", "iaas:aws", "mitre_platform:iaas", "scope:iam",
        "source:cloudtrail"], "version": 19, "id": "def-000-4or", "updatedAt": 1736369576187,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS IAM AmazonSESFullAccess policy was
        applied to a user", "createdAt": 1733733712834, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:iam.amazonaws.com
        @evt.name:AttachUserPolicy @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AmazonSESFullAccess\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "aws_sesfullaccess_policy_attached"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "aws_sesfullaccess_policy_attached > 0"}], "message": "##
        Goal\nDetect when the `AmazonSESFullAccess` policy is attached to an AWS IAM
        user.\n\n## Strategy\nThis rule allows you to monitor CloudTrail and detect
        if an attacker has attached the AWS managed policy [`AmazonSESFullAccess`][1]
        to an AWS IAM user using the [`AttachUserPolicy`][2] API call. An attacker
        with an objective of leveraging the AWS Simple Email Service (SES) may only
        attach a policy relating to SES to avoid detections relating to the AWS managed
        policy [`AdministratorAccess`].\n\n## Triage and response\n1. Determine if
        `{{@userIdentity.session_name}}` should have made a `{{@evt.name}}` API call.\n2.
        If the API call was not made by the user:\n  * Rotate user credentials.\n  *
        Determine what other API calls were made by the user.\n  * Remove the `AmazonSESFullAccess`
        policy from the `{{@requestParameters.userName}}` user using the `aws-cli`
        command [detach-user-policy][3].\n3. If the API call was made legitimately
        by the user:\n  * Determine if the user `{{@requestParameters.userName}}`
        requires the `AmazonSESFullAccess` policy to perform the intended function.\n  *
        Advise the user to find the [least privileged][4] policy that allows the user
        to operate as intended.\n\n[1]: https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AmazonSESFullAccess.html\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachuserPolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-user-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["scope:iam", "tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1098-account-manipulation", "security:attack", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation", "iaas:aws", "mitre_platform:iaas", "scope:iam",
        "source:cloudtrail"], "version": 19, "id": "def-000-q7d", "updatedAt": 1736369576208,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS IAM Roles Anywhere trust anchor
        created", "createdAt": 1685720635287, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @evt.name:CreateTrustAnchor @eventSource:rolesanywhere.amazonaws.com",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "trust_anchor_creation"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "trust_anchor_creation > 0"}], "message": "## Goal\nDetect
        when an IAM Roles Anywhere trust anchor is created.\n\n## Strategy\nThis rule
        monitors CloudTrail logs for `CreateTrustAnchor` API calls. An attacker may
        attempt to establish persistence by creating an IAM Roles Anywhere trust anchor.
        The IAM Roles Anywhere service allows workloads that do not run in AWS to
        assume roles by presenting a client-side X.509 certificate signed by a trusted
        certificate authority, called a \"trust anchor\".\n\n\n## Triage & response\n1.
        Determine if the API call: `{{@evt.name}}` should have been performed by the
        user: `{{@userIdentity.arn}}`:\n   * Contact the user to confirm if they made
        the API call. \n2. If the API call was not made by the user:\n   * Rotate
        the user credentials.\n   * Determine what actions the user took and which
        new access keys the user created.\n   * Begin your organization''s incident
        response process and investigate.\n3. If the API call was made legitimately
        by the user:\n   * Confirm if an IAM Roles Anywhere trust anchor is the proper
        authentication mechanism for the resource.", "tags": ["scope:iam", "iaas:aws",
        "technique:T1098-account-manipulation", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1098-account-manipulation",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud", "iaas:aws",
        "mitre_platform:iaas", "scope:iam", "source:cloudtrail"], "version": 87, "id":
        "def-000-bf8", "updatedAt": 1736369576213, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS IAM User created with AdministratorAccess
        policy attached", "createdAt": 1693230716082, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @evt.name:CreateUser @eventSource:iam.amazonaws.com",
        "groupByFields": ["@requestParameters.userName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "create_iam_user"},
        {"query": "source:cloudtrail @evt.name:AttachUserPolicy @eventSource:iam.amazonaws.com  @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AdministratorAccess\"",
        "groupByFields": ["@requestParameters.userName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "administratoraccess_policy_attached"}],
        "options": {"evaluationWindow": 600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "create_iam_user > 0 THEN administratoraccess_policy_attached
        > 0"}], "message": "## Goal\nDetect when an AWS IAM user is created and the
        managed AdministratorAccess policy is attached shortly after. \n\n## Strategy\nThis
        rule leverages CloudTrail and triggers if an [`CreateUser`][1] API call is
        followed by the AWS managed policy [`AdministratorAccess`][2] being attached
        for the requested IAM user within 10 minutes. This can be an indicator of
        an attacker trying to preserve access to the AWS environment and to ensure
        the level of privileges required to achieve their objectives.\n\n## Triage
        and response\n1. Determine if `{{@userIdentity.session_name}}` should have
        carried out this operation.\n2. If the API calls were not made by the user:\n  *
        Rotate user credentials.\n  * Remove the newly created IAM user `{{@requestParameters.userName}}`.
        \n  * Determine what other API calls were made by the user and the newly created
        user `{{@requestParameters.userName}}`.\n  * Begin your organization''s incident
        response process and investigate.\n3. If the API call was made legitimately
        by the user:\n  * It is recommended that IAM roles are used for human users
        and workloads so that they use temporary credentials.\n  * If an IAM user
        is required, advise the user to find the [least privileged][3] policy that
        allows the user to operate as intended.\n  * If not, see if other API calls
        were made by the user and determine if they warrant further investigation.\n\n[1]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateUser.html\n[2]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_administrator\n[3]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["technique:T1136-create-account", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0003-persistence",
        "mitre_platform:cloud", "technique:T1136-create-account", "mitre_platform:iaas",
        "security:attack", "source:cloudtrail"], "version": 87, "id": "def-000-ilw",
        "updatedAt": 1736369576226, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS IAM activity by S3 browser utility", "createdAt":
        1686124813558, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:CreateLoginProfile @http.useragent:*s3browser.com*",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "s3_browser_create_loginprofile"},
        {"query": "source:cloudtrail @evt.name:PutUserPolicy @http.useragent:*s3browser.com*",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "s3_browser_inline_policy_audit"},
        {"query": "source:cloudtrail @evt.name:CreateUser @http.useragent:*s3browser.com*",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "s3_browser_create_user"},
        {"query": "source:cloudtrail @evt.name:CreateAccessKey @http.useragent:*s3browser.com*",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "s3_browser_create_accesskey"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "LoginProfile created", "status":
        "high", "notifications": [], "condition": "s3_browser_create_loginprofile
        > 0"}, {"name": "IAM user created", "status": "high", "notifications": [],
        "condition": "s3_browser_create_user > 0"}, {"name": "Access key created",
        "status": "high", "notifications": [], "condition": "s3_browser_create_accesskey
        > 0"}, {"name": "Inline policy added/updated", "status": "medium", "notifications":
        [], "condition": "s3_browser_inline_policy_audit > 0"}], "message": "## Goal\nDetect
        IAM activity associated with the S3 browser utility.\n\n## Strategy\nThis
        rule monitors AWS CloudTrail and detects IAM activity associated with the
        S3 browser utility. S3 browser is a freeware Windows client for Amazon S3
        and Amazon CloudFront. This tool has been used by the threat group GUI-vil
        in order to persist or escalate privileges in a victim''s AWS account. Details
        about this threat group can be seen in the [Permiso blog post][1].\n\nThis
        rule monitors the following API calls:\n\n* CreateUser\n* CreateLoginProfile\n*
        CreateAccessKey\n* PutUserPolicy\n\n## Triage and response\n1. Determine if
        `{{@userIdentity.arn}}` should be attempting to use the S3 browser utility.\n    *
        Investigate any other actions carried out by the potentially compromised identity
        `{{@userIdentity.arn}}` using the Cloud SIEM investigator.\n2. If the activity
        is determined to be malicious:\n    * Rotate the affected credentials.\n    *
        Remove any new IAM users, access keys, or LoginProfiles.\n    * Begin your
        organization''s incident response process and investigate.\n\n[1]: https://permiso.io/blog/s/unmasking-guivil-new-cloud-threat-actor/",
        "tags": ["scope:iam", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1098-account-manipulation", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas",
        "scope:iam", "source:cloudtrail"], "version": 87, "id": "def-000-x1d", "updatedAt":
        1736369576244, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS IAM activity from EC2 instance", "createdAt": 1677831522606, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail @eventSource:iam.amazonaws.com
        @evt.name:(CreateUser OR AttachUserPolicy) @userIdentity.session_name:i-*",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "iam_user_api_call_from_ec2"},
        {"query": "source:cloudtrail @eventSource:iam.amazonaws.com @evt.name:(CreateLoginProfile
        OR UpdateLoginProfile) @userIdentity.session_name:i-*", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "iam_login_profile_from_ec2"}, {"query": "source:cloudtrail @eventSource:iam.amazonaws.com
        @evt.name:CreateAccessKey @userIdentity.session_name:i-*", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "iam_create_access_key_from_ec2"}, {"query":
        "source:cloudtrail @eventSource:iam.amazonaws.com @evt.name:(AttachGroupPolicy
        OR CreateGroup) @userIdentity.session_name:i-*", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "iam_group_api_call_from_ec2"}, {"query": "source:cloudtrail @eventSource:iam.amazonaws.com
        @evt.name:(AttachRolePolicy OR CreateRole) @userIdentity.session_name:i-*",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "iam_role_api_call_from_ec2"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "a user has been created or user
        policy attached", "status": "medium", "notifications": [], "condition": "iam_user_api_call_from_ec2
        > 0"}, {"name": "a login profile has been created or updated", "status": "medium",
        "notifications": [], "condition": "iam_login_profile_from_ec2 > 0"}, {"name":
        "a IAM access key has been created", "status": "medium", "notifications":
        [], "condition": "iam_create_access_key_from_ec2 > 0"}, {"name": "a group
        has been created or group policy attached", "status": "medium", "notifications":
        [], "condition": "iam_group_api_call_from_ec2 > 0"}, {"name": "a role has
        been created or role policy attached", "status": "low", "notifications": [],
        "condition": "iam_role_api_call_from_ec2 > 0"}], "message": "## Goal\nDetect
        when an AWS EC2 instance role makes API calls to AWS IAM.\n\n## Strategy\nThis
        rule lets you monitor CloudTrail to detect when an AWS EC2 instance role makes
        certain API calls to IAM. An attacker who has managed to retrieve temporary
        access keys assigned to a EC2 instance may try to retain access or escalate
        privileges by the making the following API calls:\n\n* CreateUser\n* AttachUserPolicy\n*
        CreateLoginProfile\n* UpdateLoginProfile\n* CreateAccessKey\n* CreateGroup\n*
        AttachGroupPolicy\n* CreateRole\n* AttachRolePolicy\n\n## Triage and response\n1.  Determine
        if `{{@userIdentity.session_name}}` should be attempting to make the identified
        API calls.\n   * Use the Cloud SIEM - Host Investigation dashboard to assess
        host activity.\n2. Contact the team that owns the service the host is part
        of, to confirm it should make these API calls.\n3. If this is abnormal behavior
        for the host:\n   * Revoke role temporary credentials.\n   * Investigate to
        see what API calls might have been made that were successful throughout the
        rest of the environment.", "tags": ["scope:iam", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1098-account-manipulation", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas",
        "scope:iam", "source:cloudtrail"], "version": 88, "id": "def-000-pdi", "updatedAt":
        1736369576263, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS IAM policy modified", "createdAt": 1629705619051, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:cloudtrail -@level:Error
        @evt.name:(DeleteGroupPolicy OR PutGroupPolicy OR AttachGroupPolicy OR DetachGroupPolicy)
        @eventSource:iam.amazonaws.com", "groupByFields": ["@userIdentity.accountId"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@userIdentity.arn"],
        "aggregation": "cardinality", "name": "group_policy_modified"}, {"query":
        "source:cloudtrail -@level:Error @evt.name:(UpdateAssumeRolePolicy OR DeleteRolePolicy
        OR PutRolePolicy OR AttachRolePolicy OR DetachRolePolicy) @eventSource:iam.amazonaws.com",
        "groupByFields": ["@userIdentity.accountId"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@userIdentity.arn"], "aggregation": "cardinality",
        "name": "role_policy_modified"}, {"query": "source:cloudtrail -@level:Error
        @evt.name:(DeleteUserPolicy OR PutUserPolicy OR AttachUserPolicy OR DetachUserPolicy)
        @eventSource:iam.amazonaws.com", "groupByFields": ["@userIdentity.accountId"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@userIdentity.arn"],
        "aggregation": "cardinality", "name": "user_policy_modified"}, {"query": "source:cloudtrail
        -@level:Error @evt.name:(CreatePolicy OR DeletePolicy) @eventSource:iam.amazonaws.com",
        "groupByFields": ["@userIdentity.accountId"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@userIdentity.arn"], "aggregation": "cardinality",
        "name": "account_policy_modified"}, {"query": "source:cloudtrail -@level:Error
        @evt.name:(SetDefaultPolicyVersion OR CreatePolicyVersion OR DeletePolicyVersion)
        @eventSource:iam.amazonaws.com", "groupByFields": ["@userIdentity.accountId"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@userIdentity.arn"],
        "aggregation": "cardinality", "name": "policy_version_modified"}], "options":
        {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "group policy changed", "status":
        "info", "notifications": [], "condition": "group_policy_modified > 0"}, {"name":
        "role policy changed", "status": "info", "notifications": [], "condition":
        "role_policy_modified > 0"}, {"name": "user policy changed", "status": "info",
        "notifications": [], "condition": "user_policy_modified > 0"}, {"name": "account
        policy changed", "status": "info", "notifications": [], "condition": "account_policy_modified
        > 0"}, {"name": "policy version changed", "status": "info", "notifications":
        [], "condition": "policy_version_modified > 0"}], "message": "## Goal\nDetect
        a change to an AWS IAM Policy.\n\n## Strategy\nThis rule lets you monitor
        CloudTrail and detect when any event pertaining to an AWS IAM policy is detected
        with one of the following API calls:\n\n* [DeleteGroupPolicy][1]\n* [DeleteRolePolicy][2]\n*
        [DeleteUserPolicy][3]\n* [PutGroupPolicy][4]\n* [PutRolePolicy][5]\n* [PutUserPolicy][6]\n*
        [CreatePolicy][7]\n* [DeletePolicy][8]\n* [SetDefaultPolicyVersion][9]\n*
        [CreatePolicyVersion][10]\n* [DeletePolicyVersion][11]\n* [AttachRolePolicy][12]\n*
        [DetachRolePolicy][13]\n* [AttachUserPolicy][14]\n* [DetachUserPolicy][15]\n*
        [AttachGroupPolicy][16]\n* [DetachGroupPolicy][17]\n* [UpdateAssumeRolePolicy][18]\n\n##
        Triage and response\n1. Review the IAM Policy change and ensure it does not
        negatively impact your risk in relation to authentication or authorization
        controls.\n2. If risk is increased, contact the individual that used the arn:
        `{{@userIdentity.arn}}` and determine if the `{{@evt.name}}` API calls were
        made by them.\n\n## Changelog\n5 April 2022 - Updated rule and signal message.\n12
        Jul 2023 - Updated query and evaluation window.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html  \n[3]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html\n[5]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html\n[6]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html\n[7]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html\n[8]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicy.html\n[9]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_SetDefaultPolicyVersion.html\n[10]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicyVersion.html\n[11]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeletePolicyVersion.html\n[12]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html\n[13]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachRolePolicy.html\n[14]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html\n[15]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachUserPolicy.html\n[16]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[17]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_DetachGroupPolicy.html\n[18]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAssumeRolePolicy.html\n\n\n",
        "tags": ["scope:iam", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1098-account-manipulation", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas",
        "scope:iam", "source:cloudtrail"], "version": 87, "id": "7b6-2a8-df9", "updatedAt":
        1736369576628, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS IAM privileged policy was applied to a group", "createdAt": 1635445986019,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": true, "queries": [{"query": "source:cloudtrail
        @eventSource:iam.amazonaws.com @evt.name:AttachGroupPolicy @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AdministratorAccess\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@requestParameters.groupName", "metrics":
        ["@requestParameters.groupName"], "aggregation": "new_value", "name": ""}],
        "options": {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        1800, "keepAlive": 1800, "newValueOptions": {"forgetAfter": 7, "learningDuration":
        1, "learningThreshold": 0, "learningMethod": "duration"}}, "cases": [{"name":
        "", "status": "medium", "notifications": []}], "message": "## WARNING: This
        rule is being deprecated on 30 June 2023.\n\n- This rule is replaced by the
        \"`AWS IAM AdministratorAccess policy was applied to a group`\" rule.\n\n##
        Goal\nDetect when the `AdministratorAccess` policy is attached to an AWS IAM
        group.\n\n## Strategy\nThis rule allows you to monitor CloudTrail and detect
        if an attacker has attached the AWS managed policy [`AdministratorAccess`][1]
        to a new AWS IAM group using the [`AttachGroupPolicy`][2] API call.\n\n##
        Triage and response\n1. Determine if `{{@userIdentity.session_name}}` should
        have made a `{{@evt.name}}` API call.\n2. If the API call was not made by
        the user:\n  * Rotate user credentials.\n  * Determine what other API calls
        were made by the user.\n  * Remove the `AdministratorAccess` policy from the
        `{{@requestParameters.groupName}}` group using the `aws-cli` command [detach-group-policy][3].\n3.
        If the API call was made legitimately by the user:\n  * Determine if the group
        `{{@requestParameters.groupName}}` requires the `AdministratorAccess` policy
        to perform the intended function.\n  * Advise the user to find the [least
        privileged][4] policy that allows the group to operate as intended.\n\n[1]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_administrator\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-group-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["scope:iam", "tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1098-account-manipulation", "security:attack", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation", "iaas:aws", "mitre_platform:iaas", "scope:iam",
        "source:cloudtrail"], "version": 4, "id": "08e-08k-j5v", "updatedAt": 1734518777091,
        "blocking": false, "deprecationDate": 1688083200000, "metadata": {"entities":
        null, "sources": null}, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "", "name": ""}}, {"name": "AWS IAM privileged policy was applied
        to a role", "createdAt": 1635445986195, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": true,
        "queries": [{"query": "source:cloudtrail @eventSource:iam.amazonaws.com @evt.name:AttachRolePolicy
        @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AdministratorAccess\"
        -@userIdentity.invokedBy:sso.amazonaws.com -@http.useragent:sso.amazonaws.com",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@requestParameters.roleName", "metrics":
        ["@requestParameters.roleName"], "aggregation": "new_value", "name": ""}],
        "options": {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        1800, "keepAlive": 1800, "newValueOptions": {"forgetAfter": 7, "learningDuration":
        1, "learningThreshold": 0, "learningMethod": "duration"}}, "cases": [{"name":
        "", "status": "medium", "notifications": []}], "message": "## WARNING: This
        rule is being deprecated on 30 June 2023.\n\n- This rule is replaced by the
        \"`AWS IAM AdministratorAccess policy was applied to a role`\" rule.\n\n##
        Goal\nDetect when the `AdministratorAccess` policy is attached to an AWS IAM
        role.\n\n## Strategy\nThis rule lets you monitor CloudTrail to detect if an
        attacker has attached the AWS managed policy [`AdministratorAccess`][1] to
        a new AWS IAM role via the [`AttachRolePolicy`][2] API call.\n\n## Triage
        and response\n1. Determine if `{{@userIdentity.session_name}}` should have
        made a `{{@evt.name}}` API call.\n2. If the API call was not made by the user:\n  *
        Rotate user credentials.\n  * Determine what other API calls were made by
        the user.\n  * Remove the `AdministratorAccess` policy from the `{{@requestParameters.roleName}}`
        role using the `aws-cli` command [detach-role-policy][3].\n3. If the API call
        was made legitimately by the user:\n  * Determine if the role `{{@requestParameters.roleName}}`
        requires the AdministratorAccess policy to perform its intended function.\n  *
        Advise the user to find the [least privileged][4] policy that allows the role
        to operate as intended.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_administrator\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachRolePolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-role-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["scope:iam", "tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1098-account-manipulation", "security:attack", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation", "iaas:aws", "mitre_platform:iaas", "scope:iam",
        "source:cloudtrail"], "version": 4, "id": "1np-ggw-qpo", "updatedAt": 1734518752062,
        "blocking": false, "deprecationDate": 1688083200000, "metadata": {"entities":
        null, "sources": null}, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "", "name": ""}}, {"name": "AWS IAM privileged policy was applied
        to a user", "createdAt": 1635445985844, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": true,
        "queries": [{"query": "source:cloudtrail @eventSource:iam.amazonaws.com @evt.name:AttachUserPolicy
        @requestParameters.policyArn:\"arn:aws:iam::aws:policy/AdministratorAccess\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@requestParameters.userName", "metrics":
        ["@requestParameters.userName"], "aggregation": "new_value", "name": ""}],
        "options": {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        1800, "keepAlive": 1800, "newValueOptions": {"forgetAfter": 7, "learningDuration":
        1, "learningThreshold": 0, "learningMethod": "duration"}}, "cases": [{"name":
        "", "status": "medium", "notifications": []}], "message": "## WARNING: This
        rule is being deprecated on 30 June 2023.\n\n- This rule is replaced by the
        \"`AWS IAM AdministratorAccess policy was applied to a user`\" rule.\n\n##
        Goal\nDetect when the `AdministratorAccess` policy is attached to an AWS IAM
        user.\n\n## Strategy\nThis rule allows you to monitor CloudTrail and detect
        if an attacker has attached the AWS managed policy [`AdministratorAccess`][1]
        to an AWS IAM user using the [`AttachUserPolicy`][2] API call.\n\n## Triage
        and response\n1. Determine if `{{@userIdentity.session_name}}` should have
        made a `{{@evt.name}}` API call.\n2. If the API call was not made by the user:\n  *
        Rotate user credentials.\n  * Determine what other API calls were made by
        the user.\n  * Remove the `AdministratorAccess` policy from the `{{@requestParameters.userName}}`
        user using the `aws-cli` command [detach-user-policy][3].\n3. If the API call
        was made legitimately by the user:\n  * Determine if the user `{{@requestParameters.userName}}`
        requires the AdministratorAccess policy to perform the intended function.\n  *
        Advise the user to find the [least privileged][4] policy that allows the user
        to operate as intended.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_job-functions.html#jf_administrator\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachUserPolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-user-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege",
        "tags": ["scope:iam", "tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1098-account-manipulation", "security:attack", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation", "iaas:aws", "mitre_platform:iaas", "scope:iam",
        "source:cloudtrail"], "version": 4, "id": "ulv-v8e-zfk", "updatedAt": 1734518851254,
        "blocking": false, "deprecationDate": 1688083200000, "metadata": {"entities":
        null, "sources": null}, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "", "name": ""}}, {"name": "AWS IAM user changing sensitive configurations",
        "createdAt": 1629705619394, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries":
        [{"query": "source:guardduty @evt.name:(Stealth\\:IAMUser\\/S3ServerAccessLoggingDisabled
        OR Stealth\\:IAMUser\\/PasswordPolicyChange OR Stealth\\:IAMUser\\/CloudTrailLoggingDisabled
        OR Stealth\\:IAMUser\\/LoggingConfigurationModified)", "groupByFields": ["@detail.resource.accessKeyDetails.userName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "low", "notifications": [], "condition": "a > 0"}], "message": "## WARNING:
        This rule is being deprecated on 6 March 2023.\n\n- Cloud SIEM team performs
        a regular audit of all detection rules to maintain high signal quality. We
        will be replacing this rule with an improved third party detection rule after
        the deprecation date. This rule will allow you to receive coverage with all
        GuardDuty detections and correlate them with other security signals fired.\n\n##
        Goal\nDetect when an AWS IAM user is changing sensitive configurations and
        has no prior history of invoking these APIs.\n\n## Strategy\nThis rule lets
        you monitor these [GuardDuty integration][1] findings:\n\n* [Stealth:IAMUser/S3ServerAccessLoggingDisabled][2]\n*
        [Stealth:IAMUser/PasswordPolicyChange][3]\n* [Stealth:IAMUser/CloudTrailLoggingDisabled][4]\n\n##
        Triage and response\n1. Determine which user triggered the signal. This can
        be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3.
        If the user''s credentials are compromised:\n  * Review the AWS [documentation][5]
        on remediating compromised AWS credentials.\n\n## Changelog\n1 November 2022
        - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html#stealth-s3-serveraccessloggingdisabled\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-iam.html#stealth-iam-passwordpolicychange\n[4]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-iam.html#stealth-iam-cloudtrailloggingdisabled\n[5]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n",
        "tags": ["scope:iam", "source:guardduty", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "tactic:TA0005-defense-evasion", "scope:iam", "source:guardduty", "mitre_platform:iaas",
        "technique:T1562-impair-defenses"], "version": 3, "id": "d42-7bd-898", "updatedAt":
        1734518917603, "blocking": false, "deprecationDate": 1678060800000, "metadata":
        {"entities": null, "sources": null}, "creator": {"handle": "", "name": ""},
        "updater": {"handle": "", "name": ""}}, {"name": "AWS IAM user disabled S3
        Block Public Access", "createdAt": 1629705615998, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        true, "queries": [{"query": "source:guardduty @evt.name:(Policy\\:IAMUser\\/S3BlockPublicAccessDisabled)",
        "groupByFields": ["@detail.resource.accessKeyDetails.userName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "a > 0"}], "message": "## WARNING: This rule is being deprecated
        on 6 March 2023.\n\n- Cloud SIEM team performs a regular audit of all detection
        rules to maintain high signal quality. We will be replacing this rule with
        an improved third party detection rule after the deprecation date. This rule
        will allow you to receive coverage with all GuardDuty detections and correlate
        them with other security signals fired.\n\n## Goal\nDetect when an AWS IAM
        user disables [S3 Block Public Access][1]\n\n## Strategy\nThis rule lets you
        monitor this [GuardDuty integration][2] finding:\n\n* [Policy:S3/AccountBlockPublicAccessDisabled][3]\n\n##
        Triage and response\n1. Determine which user triggered the signal. This can
        be found in the signal.\n2. Contact the user and determine why the user disabled
        the S3 Block Access feature.   \n3. Re-enable S3 Block Public Access.\n\n##
        Changelog\n* 1 November 2022 - Updated links.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n[2]:
        https://docs.datadoghq.com/integrations/amazon_guardduty/\n[3]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html#policy-s3-accountblockpublicaccessdisabled\n",
        "tags": ["scope:iam", "security:compliance", "source:guardduty", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "security:compliance", "source:guardduty", "mitre_platform:iaas", "scope:iam",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion"], "version":
        3, "id": "ab4-bab-93b", "updatedAt": 1734518927859, "blocking": false, "deprecationDate":
        1678060800000, "metadata": {"entities": null, "sources": null}, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "", "name": ""}}, {"name":
        "AWS IAM user escalating privileges", "createdAt": 1629705618661, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": true, "queries": [{"query": "source:guardduty @evt.name:(PrivilegeEscalation\\:IAMUser\\/AdministrativePermissions)",
        "groupByFields": ["@detail.resource.accessKeyDetails.userName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "a > 0"}], "message": "## WARNING: This rule is being deprecated
        on 6 March 2023.\n\n- Cloud SIEM team performs a regular audit of all detection
        rules to maintain high signal quality. We will be replacing this rule with
        an improved third party detection rule after the deprecation date. This rule
        will allow you to receive coverage with all GuardDuty detections and correlate
        them with other security signals fired.\n\n## Goal\nDetect when an AWS IAM
        user is attempting to escalate permissions.\n\n## Strategy\nThis rule lets
        you monitor this [GuardDuty integration][1] finding:\n\n* [PrivilegeEscalation:IAMUser/AdministrativePermissions][2]\n\n##
        Triage and response\n1. Determine which user triggered the signal. This can
        be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3.
        If the user''s credentials are compromised:\n  * Review the AWS [documentation][3]
        on remediating compromised AWS credentials.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_privilegeescalation.html#privilegeescalation1\n[5]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n",
        "tags": ["tactic:TA0004-privilege-escalation", "scope:iam", "technique:T1098-account-manipulation",
        "source:guardduty", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "tactic:TA0004-privilege-escalation", "security:attack",
        "scope:iam", "source:guardduty", "mitre_platform:iaas", "technique:T1098-account-manipulation"],
        "version": 3, "id": "2c1-7bc-7ac", "updatedAt": 1734518901568, "blocking":
        false, "deprecationDate": 1678060800000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "AWS IAM user requests from malicious IP", "createdAt": 1629705618969,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": true, "queries": [{"query": "source:guardduty
        @evt.name:(Recon\\:IAMUser\\/TorIPCaller OR Recon\\:IAMUser\\/MaliciousIPCaller.Custom
        OR Recon\\:IAMUser\\/MaliciousIPCaller OR UnauthorizedAccess\\:IAMUser\\/MaliciousIPCaller)",
        "groupByFields": ["@detail.resource.accessKeyDetails.userName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "a > 0"}], "message": "## WARNING: This rule is being deprecated
        on 6 March 2023.\n\n- Cloud SIEM team performs a regular audit of all detection
        rules to maintain high signal quality. We will be replacing this rule with
        an improved third party detection rule after the deprecation date. This rule
        will allow you to receive coverage with all GuardDuty detections and correlate
        them with other security signals fired.\n\n## Goal\nDetect when an AWS IAM
        user makes API requests from a malicious IP.\n\n## Strategy\nThis rule lets
        you monitor these [GuardDuty integration][1] findings:\n\n* [Recon:IAMUser/TorIPCaller][2]\n*
        [Recon:IAMUser/MaliciousIPCaller.Custom][3]\n* [Recon:IAMUser/MaliciousIPCaller][4]\n*
        [UnauthorizedAccess:IAMUser/MaliciousIPCaller][5]\n\n## Triage and response\n1.
        Determine which user triggered the signal. This can be found in the signal.\n2.
        Determine if the user''s credentials are compromised.  \n3. If the user''s
        credentials are compromised:\n  * Review the AWS [documentation][6] on remediating
        compromised AWS credentials.\n\n## Changelog\n1 November 2022 - Updated links.\n\n[1]:
        https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-iam.html#recon-iam-toripcaller\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-iam.html#recon-iam-maliciousipcallercustom\n[4]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-iam.html#recon-iam-toripcaller\n[5]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-iam.html#unauthorizedaccess-iam-maliciousipcaller\n[6]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n",
        "tags": ["scope:iam", "security:threat-intel", "source:guardduty", "tactic:TA0007-discovery",
        "mitre_platform:iaas", "security:attack", "technique:T1526-cloud-service-discovery",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "technique:T1526-cloud-service-discovery", "tactic:TA0007-discovery", "source:guardduty",
        "security:threat-intel", "mitre_platform:iaas", "scope:iam"], "version": 3,
        "id": "e55-19c-bcb", "updatedAt": 1734518920556, "blocking": false, "deprecationDate":
        1678060800000, "metadata": {"entities": null, "sources": null}, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "", "name": ""}}, {"name":
        "AWS IAM user suspicious login", "createdAt": 1629705614744, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": true, "queries": [{"query": "source:guardduty @evt.name:(UnauthorizedAccess\\:IAMUser\\/ConsoleLoginSuccess.B
        OR UnauthorizedAccess\\:IAMUser\\/ConsoleLogin)", "groupByFields": ["@detail.resource.accessKeyDetails.userName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "medium", "notifications": [], "condition": "a > 0"}], "message": "## WARNING:
        This rule is being deprecated on 6 March 2023.\n\n- Cloud SIEM team performs
        a regular audit of all detection rules to maintain high signal quality. We
        will be replacing this rule with an improved third party detection rule after
        the deprecation date. This rule will allow you to receive coverage with all
        GuardDuty detections and correlate them with other security signals fired.\n\n##
        Goal\nDetect when an AWS IAM user login is suspicious.\n\n## Strategy\nThis
        rule lets you monitor these [GuardDuty integration][1] findings:\n\n* [UnauthorizedAccess:IAMUser/ConsoleLoginSuccess.B][2]\n\n##
        Triage and response\n1. Determine which user triggered the signal. This can
        be found in the signal.\n2. Determine if the user''s credentials are compromised.  \n3.
        If the user''s credentials are compromised:\n  * Review the AWS [documentation][3]
        on remediating compromised AWS credentials.\n\n## Changelog\n1 November 2022
        - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-iam.html#unauthorizedaccess-iam-consoleloginsuccessb\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n",
        "tags": ["scope:iam", "source:guardduty", "security:anomaly", "technique:T1078-valid-accounts",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "security:anomaly", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "source:guardduty", "mitre_platform:iaas", "scope:iam"], "version": 3, "id":
        "29c-15c-4b5", "updatedAt": 1734518898737, "blocking": false, "deprecationDate":
        1678060800000, "metadata": {"entities": null, "sources": null}, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "", "name": ""}}, {"name":
        "AWS Java_Ghost security group creation attempt", "createdAt": 1695028067195,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @evt.name:CreateSecurityGroup @requestParameters.groupName:\"Java_Ghost\"",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "java_ghost_security_group"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "critical", "notifications":
        [], "condition": "java_ghost_security_group > 0"}], "message": "## Goal\nDetect
        when an attempt to create an AWS security group called \"Java_Ghost\" is observed.\n\n##
        Strategy\nMonitor CloudTrail and detect when an attempt to create an AWS security
        group called \"Java_Ghost\" has been observed. Datadog''s security research
        team has assessed with high confidence that an occurrence of this event likely
        means that identity `{{@userIdentity.arn}}` has been compromised. An attacker
        may try to create a security group to maintain access to any EC2 instances
        created.\n\n## Triage and response\n1. Determine other actions taken by the
        identity `{{@userIdentity.arn}}` by looking at past activity and the types
        of API calls occurring. \n2. Begin your company''s incident response process
        and an investigation.\n", "tags": ["scope:cloudtrail", "source:cloudtrail",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "source:cloudtrail",
        "security:attack", "scope:cloudtrail", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "technique:T1562-impair-defenses"], "version": 88, "id": "def-000-60z", "updatedAt":
        1736369577341, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS KMS key deleted or scheduled for deletion", "createdAt": 1629705614388,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(cloudtrail
        OR amazon-security-lake) @evt.name:(DisableKey OR ScheduleKeyDeletion)", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a KMS (Key Management Service)
        key is deleted or scheduled for deletion.\n\n## Strategy\nThis rule lets you
        monitor these CloudTrail API calls to detect if an attacker is deleting KMS
        keys:\n* [DisableKey][1]\n* [ScheduleKeyDeletion][2]\n\n## Triage and response\n1.
        Determine if `user ARN:` {{@userIdentity.arn}} in your organization should
        be making this call.\n2. If the user did not make the API call:\n    * Rotate
        the credentials.\n    * Use the `Cloud SIEM - User Investigation` OOTB dashboard
        to investigate other potential unauthorized API calls from this user.\n\n##
        Changelog\n* 16 March 2022 - Updated rule severity and markdown.\n* 16 November
        2022 - Updated rule query.\n\n[1]: https://docs.aws.amazon.com/kms/latest/APIReference/API_DisableKey.html\n[2]:
        https://docs.aws.amazon.com/kms/latest/APIReference/API_ScheduleKeyDeletion.html
        \n", "tags": ["security:compliance", "iaas:aws", "technique:T1485-data-destruction",
        "scope:kms", "requirement:Monitoring", "tactic:TA0040-impact", "framework:cis-aws",
        "control:4.7", "source:cloudtrail", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:cloudtrail", "mitre_platform:cloud",
        "iaas:aws", "requirement:Monitoring", "technique:T1485-data-destruction",
        "scope:kms", "security:attack", "tactic:TA0040-impact", "security:compliance",
        "mitre_platform:iaas", "control:4.7", "framework:cis-aws"], "version": 88,
        "id": "432-8db-b8b", "updatedAt": 1736369577344, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Kinesis Firehose stream destination
        modified", "createdAt": 1632157985361, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @eventSource:firehose.amazonaws.com
        @evt.name:UpdateDestination -@http.useragent:(cloudformation.amazonaws.com
        OR APN\\/*)", "groupByFields": ["@requestParameters.deliveryStreamName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "firehose_destination_modified"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 7200, "keepAlive":
        3600}, "cases": [{"name": "firehose_destination_modified", "status": "medium",
        "notifications": [], "condition": "firehose_destination_modified > 0"}], "message":
        "## Goal\nDetects when an AWS Kinesis Firehose Destination is modified.\n\n##
        Strategy\nThe rule monitors AWS Kinesis Firehose logs `@eventSource:firehose.amazonaws.com`
        and detects when the `@evt.name` is `UpdateDestination`.  \n\n## Triage and
        response\n1. Determine if `{{@userIdentity.arn}}` is expected to perform the
        `{{@evt.name}}` API call on the account: `{{@userIdentity.accountId}}`.\n2.
        If the API call was not made by the user, rotate the user credentials and
        investigate what other APIs were successfully accessed.\n   * Rotate the credentials.\n   *
        Investigate if the same credentials made other unauthorized API calls.", "tags":
        ["iaas:aws", "source:cloudtrail", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "scope:firehose", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "mitre_platform:cloud", "scope:firehose", "iaas:aws",
        "mitre_platform:iaas", "technique:T1562-impair-defenses", "source:cloudtrail",
        "tactic:TA0005-defense-evasion"], "version": 87, "id": "1y1-elh-nph", "updatedAt":
        1736369577370, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS Lambda function modified by IAM user", "createdAt": 1685720633323, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail @eventSource:lambda.amazonaws.com
        @evt.name:UpdateFunctionCode* @userIdentity.type:IAMUser -@userIdentity.invokedBy:(cloudformation.amazonaws.com
        OR \"AWS Internal\")", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@requestParameters.functionName"], "aggregation":
        "cardinality", "name": "lambda_function_modified"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "lambda_function_modified > 0"}], "message": "## Goal\nDetect when a IAM user
        modifies an AWS Lambda function. An attacker might modify a lambda function
        in order to maintain persistence or exfiltrate data being processed at runtime
        within an AWS environment.\n\n## Strategy\nThis rule lets you monitor the
        [`UpdateFunctionCode`][1] CloudTrail API call to detect when an AWS Lambda
        Function is modified. \n\n## Triage and response\n1. Determine whether the
        IAM user: `{{@userIdentity.arn}}` is expected to update the Lambda function
        within the `@requestParameters.functionName` attribute.\n2. If the action
        is legitimate, consider including the user in a suppression list. See [Best
        practices for creating detection rules with Datadog Cloud SIEM][2] for more
        information.\n3. If the action shouldn''t have happened:\n   * Contact the
        user: `{{@userIdentity.arn}}` and see if they made the API call.\n   * Use
        the Cloud SIEM - User Investigation dashboard to see if the user `{{@userIdentity.arn}}`
        has taken other actions.\n   * Use the Cloud SIEM - IP Investigation dashboard
        to see if there''s more traffic from the IP `{{@network.client.ip}}`.\n4.
        If the results of the triage indicate that an attacker has taken the action,
        begin your company''s incident response process as well as an investigation.\n\n[1]:
        https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionCode.html\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["scope:iam", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1098-account-manipulation", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas",
        "scope:iam", "source:cloudtrail"], "version": 87, "id": "def-000-b61", "updatedAt":
        1736369577410, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS Lambda function resource-based policy modified by IAM user", "createdAt":
        1686264589329, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @eventSource:lambda.amazonaws.com @evt.name:AddPermission*
        @userIdentity.type:IAMUser -@userIdentity.invokedBy:(cloudformation.amazonaws.com
        OR \"AWS Internal\")", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@requestParameters.functionName"], "aggregation":
        "cardinality", "name": "lambda_resource_based_policy_modified"}], "options":
        {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "lambda_resource_based_policy_modified > 0"}], "message":
        "## Goal\nDetect when an AWS Lambda function resource-based policy is modified
        by an IAM user. An attacker might modify an AWS Lambda function''s resource-based
        policy in order to maintain persistence or allow its invocation from an external
        account.\n\n## Strategy\nThis rule lets you monitor the [`AddPermission`][1]
        CloudTrail API call to detect when an AWS Lambda Function''s resource-based
        policy is modified.\n\n## Triage and response\n1. Determine whether the IAM
        user: `{{@userIdentity.arn}}` is expected to update the Lambda function within
        the `@requestParameters.functionName` attribute.\n2. Investigate the `{{@responseElements.statement}}`
        attribute for policy modification details.\n3. If the action is legitimate,
        consider including the user in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][2] for more information.\n3.
        If the action shouldn''t have happened:\n   * Contact the user: `{{@userIdentity.arn}}`
        and see if they made the API call.\n   * Use the Cloud SIEM - User Investigation
        dashboard to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, begin your company''s incident response
        process as well as an investigation.\n\n[1]: https://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["scope:iam", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1098-account-manipulation", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas",
        "scope:iam", "source:cloudtrail"], "version": 87, "id": "def-000-ser", "updatedAt":
        1736369577443, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS Network Access Control List created or modified", "createdAt": 1629705618913,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @evt.name:(CreateNetworkAcl OR CreateNetworkAclEntry)", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "nacl_created"}, {"query": "source:cloudtrail @evt.name:(DeleteNetworkAcl
        OR DeleteNetworkAclEntry)", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "nacl_deleted"},
        {"query": "source:cloudtrail @evt.name:(ReplaceNetworkAclEntry OR ReplaceNetworkAclAssociation)",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "nacl_updated"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "network ACL/ACL entry created",
        "status": "info", "notifications": [], "condition": "nacl_created > 0"}, {"name":
        "network ACL/ACL entry deleted", "status": "info", "notifications": [], "condition":
        "nacl_deleted > 0"}, {"name": "network ACL/ACL entry updated", "status": "info",
        "notifications": [], "condition": "nacl_updated > 0"}], "message": "## Goal\nDetect
        when an AWS Network Access Control List (NACL) has been created, deleted or
        modified.\n\n## Strategy\nThis rule lets you monitor CloudTrail and detect
        when an AWS NACL has been created, deleted or modified with one of the following
        API calls:\n* [CreateNetworkAcl][1] \n* [CreateNetworkAclEntry][2] \n* [DeleteNetworkAcl][3]
        \n* [DeleteNetworkAclEntry][4] \n* [ReplaceNetworkAclEntry][5] \n* [ReplaceNetworkAclAssociation][6]\n\n##
        Triage and response\n1. Determine if the usr with arn: {{@userIdentity.arn}}
        should have used the API call: {{@evt.name}}.\n2. Contact the user and see
        if this API call was made by the user.\n3. If the API call was not made by
        the user:\n   * Rotate the user credentials and investigate what other API
        calls.\n   * Determine what other API calls the user made which were not made
        by the user.\n\n## Changelog\n5 April 2022 - Updated Rule queries, cases and
        signal message.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAcl.html\n[2]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html\n[3]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAcl.html\n[4]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html\n[5]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html\n[6]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclAssociation.html\n",
        "tags": ["security:compliance", "scope:ec2", "iaas:aws", "requirement:Monitoring",
        "framework:cis-aws", "source:cloudtrail", "technique:T1562-impair-defenses",
        "control:4.11", "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "source:cloudtrail",
        "control:4.11", "scope:ec2", "framework:cis-aws", "iaas:aws", "security:compliance",
        "requirement:Monitoring", "mitre_platform:iaas", "mitre_platform:cloud"],
        "version": 88, "id": "282-cf7-5c4", "updatedAt": 1736369577556, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Network Gateway created or modified",
        "createdAt": 1629705615147, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail -@level:Error @evt.name:(CreateCustomerGateway
        OR CreateInternetGateway)", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "create_gateway"},
        {"query": "source:cloudtrail -@level:Error @evt.name:(DeleteCustomerGateway
        OR DeleteInternetGateway)", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "delete_gateway"},
        {"query": "source:cloudtrail @evt.name:(AttachInternetGateway OR DetachInternetGateway)",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "modify_gateway"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        43200, "keepAlive": 3600}, "cases": [{"name": "create gateway", "status":
        "info", "notifications": [], "condition": "create_gateway > 0"}, {"name":
        "delete gateway", "status": "info", "notifications": [], "condition": "delete_gateway
        > 0"}, {"name": "modify gateway", "status": "info", "notifications": [], "condition":
        "modify_gateway > 0"}], "message": "## Goal\nDetect when an AWS Network Gateway
        has been created or modified.\n\n## Strategy\nMonitor CloudTrail and detect
        when an AWS Network Gateway has been created or modified with one of the following
        API calls:\n* [CreateCustomerGateway][1] \n* [DeleteCustomerGateway][2] \n*
        [AttachInternetGateway][3] \n* [CreateInternetGateway][4]\n* [DeleteInternetGateway][5]
        \n* [DetachInternetGateway][6]\n\n## Triage and response\n1. Determine if
        the API call: {{@evt.name}} should have occurred.\n2. If it shouldn''t have
        been made:\n   * Contact the user: {{@userIdentity.arn}} and see if they made
        the API call.\n3. If the API call was not made by the user:\n   * Rotate the
        user credentials.\n   * Determine what other API calls were made with the
        old credentials that were not made by the user.\n\n## Changelog\n6 April 2022
        - Updated rule cases and signal message.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateCustomerGateway
        \n[2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteCustomerGateway
        \n[3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AttachInternetGateway
        \n[4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateInternetGateway
        \n[5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteInternetGateway
        \n[6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DetachInternetGateway.html\n",
        "tags": ["security:compliance", "scope:ec2", "iaas:aws", "control:4.12", "requirement:Monitoring",
        "framework:cis-aws", "source:cloudtrail", "technique:T1562-impair-defenses",
        "mitre_platform:iaas", "tactic:TA0005-defense-evasion", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "source:cloudtrail",
        "scope:ec2", "control:4.12", "framework:cis-aws", "iaas:aws", "security:compliance",
        "requirement:Monitoring", "mitre_platform:iaas", "mitre_platform:cloud"],
        "version": 87, "id": "6b3-f52-84e", "updatedAt": 1736369577579, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS RDS Cluster deleted", "createdAt":
        1629705617837, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail -@level:Error @evt.name:DeleteDBCluster", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a user deleted a database cluster
        in RDS.\n\n## Strategy\nThis rule lets you monitor this CloudTrail API call
        to detect if an attacker is deleting a RDS cluster:\n\n* [DeleteDBCluster][1]\n\n##
        Triage and response\n1. Determine if the API call: {{@evt.name}} should have
        occurred.\n2. If it shouldn''t have been made:\n   * Contact the user: {{@userIdentity.arn}}
        and see if they made the API call.\n3. If the API call was not made by the
        user:\n   * Rotate the user credentials.\n   * Determine what other API calls
        were made with the old credentials that were not made by the user.\n\n## Changelog\n6
        April 2022 - Updated rule and signal message.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/rds/delete-db-cluster.html\n",
        "tags": ["technique:T1485-data-destruction", "iaas:aws", "tactic:TA0040-impact",
        "source:cloudtrail", "scope:rds", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1485-data-destruction", "security:attack",
        "mitre_platform:cloud", "tactic:TA0040-impact", "scope:rds", "iaas:aws", "mitre_platform:iaas",
        "source:cloudtrail"], "version": 87, "id": "a11-897-de4", "updatedAt": 1736369577688,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Root credential activity", "createdAt":
        1629705620168, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries": [{"query":
        "source:guardduty @evt.name:(Policy\\:IAMUser\\/RootCredentialUsage)", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "low", "notifications": [], "condition": "a > 0"}], "message":
        "## WARNING: This rule is being deprecated on 6 March 2023.\n\n- Cloud SIEM
        team performs a regular audit of all detection rules to maintain high signal
        quality. We will be replacing this rule with an improved third party detection
        rule after the deprecation date. This rule will allow you to receive coverage
        with all GuardDuty detections and correlate them with other security signals
        fired.\n\n## Goal\nDetect when the AWS root user credentials are used.\n\n##
        Strategy\nThis rule lets you monitor this [GuardDuty integration][1] finding:\n\n*
        [Policy:IAMUser/RootCredentialUsage][2]\n\n## Triage and response\n1. Determine
        whether the root account activity was legitimate. \n    * Review the sample
        for context. \n    * Review CloudTrail logs for a full investigation. \n2.
        If the root user''s credentials are compromised:\n    * Review the AWS [documentation][3]
        on remediating compromised AWS credentials.\n\n**[Root Account Best Practices][4]**\n\n##
        Changelog\n1 November 2022 - Updated links.\n\n[1]: https://docs.datadoghq.com/integrations/amazon_guardduty/\n[2]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-iam.html#policy-iam-rootcredentialusage\n[3]:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html#compromised-creds\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html\n", "tags":
        ["scope:iam", "security:compliance", "source:guardduty", "control:cis-1.1",
        "framework:cis-aws", "technique:T1078-valid-accounts", "control:cis-3.3",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["scope:iam", "tactic:TA0001-initial-access",
        "security:attack", "control:cis-3.3", "source:guardduty", "framework:cis-aws",
        "security:compliance", "control:cis-1.1", "technique:T1078-valid-accounts",
        "mitre_platform:iaas", "mitre_platform:cloud"], "version": 3, "id": "acb-67e-eb4",
        "updatedAt": 1734518905111, "blocking": false, "deprecationDate": 1678060800000,
        "metadata": {"entities": null, "sources": null}, "creator": {"handle": "",
        "name": ""}, "updater": {"handle": "", "name": ""}}, {"name": "AWS Route 53
        DNS query logging disabled", "createdAt": 1631642349687, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:cloudtrail -@level:Error
        @evt.name:DeleteResolverQueryLogConfig", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a user deletes a Route 53 query
        logging configuration.\n\n## Strategy\nMonitor cloudtrail logs where `@evt.name`
        is `DeleteResolverQueryLogConfig` which would stop Route53 Query logging for
        all of the Amazon VPCs that are associated with the configuration.\n\n## Triage
        and response\n1. Determine if {{@userIdentity.arn}} is expected to perform
        the {{@evt.name}} API call.\n2. Contact the principal owner and see if this
        was an API call that was made by the user.\n3. If the API call was not made
        by the user, rotate the user credentials and investigate what other APIs were
        successfully accessed.\n\n## Changelog\n* 7 April 2022 - Updated rule query
        and signal message.\n* 5 January 2023 - Updated severity.", "tags": ["iaas:aws",
        "scope:route53", "technique:T1562-impair-defenses", "source:cloudtrail", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas",
        "technique:T1562-impair-defenses", "source:cloudtrail", "scope:route53"],
        "version": 87, "id": "aqn-nem-2ud", "updatedAt": 1736369577740, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Route 53 VPC disassociated from
        query logging configuration", "createdAt": 1631642350501, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:cloudtrail -@level:Error
        @evt.name:DisassociateResolverQueryLogConfig", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "aws_route53_querylogging_disassociated"}, {"query": "source:cloudtrail
        @error.kind:AccessDenied @evt.name:DisassociateResolverQueryLogConfig", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "aws_route53_querylogging_disassociated_access_denied"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "Successful", "status": "low", "notifications": [], "condition":
        "aws_route53_querylogging_disassociated > 0"}, {"name": "Access Denied", "status":
        "info", "notifications": [], "condition": "aws_route53_querylogging_disassociated_access_denied
        > 0"}], "message": "## Goal\nDetect when a user disassociates a VPC from the
        query logging configuration.\n\n## Strategy\nThis rule lets you monitor this
        CloudTrail API call to detect if a user has disassociated.\n\n* [DisassociateResolverQueryLogConfig][1]\n\n##
        Triage and response\n1. Determine if {{@userIdentity.arn}} is expected to
        perform the {{@evt.name}} API call.\n2. Contact the principal owner and see
        if this was an API call that was made by the user.\n3. If the API call was
        not made by the user, rotate the user credentials and investigate what other
        APIs were successfully accessed.\n   * Rotate the credentials.\n   * Investigate
        if the same credentials made other unauthorized API calls.\n\n## Changelog\n*
        7 April 2022 - Update rule and signal message.\n* 15 December 2022 - Update
        query to include Access Denied events and reduce severity.\n\n[1]: https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html",
        "tags": ["iaas:aws", "scope:route53", "technique:T1562-impair-defenses", "source:cloudtrail",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "scope:route53"], "version": 87, "id": "wem-cvg-42m",
        "updatedAt": 1736369577775, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS Route Table created or modified", "createdAt": 1629705615987,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @evt.name:(CreateRoute OR CreateRouteTable)", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "route_created"}, {"query": "source:cloudtrail @evt.name:(ReplaceRoute
        OR ReplaceRouteTableAssociation OR DisassociateRouteTable)", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "route_modified"}, {"query": "source:cloudtrail
        @evt.name:(DeleteRouteTable OR DeleteRoute)", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "route_deleted"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 43200, "keepAlive": 3600}, "cases": [{"name":
        "VPC route table created", "status": "info", "notifications": [], "condition":
        "route_created > 0"}, {"name": "VPC route table modified", "status": "info",
        "notifications": [], "condition": "route_modified > 0"}, {"name": "VPC route
        table deleted", "status": "info", "notifications": [], "condition": "route_deleted
        > 0"}], "message": "## Goal\nDetect when an AWS Route Table has been created
        or modified.\n\n## Strategy\nThis rule lets you monitor CloudTrail and detect
        when an AWS Route Table has been created or modified with one of the following
        API calls:\n* [CreateRoute][1] \n* [CreateRouteTable][2] \n* [ReplaceRoute][3]
        \n* [ReplaceRouteTableAssociation][4] \n* [DeleteRouteTable][5] \n* [DeleteRoute][6]
        \n* [DisassociateRouteTable][7]\n\n## Triage and response\n1. Determine if
        {{@userIdentity.arn}} is expected to perform the {{@evt.name}} API call.\n2.
        Contact the principal owner and see if this was an API call which was made
        by the user.\n3. If the API call was not made by the user, rotate the user
        credentials and investigate what other APIs were successfully accessed.\n\n##
        Changelog\n6 April 2022 - Updated signal message, rule query, and case layout.\n\n[1]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRoute.html
        \n[2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateRouteTable
        \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRoute.html
        \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceRouteTableAssociation
        \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRouteTable.html
        \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html
        \n [7]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateRouteTable.html\n",
        "tags": ["security:compliance", "scope:ec2", "iaas:aws", "control:4.13", "requirement:Monitoring",
        "framework:cis-aws", "source:cloudtrail", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "source:cloudtrail",
        "scope:ec2", "control:4.13", "framework:cis-aws", "iaas:aws", "security:compliance",
        "requirement:Monitoring", "mitre_platform:iaas", "mitre_platform:cloud"],
        "version": 88, "id": "fd3-1aa-d7d", "updatedAt": 1736369577822, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS S3 Bucket ACL made public", "createdAt":
        1629705618169, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:PutBucketAcl -@level:Error @requestParameters.AccessControlPolicy.AccessControlList.Grant.Grantee.URI:(\"http://acs.amazonaws.com/groups/global/AuthenticatedUsers\"  OR
        \"http://acs.amazonaws.com/groups/global/AllUsers\")", "groupByFields": ["@requestParameters.bucketName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when an S3 bucket policy is made public.\n\n##
        Strategy\nThis rule lets you monitor these CloudTrail API calls to detect
        when an AWS bucket is made public:\n\n* [PutBucketAcl][1]\n\nThis rule inspects
        the `@requestParameters.AccessControlPolicy.AccessControlList.Grant.Grantee.URI`
        array to determine if either of the strings are contained:\n* `http://acs.amazonaws.com/groups/global/AuthenticatedUsers`\n*
        `http://acs.amazonaws.com/groups/global/AllUsers`\n\nA match of either of
        these string indicates the S3 bucket policy is made public.\n\n## Triage and
        response\n1. Determine if {{@userIdentity.arn}} is expected to perform the
        {{@evt.name}} API call.\n2. Contact the principal owner and see if this was
        an API call that was made by the user.\n3. If the API call was not made by
        the user, rotate the user credentials and investigate what other APIs were
        successfully accessed.\n   * Rotate the credentials.\n   * Investigate if
        the same credentials made other unauthorized API calls.\n\n## Changelog\n7
        April 2022 - Updated rule and signal message.\n\n[1]: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/s3api/put-bucket-acl.html\n",
        "tags": ["security:compliance", "scope:ec2", "iaas:aws", "source:cloudtrail",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas", "security:attack",
        "iaas:aws", "technique:T1562-impair-defenses", "security:compliance", "tactic:TA0005-defense-evasion",
        "scope:ec2", "mitre_platform:cloud", "source:cloudtrail"], "version": 87,
        "id": "9e7-876-0ec", "updatedAt": 1736369577810, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS S3 Public Access Block removed",
        "createdAt": 1629705612748, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail -@level:error @evt.name:DeleteAccountPublicAccessBlock",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "public_access_block_removed"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "User removed public access block", "status": "high", "notifications":
        [], "condition": "public_access_block_removed > 0"}], "message": "## Goal\nDetect
        when the S3 Public Access Block configuration has been removed \n\n## Strategy\nThis
        rule lets you monitor this CloudTrail API call to detect if an attacker is
        deleting the S3 Public Access Block configuration:\n\n* [DeleteAccountPublicAccessBlock][1]\n\n##
        Triage and response\n1. Determine who the user was who made this API call.\n2.
        Contact the user and inform them of best practices of enabling Public Access
        Block on S3 buckets.\n3. Re-enable Public Access Block on the S3 bucket.\n\nMore
        details on S3 Public Block Public Access can be found [here][2].\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-public-access-block.html\n[2]:
        https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html\n\n##
        Changelog\n* 18 March 2022 - Updated severity and query.\n* 31 October 2022
        - Updated severity.", "tags": ["security:compliance", "control:7.2.1", "iaas:aws",
        "scope:s3", "source:cloudtrail", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "framework:pci", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1562-impair-defenses", "scope:s3", "security:attack", "tactic:TA0005-defense-evasion",
        "source:cloudtrail", "framework:pci", "iaas:aws", "security:compliance", "mitre_platform:iaas",
        "mitre_platform:cloud", "control:7.2.1"], "version": 87, "id": "4cd-f56-dfa",
        "updatedAt": 1736369577835, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS SES add verified identity followed by the deletion
        of the identity", "createdAt": 1713530930999, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @evt.name:VerifyEmailIdentity
        @eventSource:ses.amazonaws.com @userIdentity.accessKeyId:AKIA*", "groupByFields":
        ["@requestParameters.emailAddress"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "aws_ses_verifyemailidentity"}, {"query":
        "source:cloudtrail @evt.name:DeleteIdentity @eventSource:ses.amazonaws.com
        @userIdentity.accessKeyId:AKIA*", "groupByFields": ["@requestParameters.identity"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "aws_ses_deleteidentity"}], "options": {"evaluationWindow": 3600,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 3600},
        "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "aws_ses_verifyemailidentity > 0 THEN aws_ses_deleteidentity > 0"}], "message":
        "## Goal\nDetect when there is an attempt to add an email address to your
        Amazon SES account followed by the deletion of that address in a short time
        period. \n\n## Strategy\nMonitor CloudTrail and detect when there is an attempt
        to add an email address to your Amazon SES account followed by the deletion
        of that address in a short time period. Attackers target the AWS SES service
        generally for the purpose of phishing. To avoid detection, an attacker may
        add an email address to the SES account for a short period to perform a phishing
        attack and then remove it shortly after.\n\n## Triage and response\n1. Determine
        if the API call: `{{@evt.name}}` should have been made by the user: `{{@userIdentity.arn}}`
        from this IP address: `{{@network.client.ip}}` .\n2. If the action is legitimate,
        consider including the user in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][3] for more information.\n3.
        If the action shouldn''t have happened:\n   * Contact the user: `{{@userIdentity.arn}}`
        and see if they made the API call.\n   * Use the Cloud SIEM - User Investigation
        dashboard to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, initiate your company''s incident response
        process, as well as an investigation.\n\n[1]: https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_GetAccount.html\n[2]:
        https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_ListServiceQuotas.html",
        "tags": ["technique:T1070-indicator-removal", "source:cloudtrail", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "technique:T1070-indicator-removal", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "source:cloudtrail"], "version": 88, "id": "def-000-yax",
        "updatedAt": 1736369577869, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS SES discovery attempt by long term access key", "createdAt":
        1713530931333, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:GetAccount @eventSource:ses.amazonaws.com @userIdentity.accessKeyId:AKIA*",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "aws_ses_getaccount_long_term_access_key"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "aws_ses_getaccount_long_term_access_key > 0"}], "message":
        "## Goal\nDetect when there is an attempt to determine the status of an organization''s
        Amazon SES account. \n\n## Strategy\nMonitor CloudTrail and detect when there
        is an attempt to determine the status of an organizations Amazon SES account.
        Attackers target the AWS SES service generally for the purpose of phishing.
        In order to determine the sending quota of an account or if the account is
        currently in a sandbox environment, the attacker may use the API call [`GetAccount`][1].\n\n##
        Triage and response\n1. Determine if the API call: `{{@evt.name}}` should
        have been made by the user: `{{@userIdentity.arn}}` from this IP address:
        `{{@network.client.ip}}` .\n2. If the action is legitimate, consider including
        the user in a suppression list. See [Best practices for creating detection
        rules with Datadog Cloud SIEM][2] for more information.\n3. If the action
        shouldn''t have happened:\n   * Contact the user: `{{@userIdentity.arn}}`
        and see if they made the API call.\n   * Use the Cloud SIEM - User Investigation
        dashboard to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, initiate your company''s incident response
        process, as well as an investigation.\n\n## Changelog\n* 17 December 2024
        - updated rule query.\n\n[1]: https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_GetAccount.html\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:cloudtrail", "tactic:TA0007-discovery", "mitre_platform:iaas",
        "security:attack", "technique:T1526-cloud-service-discovery", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1526-cloud-service-discovery", "mitre_platform:cloud", "tactic:TA0007-discovery",
        "mitre_platform:iaas", "security:attack", "source:cloudtrail"], "version":
        87, "id": "def-000-x6y", "updatedAt": 1736369577937, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS SES email sending enabled in current
        AWS region", "createdAt": 1713530930511, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @evt.name:(UpdateAccountSendingEnabled
        OR PutAccountSendingAttributes) (@requestParameters.enabled:true OR @requestParameters.sendingEnabled:true)
        @userIdentity.accessKeyId:AKIA*", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "aws_ses_enable_email_sending"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "aws_ses_enable_email_sending > 0"}], "message": "## Goal\nDetect when email
        sending is enabled in your Amazon SES account for the current AWS region.
        \n\n## Strategy\nMonitor CloudTrail and detect when email sending is enabled
        in your Amazon SES account for the current AWS region. Attackers target the
        AWS SES service generally for the purpose of phishing. To ensure the capbility
        to send email to their targets attackers will use the API calls [`UpdateAccountSendingEnabled`][1]
        or [`PutAccountSendingAttributes`][2] to enable email sending.\n\n## Triage
        and response\n1. Determine if the API call: `{{@evt.name}}` should have been
        made by the user: `{{@userIdentity.arn}}` from this IP address: `{{@network.client.ip}}`
        .\n2. If the action is legitimate, consider including the user in a suppression
        list. See [Best practices for creating detection rules with Datadog Cloud
        SIEM][3] for more information.\n3. If the action shouldn''t have happened:\n   *
        Contact the user: `{{@userIdentity.arn}}` and see if they made the API call.\n   *
        Use the Cloud SIEM - User Investigation dashboard to see if the user `{{@userIdentity.arn}}`
        has taken other actions.\n   * Use the Cloud SIEM - IP Investigation dashboard
        to see if there''s more traffic from the IP `{{@network.client.ip}}`.\n4.
        If the results of the triage indicate that an attacker has taken the action,
        initiate your company''s incident response process, as well as an investigation.\n\n[1]:
        https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateAccountSendingEnabled.html\n[2]:
        https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_PutAccountSendingAttributes.html",
        "tags": ["iaas:aws", "tactic:TA0040-impact", "source:cloudtrail", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "iaas:aws", "source:cloudtrail", "tactic:TA0040-impact", "security:attack",
        "technique:T1496-resource-hijacking", "mitre_platform:iaas"], "version": 88,
        "id": "def-000-wwz", "updatedAt": 1736369578018, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Security Hub disabled", "createdAt":
        1631642348632, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail -@network.client.ip:cloudformation.amazonaws.com -@level:Error
        @evt.name:DisableSecurityHub", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "not_cloudformation_action"},
        {"query": "source:cloudtrail @network.client.ip:cloudformation.amazonaws.com
        -@level:Error @evt.name:DisableSecurityHub", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "cloudformation_action"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "not a cloudformation action", "status": "high",
        "notifications": [], "condition": "not_cloudformation_action > 0"}, {"name":
        "cloudformation action", "status": "low", "notifications": [], "condition":
        "cloudformation_action > 0"}], "message": "## Goal\nDetect when a user disables
        AWS Security Hub.\n\n## Strategy\nThis rule lets you monitor this CloudTrail
        API call to detect if a user has disabled AWS Security Hub:\n\n* [DisableSecurityHub][1]\n\n##
        Triage and response\n1. Determine if `{{@userIdentity.arn}}` is expected to
        perform the `{{@evt.name}}` API call on the account: `{{@userIdentity.accountId}}`.\n2.
        Contact the principal owner and see if this was an API call that was made
        by the user.\n3. If the API call was not made by the user, rotate the user
        credentials and investigate what other APIs were successfully accessed.\n   *
        Rotate the credentials.\n   * Investigate if the same credentials made other
        unauthorized API calls.\n\n## Changelog\n* 7 April 2022 - Updated rule query
        and signal message.\n* 20 January 2022 - Updated rule severity.\n\n[1]: https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DisableSecurityHub.html",
        "tags": ["iaas:aws", "scope:cloudtrail", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "scope:cloudtrail", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "m4l-btf-8cs", "updatedAt": 1736369578123, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS VPC Flow Log deleted", "createdAt":
        1677105464719, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:DeleteFlowLogs @eventSource:ec2.amazonaws.com",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "vpc_flow_log_deleted"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "vpc_flow_log_deleted > 0"}], "message": "## Goal\nDetect
        when one or more AWS VPC Flow Log are deleted.\n\n## Strategy\nMonitor CloudTrail
        and detect when AWS VPC FLow Logs are deleted by calling the [DeleteFlowLogs][1]
        API.\n\n## Triage and response\n1. Determine if the API call: `{{@evt.name}}`
        should have occurred.\n2. If the action was legitimate, consider allowing
        the invoking service: `{{@userIdentity.invokedBy}}`, user: `{{@userIdentity.arn}}`,
        or other appropriate attribute through a [suppression list][2].\n3. If it
        shouldn''t have been made:\n   * Contact the user: {{@userIdentity.arn}} and
        see if they made the API call.\n4. If the API call was not made by the user:\n   *
        Rotate the user credentials.\n   * Determine what other API calls were made
        with the old credentials that were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n",
        "tags": ["scope:amazon-vpc", "iaas:aws", "source:cloudtrail", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "mitre_platform:cloud",
        "scope:amazon-vpc", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "def-000-pn2", "updatedAt": 1736369578151, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS VPC created or modified", "createdAt":
        1629705612037, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail -@level:Error @evt.name:(DeleteVpc OR DeleteVpcPeeringConnection)",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "vpc_deleted"}, {"query":
        "source:cloudtrail -@level:Error @evt.name:(CreateVpc OR CreateVpcPeeringConnection)",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "vpc_created"}, {"query":
        "source:cloudtrail -@level:Error @evt.name:(ModifyVpcAttribute OR AcceptVpcPeeringConnection
        OR RejectVpcPeeringConnection OR AttachClassicLinkVpc OR DetachClassicLinkVpc
        OR DisableVpcClassicLink OR EnableVpcClassicLink)", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "vpc_modified"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name":
        "vpc deleted", "status": "info", "notifications": [], "condition": "vpc_deleted
        > 0"}, {"name": "vpc created", "status": "info", "notifications": [], "condition":
        "vpc_created > 0"}, {"name": "vpc modified", "status": "info", "notifications":
        [], "condition": "vpc_modified > 0"}], "message": "## Goal\nDetect when an
        attacker is destroying a VPC.\n\n## Strategy\nThis rule lets you monitor this
        CloudTrail API call to detect if an attacker is deleting a VPC:\n\n* [DeleteVpc][1]\n\n##
        Triage and response\n1. Determine if `{{@userIdentity.arn}}` is expected to
        perform the `{{@evt.name}}` API call on the account: `{{@userIdentity.accountId}}`.\n2.
        Contact the principal owner and see if this was an API call that was made
        by the user.\n3. If the API call was not made by the user, rotate the user
        credentials and investigate what other APIs were successfully accessed.\n   *
        Rotate the credentials.\n   * Investigate if the same credentials made other
        unauthorized API calls.\n\n## Changelog\n7 April 2022 - Updated rule query,
        cases and signal message.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-vpc.html\n",
        "tags": ["security:compliance", "scope:vpc", "iaas:aws", "technique:T1485-data-destruction",
        "requirement:Monitoring", "tactic:TA0040-impact", "framework:cis-aws", "control:4.14",
        "source:cloudtrail", "mitre_platform:iaas", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1485-data-destruction",
        "source:cloudtrail", "control:4.14", "scope:vpc", "framework:cis-aws", "iaas:aws",
        "security:compliance", "requirement:Monitoring", "tactic:TA0040-impact", "mitre_platform:iaas",
        "mitre_platform:cloud"], "version": 88, "id": "f6b-3b4-aef", "updatedAt":
        1736369578201, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS Verified Access anomalous failed authentication attempts by IP", "createdAt":
        1680559452175, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:verified-access @evt.name:\"Access Denied\"", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name": "", "status":
        "medium", "notifications": []}], "message": "## Goal\nDetect when access is
        denied to an IP authenticating using AWS Verified Access. \n\n## Strategy\nThe
        anomaly detection generates a security signal when an IP''s authentication
        failure requests deviates from its baseline. \n\nFor more information about
        the anomaly detection method, see [Detect security threats with anomaly detection
        rules][1].\n\n## Triage and response\nDetermine if the IP `{{@network.client.ip}}`
        should have access.\n\n[1]: https://www.datadoghq.com/blog/anomaly-detection-rules-datadog/",
        "tags": ["technique:T1199-trusted-relationship", "source:aws", "mitre_platform:iaas",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1199-trusted-relationship", "source:aws",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access"],
        "version": 88, "id": "def-000-ziw", "updatedAt": 1736369578244, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Verified Access anomalous failed
        authentication attempts by host", "createdAt": 1680559452199, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:verified-access
        @evt.name:\"Access Denied\"", "groupByFields": ["host"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        86400, "keepAlive": 7200}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "## Goal\nDetect when access is denied to a host authenticating
        using AWS Verified Access. \n\n## Strategy\nThe anomaly detection generates
        a security signal when a host''s authentication failure requests deviates
        from its baseline. \n\nFor more information about the anomaly detection method,
        see [Detect security threats with anomaly detection rules][1].\n\n## Triage
        and response\nDetermine if the host `{{@host}}` should have access.\n\n[1]:
        https://www.datadoghq.com/blog/anomaly-detection-rules-datadog/", "tags":
        ["technique:T1199-trusted-relationship", "source:aws", "mitre_platform:iaas",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1199-trusted-relationship", "source:aws",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access"],
        "version": 88, "id": "def-000-g1e", "updatedAt": 1736369578262, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS Verified Access anomalous failed
        authentication attempts by user", "createdAt": 1680559452131, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:verified-access
        @evt.name:\"Access Denied\"", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        86400, "keepAlive": 7200}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "## Goal\nDetect when access is denied to a user authenticating
        using AWS Verified Access. \n\n## Strategy\nThe anomaly detection generates
        a security signal when a user''s authentication failure requests deviates
        from its baseline. \n\nFor more information about the anomaly detection method,
        see [Detect security threats with anomaly detection rules][1].\n\n## Triage
        and response\nDetermine if the user `{{@usr.id}}` should have access.\n\n[1]:
        https://www.datadoghq.com/blog/anomaly-detection-rules-datadog/", "tags":
        ["technique:T1078-valid-accounts", "source:aws", "mitre_platform:iaas", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1078-valid-accounts",
        "mitre_platform:cloud", "source:aws", "mitre_platform:iaas", "security:attack",
        "tactic:TA0001-initial-access"], "version": 88, "id": "def-000-8oe", "updatedAt":
        1736369578271, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "AWS WAF traffic blocked by specific rule", "createdAt": 1632157984083, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "service:waf @system.action:BLOCK",
        "groupByFields": ["@webaclId"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "waf_traffic_block"}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 1800, "keepAlive":
        1800}, "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetects when a specific AWS Web Application Firewall (WAF) rule
        blocks an anomalous amount of traffic.\n\n## Strategy\nThe rule monitors AWS
        WAF logs and detects when the `@system.action` has a value of `BLOCK`.\n\n##
        Triage and response\n1. Inspect the `@webaclId`: `{{@webaclId}}` logs to confirm
        if the observed traffic should have been blocked or not.\n2. If the request
        should have been blocked, then navigate to the IP Investigation dashboard.
        Inspect other requests from the IP address:{{@network.client.ip}} to find
        any other potentially malicious behaviors from the IP.", "tags": ["iaas:aws",
        "scope:waf", "source:cloudtrail", "mitre_platform:iaas", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:cloudtrail", "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas",
        "scope:waf"], "version": 87, "id": "h8p-rcn-miw", "updatedAt": 1736369578282,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS WAF traffic blocked by specific
        rule on multiple IPs", "createdAt": 1634658953085, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "service:waf @system.action:BLOCK", "groupByFields":
        ["@webaclId"], "hasOptionalGroupByFields": false, "distinctFields": ["@network.client.ip"],
        "aggregation": "cardinality", "name": "waf_traffic_block"}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 1800, "keepAlive":
        1800}, "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when a specific AWS Web Application Firewall (WAF) rule blocks
        traffic from multiple IPs.\n\n## Strategy\nThe rule monitors AWS WAF logs
        and detects when the `@system.action` has a value of `BLOCK`.\n\n## Triage
        and response\n1. Inspect the `@http.request_id`: `{{@http.request_id}}` to
        confirm if this request should have been blocked or not.\n2. If the request
        should have been blocked, then navigate to the IP Investigation dashboard.
        Inspect other requests from the IP address:{{@network.client.ip}} to find
        any other potentially malicious behaviors from the IP.\n", "tags": ["iaas:aws",
        "scope:waf", "source:cloudtrail", "mitre_platform:iaas", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:cloudtrail", "mitre_platform:cloud", "iaas:aws", "mitre_platform:iaas",
        "scope:waf"], "version": 87, "id": "2yu-ey6-507", "updatedAt": 1736369578299,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS WAF web access control list deleted",
        "createdAt": 1632157984782, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventSource:waf*.amazonaws.com @evt.name:DeleteWebACL
        -@http.useragent:\\APN\\/*", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "waf_webacl_deletion"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "waf_webacl_deletion > 0"}], "message": "## Goal\nDetect
        when an AWS Web Application Firewall (WAF) Access Control List (ACL) is deleted.\n\n##
        Strategy\nThe rule monitors AWS WAF logs `@eventSource:waf*.amazonaws.com`
        and detects when the `@evt.name` is `DeleteWebACL`.  \n\n## Triage and response\n1.
        Determine if `{{@userIdentity.arn}}` is expected to perform the `{{@evt.name}}`
        API call on the account: `{{@userIdentity.accountId}}`.\n2. If the API call
        was not made by the user, rotate the user credentials and investigate what
        other APIs were successfully accessed.", "tags": ["iaas:aws", "scope:waf",
        "source:cloudtrail", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:cloud", "scope:waf", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "rkm-8xh-x8b", "updatedAt": 1736369578335, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS WAF web access control list modified",
        "createdAt": 1632157984124, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventSource:waf*.amazonaws.com @evt.name:UpdateWebACL
        -@http.useragent:(\\APN\\/* OR cloudformation.amazonaws.com)", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "waf_webacl_update"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 7200, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "waf_webacl_update > 0"}], "message": "## Goal\nDetect when an AWS Web Application
        Firewall (WAF) Access Control List (ACL) is updated.\n\n## Strategy\nThe rule
        monitors AWS WAF logs `@eventSource:waf*.amazonaws.com` and detects when the
        `@evt.name` is `UpdateWebACL`.  \n\n## Triage and response\n1. Determine if
        `{{@userIdentity.arn}}` is expected to perform the `{{@evt.name}}` API call
        on the account: `{{@userIdentity.accountId}}`.\n2. If the API call was not
        made legitimately by the user, rotate the user''s credentials and investigate
        what other APIs were successfully accessed.", "tags": ["iaas:aws", "scope:waf",
        "source:cloudtrail", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:cloud", "scope:waf", "iaas:aws", "mitre_platform:iaas", "technique:T1562-impair-defenses",
        "source:cloudtrail", "tactic:TA0005-defense-evasion"], "version": 87, "id":
        "moj-p98-l67", "updatedAt": 1736369578451, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS access key creation by previously
        unseen identity", "createdAt": 1685720637357, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @evt.name:CreateAccessKey
        @responseElements.accessKey.status:Active", "groupByFields": ["@userIdentity.accessKeyId"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@userIdentity.arn",
        "metrics": ["@userIdentity.arn"], "aggregation": "new_value", "name": ""}],
        "options": {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter": 28, "learningDuration":
        7, "learningThreshold": 0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "medium", "notifications": []}], "message":
        "## Goal\nDetect when an AWS access key is created by an unfamiliar identity.\n\n##
        Strategy\nThis rule monitors Cloudtrail logs for `CreateAccessKey` API calls
        made by an AWS identity. An attacker may create an AWS access key to maintain
        persistence in the account.\n\n**Note:**  This rule uses the `New Value` detection
        method to determine when a previously unseen AWS identity is observed performing
        this action.\n\n## Triage & response\n1. Determine if the API call: `{{@evt.name}}`
        should have been performed by the identity: `{{@userIdentity.arn}}`:\n   *
        Contact the owner of the identity to confirm if they made the API call. \n2.
        If the API call was not made by the identity:\n   * Rotate the identity credentials.\n   *
        Determine what actions were taken by the identity and the new access keys
        created.\n   * Begin your organization''s incident response process and investigate.\n3.
        If the API call was made legitimately by the identity:\n   * Work with the
        owner of the identity to understand if a long term credential is the best
        way to meet their use case.\n   * As a best practice AWS recommends using
        temporary security credentials (IAM roles) instead of creating long-term credentials
        like access keys.", "tags": ["iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "iaas:aws", "source:cloudtrail",
        "security:attack", "mitre_platform:iaas", "tactic:TA0003-persistence", "technique:T1098-account-manipulation"],
        "version": 87, "id": "def-000-t49", "updatedAt": 1736369578548, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS console login without MFA", "createdAt":
        1629716591626, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:ConsoleLogin -@additionalEventData.MFAUsed:Yes
        @responseElements.ConsoleLogin:Success @userIdentity.type:IAMUser -@additionalEventData.SamlProviderArn:*",
        "groupByFields": ["@userIdentity.accountId", "@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "user_login_without_mfa"},
        {"query": "source:cloudtrail @evt.name:ConsoleLogin -@additionalEventData.MFAUsed:Yes
        @responseElements.ConsoleLogin:Success @userIdentity.type:Root -@additionalEventData.SamlProviderArn:*",
        "groupByFields": ["@userIdentity.accountId", "@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "root_login_without_mfa"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "root console login no mfa",
        "status": "high", "notifications": [], "condition": "root_login_without_mfa
        > 0"}, {"name": "user console login no mfa", "status": "medium", "notifications":
        [], "condition": "user_login_without_mfa > 0"}], "message": "## Goal\nDetect
        when any user logs in to your AWS console without multi-factor authentication.\n\n##
        Strategy\nThis rule monitors CloudTrail and detects when any `IAMUser` or
        `Root` user does a `Console Login`, and `@userIdentity.sessionContext.attributes.mfaAuthenticated`
        has a value of `false`. \n\n**Notes:** \n\n- This rule triggers with a `High`
        severity if the user logging in is a `Root` user.\n- This rule ignores logins
        using SAML because 2FA is implemented on the IdP and not through AWS.\n\n##
        Triage and response\n1. Reach out to the {{@usr.name}} to determine if the
        login was legitimate. \n   * Use Cloud SIEM - User Investigation dashboard
        to see if the user: {{@usr.name}} with an account type of: {{@userIdentity.type}}
        has done any actions after logging in. \n2. If the login was legitimate, request
        that the user enables 2FA. \n3. If the login wasn''t legitimate, rotate the
        credentials, enable 2FA and triage an actions uncovered from step 1.\n4. Review
        all user accounts to ensure MFA is enabled.\n\n## Changelog\n3 March 2022
        - Updated rule.\n", "tags": ["scope:iam", "iaas:aws", "requirement:Monitoring",
        "technique:T1078-valid-accounts", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:iam", "mitre_platform:iaas", "iaas:aws", "security:attack", "requirement:Monitoring",
        "technique:T1078-valid-accounts", "mitre_platform:cloud", "tactic:TA0001-initial-access",
        "source:cloudtrail"], "version": 87, "id": "208-e1f-0f9", "updatedAt": 1736369578643,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "AWS principal added to multiple EKS
        clusters", "createdAt": 1685950188212, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @evt.name:(CreateAccessEntry OR AssociateAccessPolicy)",
        "groupByFields": ["@requestParameters.principalArn", "@recipientAccountId"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@requestParameters.name"],
        "aggregation": "cardinality", "name": "principal_granted_access_to_cluster"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "principal_granted_access_to_cluster > 5"}], "message": "##
        Goal\nDetect when an AWS principal is assigned permissions on multiple Amazon
        EKS clusters in a short amount of time. This can be indicative of an attacker
        compromising your AWS environment and laterally moving to your EKS clusters.\n\n##
        Strategy\nThis rule leverages CloudTrail and triggers if `CreateAccessEntry`
        or `AssociateAccessPolicy` events are triggered for the same AWS principal
        on more than 5 unique EKS clusters.\n\nTo learn more about EKS Cluster Access
        Management, see this guide on Datadog Security Labs: [Deep dive into the new
        Amazon EKS Cluster Access Management features](https://securitylabs.datadoghq.com/articles/eks-cluster-access-management-deep-dive/).\n\n##
        Triage and response\n1. Determine if `@requestParameters.principalArn` (the
        grantee) should be granted permissions on the target EKS clusters.\n2. Determine
        if `{{@userIdentity.session_name}}` (the grantor) should have granted permissions
        on the target EKS clusters.\n3. If the API calls were not made by the user:\n  *
        Rotate user credentials.\n  * Determine what other API calls were made by
        the user.\n  * Revert the permissions change by removing the access entry.\n4.
        If the API calls were made by the user:\n  * Determine if the user should
        be granting access to the cluster.\n  * If not, see if other API calls were
        made by the user and determine if they warrant further investigation.\n",
        "tags": ["tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:containers", "mitre_platform:iaas", "scope:amazon-eks",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:containers",
        "mitre_platform:iaas", "technique:T1098-account-manipulation", "iaas:aws",
        "security:attack", "scope:amazon-eks", "mitre_platform:cloud", "source:cloudtrail",
        "tactic:TA0004-privilege-escalation"], "version": 87, "id": "def-000-dzx",
        "updatedAt": 1736369578669, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS principal assigned administrative privileges in an
        EKS cluster", "createdAt": 1685950188580, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @evt.name:AssociateAccessPolicy
        @requestParameters.policyArn:(\"arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy\"
        OR \"arn:aws:eks::aws:cluster-access-policy/AmazonEKSAdminPolicy\")", "groupByFields":
        ["@userIdentity.arn", "@requestParameters.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "associateaccesspolicy_assign_adminpolicy"},
        {"query": "source:cloudtrail @evt.name:(CreateAccessEntry OR UpdateAccessEntry)
        @requestParameters.kubernetesGroups:cluster-admin", "groupByFields": ["@userIdentity.arn",
        "@requestParameters.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "accessentry_assign_clusteradmin"}], "options":
        {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "associateaccesspolicy_assign_adminpolicy > 0 || accessentry_assign_clusteradmin
        > 0"}], "message": "## Goal\nDetect when an AWS principal is assigned administrative
        permissions on an Amazon EKS cluster.\n\n## Strategy\nThis rule allows you
        to monitor CloudTrail and detect if someone grants administrative permissions
        to an EKS cluster, through the following events:\n\n- `CreateAccessEntry`\n-
        `UpdateAccessEntry`\n- `AssociateAccessPolicy`\n\nIt triggers when an AWS
        principal is assigned the managed access policy, `AmazonEKSAdminPolicy` or
        `AmazonEKSClusterAdminPolicy`, or if the access entry corresponding to the
        principal is assigned the built-in `cluster-admin` Kubernetes group.\n\nTo
        learn more about EKS Cluster Access Management, see this guide on Datadog
        Security Labs: [Deep dive into the new Amazon EKS Cluster Access Management
        features](https://securitylabs.datadoghq.com/articles/eks-cluster-access-management-deep-dive/).\n\n##
        Triage and response\n1. Determine if `{{@userIdentity.session_name}}` should
        have granted permissions on the EKS cluster.\n2. If the API calls were not
        made by the user:\n  * Rotate user credentials.\n  * Determine what other
        API calls were made by the user.\n  * Revert the permissions change by removing
        the access entry.\n3. If the API calls were made by the user:\n  * Determine
        if the user should be granting access to the cluster.\n  * If not, see if
        other API calls were made by the user and determine if they warrant further
        investigation.\n", "tags": ["tactic:TA0004-privilege-escalation", "iaas:aws",
        "tactic:TA0008-lateral-movement", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:containers", "mitre_platform:iaas", "scope:amazon-eks",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "technique:T1098-account-manipulation", "source:cloudtrail", "scope:amazon-eks",
        "tactic:TA0003-persistence", "iaas:aws", "tactic:TA0008-lateral-movement",
        "mitre_platform:containers", "mitre_platform:iaas", "mitre_platform:cloud",
        "tactic:TA0004-privilege-escalation"], "version": 88, "id": "def-000-cm5",
        "updatedAt": 1736369578687, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}], "meta": {"page": {"total_count": 560, "total_filtered_count":
        100}}}'
    headers:
      Content-Type:
      - application/json
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Content-Type:
      - application/json
    method: GET
    uri: https://us5.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=1&page%5Bsize%5D=100
  response:
    body:
      string: '{"data": [{"name": "AWS principal granted access to a EKS cluster then
        removed", "createdAt": 1685950188640, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @evt.name:CreateAccessEntry", "groupByFields":
        ["@requestParameters.principalArn", "@requestParameters.name", "@recipientAccountId"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "create_access_entry"}, {"query": "source:cloudtrail @evt.name:DeleteAccessEntry",
        "groupByFields": ["@requestParameters.principalArn", "@requestParameters.name",
        "@recipientAccountId"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "delete_access_entry"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "create_access_entry > 0 THEN delete_access_entry > 0"}], "message": "## Goal\nDetect
        when an AWS principal is assigned permissions on an Amazon EKS cluster, and
        removed permissions shortly after. This can be an indicator of an attacker
        temporarily granting themselves access to an EKS cluster, then removing permissions
        to stay under the radar.\n\n## Strategy\nThis rule leverages CloudTrail and
        triggers if an event `CreateAccessEntry` is followed by `DeleteAccessEntry`
        for the same AWS principal within 1 hour.\n\nTo learn more about EKS Cluster
        Access Management, see this guide on Datadog Security Labs: [Deep dive into
        the new Amazon EKS Cluster Access Management features](https://securitylabs.datadoghq.com/articles/eks-cluster-access-management-deep-dive/).\n\n##
        Triage and response\n1. Determine if `@requestParameters.principalArn` should
        have access to the EKS cluster.\n2. Determine if `{{@userIdentity.session_name}}`
        should have granted permissions on the EKS cluster.\n3. If the API calls were
        not made by the user:\n  * Rotate user credentials.\n  * Determine what other
        API calls were made by the user.\n  * Revert the permissions change by removing
        the access entry.\n4. If the API calls were made by the user:\n  * Determine
        if the user should be granting access to the cluster.\n  * If not, see if
        other API calls were made by the user and determine if they warrant further
        investigation.\n", "tags": ["iaas:aws", "technique:T1070-indicator-removal",
        "source:cloudtrail", "mitre_platform:containers", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "scope:amazon-eks", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1070-indicator-removal", "mitre_platform:cloud", "tactic:TA0005-defense-evasion",
        "scope:amazon-eks", "iaas:aws", "security:attack", "mitre_platform:iaas",
        "mitre_platform:containers", "source:cloudtrail"], "version": 88, "id": "def-000-b69",
        "updatedAt": 1736369578866, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS root account activity", "createdAt": 1629705616144,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @userIdentity.type:Root -@evt.name:ConsoleLogin -@userIdentity.invokedBy:*
        -@eventType:AwsServiceEvent -@additionalEventData.SamlProviderArn:*", "groupByFields":
        ["@userIdentity.accountId"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "non_authentication_activity"}, {"query":
        "source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success
        @userIdentity.type:Root -@userIdentity.invokedBy:* -@eventType:AwsServiceEvent
        -@additionalEventData.SamlProviderArn:*", "groupByFields": ["@userIdentity.accountId"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "successful_login"}, {"query": "source:cloudtrail @evt.name:ConsoleLogin
        @responseElements.ConsoleLogin:Failure @userIdentity.type:Root -@userIdentity.invokedBy:*
        -@eventType:AwsServiceEvent -@additionalEventData.SamlProviderArn:*", "groupByFields":
        ["@userIdentity.accountId"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "failed_login"}], "options": {"evaluationWindow":
        7200, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "successful login", "status": "high", "notifications":
        [], "condition": "successful_login > 0"}, {"name": "failed login", "status":
        "high", "notifications": [], "condition": "failed_login > 0"}, {"name": "non
        authentication activity", "status": "medium", "notifications": [], "condition":
        "non_authentication_activity > 0"}], "message": "## Goal\nDetect AWS root
        user activity. \n\n## Strategy\nMonitor CloudTrail and detect when any `@userIdentity.type`
        has a value of `Root`, but is not invoked by an AWS service or SAML provider.\n\n##
        Triage and response\n1. Determine if the root API Call: `{{@evt.name}}` is
        expected. \n2. If the action wasn''t legitimate, rotate the credentials, enable
        2FA, and open an investigation. \n\n* For best practices, check out the [AWS
        Root Account Best Practices][1] documentation.\n* For compliance, check out
        the [CIS AWS Foundations Benchmark controls][2] documentation.\n\n\n[1]: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html\n[2]:
        https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cis-controls.html\n",
        "tags": ["scope:iam", "iaas:aws", "technique:T1078-valid-accounts", "source:cloudtrail",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["scope:iam", "mitre_platform:iaas", "iaas:aws",
        "tactic:TA0001-initial-access", "technique:T1078-valid-accounts", "mitre_platform:cloud",
        "security:attack", "source:cloudtrail"], "version": 87, "id": "5ee-d08-7fa",
        "updatedAt": 1736369578738, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "AWS security group created, modified or deleted", "createdAt":
        1629705618150, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:CreateSecurityGroup -@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\")", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "security_group_created"},
        {"query": "source:cloudtrail @evt.name:(AuthorizeSecurityGroupIngress OR AuthorizeSecurityGroupEgress
        OR RevokeSecurityGroupIngress OR RevokeSecurityGroupEgress) -@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\")", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "security_group_modified"},
        {"query": "source:cloudtrail @evt.name:DeleteSecurityGroup -@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\")", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "security_group_deleted"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "security group created", "status":
        "info", "notifications": [], "condition": "security_group_created > 0"}, {"name":
        "security group modified", "status": "info", "notifications": [], "condition":
        "security_group_modified > 0"}, {"name": "security group deleted", "status":
        "info", "notifications": [], "condition": "security_group_deleted > 0"}],
        "message": "## Goal\nDetect when an AWS security group has been modified.\n\n##
        Strategy\nMonitor CloudTrail and detect when an AWS security group has been
        created or modified with one of the following API calls:\n* [AuthorizeSecurityGroupIngress][1]
        \n* [AuthorizeSecurityGroupEgress][2] \n* [RevokeSecurityGroupIngress][3]
        \n* [RevokeSecurityGroupEgress][4] \n* [CreateSecurityGroup][5] \n* [DeleteSecurityGroup][6]\n\n\n**Note:**  There
        is a separate rule to detect AWS Security Group Open to the World.\n\n## Triage
        and response\n1. Determine who the user was who made this API call.\n2. Contact
        the user and see if this was an API call which was made by the user.\n3. If
        the API call was not made by the user:\n   * Rotate the user credentials and
        investigate what other API calls.\n   * Determine what other API calls the
        user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html
        \n [2]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupEgress.html
        \n [3]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupIngress.html
        \n [4]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RevokeSecurityGroupEgress.html
        \n [5]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html
        \n [6]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteSecurityGroup.html\n\n##
        Changelog\n18 March 2022 - Updated severity, split query into multiple queries,
        and split the single case into multiple cases.", "tags": ["scope:ec2", "iaas:aws",
        "requirement:Monitoring", "source:cloudtrail", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "tactic:TA0005-defense-evasion",
        "scope:ec2", "requirement:Monitoring", "technique:T1562-impair-defenses",
        "iaas:aws", "security:attack", "mitre_platform:iaas", "source:cloudtrail"],
        "version": 87, "id": "cca-fc9-b0e", "updatedAt": 1736369578756, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Abnormal successful Microsoft 365 Exchange
        login event", "createdAt": 1638460540183, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:microsoft-365 service:Exchange @evt.name:MailboxLogin
        @evt.outcome:Succeeded @threat_intel.results.category:*", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "metric":
        "@network.client.geoip", "metrics": ["@network.client.geoip"], "aggregation":
        "geo_data", "name": "impossible_travel_mfa"}], "options": {"evaluationWindow":
        0, "detectionMethod": "impossible_travel", "maxSignalDuration": 86400, "keepAlive":
        21600, "impossibleTravelOptions": {"baselineUserLocations": false, "detectIpTransition":
        false}}, "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect an Impossible Travel event by a user logging in to Microsoft
        Exchange.\n\n## Strategy\nThe Impossible Travel detection type\u2019s algorithm
        compares the GeoIP data of the last and the current Microsoft-365 mailbox
        login event (`@evt.name:MailboxLogin`) to determine if the user `{{@usr.name}}`
        traveled more than 500km at over 1,000km/hr.\n\n## Triage and response\n1.
        Determine if `{{@usr.name}}` should be connecting from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}` in a
        short period of time.\n2. If the user should not be connecting from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`, then
        consider isolating the account and reset credentials.\n3. Use the Cloud SIEM
        - User Investigation dashboard to audit any user actions that may have occurred
        after the illegitimate login. ", "tags": ["source:microsoft-365", "mitre_platform:saas",
        "technique:T1078-valid-accounts", "scope:exchange-server", "mitre_platform:office-suite",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0001-initial-access", "mitre_platform:office-suite", "technique:T1078-valid-accounts",
        "scope:exchange-server", "mitre_platform:cloud", "source:microsoft-365", "mitre_platform:saas",
        "security:attack"], "version": 87, "id": "o5s-014-bwz", "updatedAt": 1736369578774,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Access denied for Google Cloud Service
        Account", "createdAt": 1629705616968, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:gcp.* @data.protoPayload.status.code:7 @usr.id:(*gserviceaccount.com
        OR *google.com)", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "access_denied"}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name": "access_denied",
        "status": "low", "notifications": []}], "message": "## Goal\nDetect when a
        Google Cloud service account (`@usr.id:*.iam.gserviceaccount.com`) exhibits
        access denied behavior that deviates from normal.\n\n## Strategy \nInspect
        the Google Cloud service account (`@usr.id:*.iam.gserviceaccount.com`) for
        errors (`@data.protoPayload.status.code:7`) caused by denied permissions (`@evt.outcome`).
        The anomaly detection will baseline each service account and then generate
        a security signal when a service account deviates from their baseline. \n\n##
        Triage and response\nInvestigate the logs and determine whether or not the
        Google Cloud service account {{@usr.id}} is compromised.", "tags": ["tactic:TA0004-privilege-escalation",
        "source:gcp", "scope:google-cloud-iam", "technique:T1078-valid-accounts",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas",
        "security:attack", "scope:google-cloud-iam", "tactic:TA0004-privilege-escalation",
        "technique:T1078-valid-accounts", "source:gcp", "mitre_platform:cloud"], "version":
        87, "id": "c13-d72-723", "updatedAt": 1736369578855, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Activity observed from malicious IP",
        "createdAt": 1732032498390, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:* -@evt.outcome:\"\" @evt.outcome:(true OR YES OR yes OR
        SUCCESS OR success OR Succeeded) @threat_intel.results.source.name:\"Datadog
        Security Research\" @threat_intel.results.category:(attack OR malware OR malware_proxy)",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "malicious_ip_activity"},
        {"query": "source:* -@evt.outcome:\"\" @evt.outcome:(false OR NO OR no OR
        FAILURE OR failure OR Failed) @threat_intel.results.source.name:\"Datadog
        Security Research\" @threat_intel.results.category:(attack OR malware OR malware_proxy)",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "failed_malicious_ip_activity"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "Successful malicious IP activity",
        "status": "medium", "notifications": [], "condition": "malicious_ip_activity
        > 0"}, {"name": "Failed malicious IP activity", "status": "low", "notifications":
        [], "condition": "failed_malicious_ip_activity > 0"}], "message": "## Goal\n\nDetect
        activity from a malicious IP address based on Datadog threat intelligence
        feeds.\n\n## Strategy\n\nThis rule lets you monitor events where the `@evt.outcome`
        is successful and the `@network.client.ip` value has been categorized as malicious.\n\n##
        Triage and response\n\n1. Determine if the source IP `{{@network.client.ip}}`
        is anomalous within the organization:\n   - Is the geo-location, ASN, or domain
        uncommon for the organization?\n   - Use the Cloud SIEM - IP Investigation
        dashboard to see if the IP address has taken other actions.\n2. Investigate
        the `@evt.name` field to determine the actions taken and potential severity
        of a compromise.\n3. If the IP is deemed malicious:\n   - Confirm that no
        successful authentication attempts have been made.\n   - If a successful authentication
        attempt is observed, begin your company''s incident response process.\n",
        "tags": ["security:threat-intel", "technique:T1078-valid-accounts", "tactic:TA0043-reconnaissance",
        "technique:T1595-active-scanning", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1595-active-scanning", "tactic:TA0001-initial-access",
        "security:attack", "technique:T1078-valid-accounts", "tactic:TA0043-reconnaissance",
        "mitre_platform:cloud", "security:threat-intel"], "version": 21, "id": "def-003-syp",
        "updatedAt": 1736369579660, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Activity observed to a malicious domain", "createdAt":
        1732032504998, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:* @dns.question.name:* @threat_intel.results.source.name:\"Datadog
        Security Research\" @threat_intel.results.category:(attack OR malware OR malware_proxy)",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "malicious_dns_activity"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "malicious_dns_activity > 0"}], "message": "## Goal\n\nDetect
        activity to a malicious domain based on Datadog threat intelligence feeds.\n\n##
        Strategy\n\nThis rule lets you monitor DNS events where the `@network.client.ip`
        value has been categorized as malicious.\n\n## Triage and response\n\n1. Determine
        if `{{@dns.question.name}}` and `@network.client.ip` are anomalous within
        the organization:\n   - Review DNS logs to confirm the requests to the malicious
        domain. Look for the frequency, timing, and any associated IP addresses.\n   -
        Determine whether the requests are automated (e.g., malware or botnet) or
        manual (e.g., a user clicking a malicious link).\n2. If the DNS request is
        deemed malicious:\n   - Begin your company''s incident response process.\n",
        "tags": ["security:threat-intel", "technique:T1071-application-layer-protocol",
        "mitre_platform:network", "tactic:TA0011-command-and-control", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:network", "technique:T1071-application-layer-protocol", "tactic:TA0011-command-and-control",
        "security:threat-intel", "security:attack"], "version": 21, "id": "def-005-syp",
        "updatedAt": 1736369579722, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Additional AWS regions enabled", "createdAt": 1711540039821,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @evt.name:EnableRegion @eventSource:account.amazonaws.com", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "account_enable_region"}], "options":
        {"evaluationWindow": 600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "account_enable_region > 0"}], "message": "## Goal\nDetect
        when additional AWS regions have been enabled. \n\n## Strategy\nMonitor CloudTrail
        and detect when additional AWS regions have been enabled. Attackers may enable
        additional regions to allow for the creation of a greater number of resources
        like EC2 instances or ECS clusters for the purpose of cryptomining.\n\n##
        Triage and response\n1. Determine if the API call: `{{@evt.name}}` should
        have been made by the user: `{{@userIdentity.arn}}` from this IP address:
        `{{@network.client.ip}}` .\n2. If the action is legitimate, consider including
        the user in a suppression list. See [Best practices for creating detection
        rules with Datadog Cloud SIEM][3] for more information.\n3. If the action
        shouldn''t have happened:\n   * Contact the user: `{{@userIdentity.arn}}`
        and see if they made the API call.\n   * Use the Cloud SIEM - User Investigation
        dashboard to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, initiate your company''s incident response
        process, as well as an investigation.", "tags": ["source:cloudtrail", "technique:T1535-unused-or-unsupported-cloud-regions",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "mitre_platform:iaas", "tactic:TA0005-defense-evasion",
        "technique:T1535-unused-or-unsupported-cloud-regions", "mitre_platform:cloud",
        "source:cloudtrail"], "version": 87, "id": "def-000-ahh", "updatedAt": 1736369580450,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Amazon Bedrock activity InvokeModel
        multiple regions", "createdAt": 1728889429160, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @evt.name:InvokeModel @eventSource:bedrock.amazonaws.com
        @userIdentity.accessKeyId:*AKIA*", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@awsRegion"], "aggregation":
        "cardinality", "name": "aws_bedrock_invokemodel_long_term_access_key"}, {"query":
        "source:cloudtrail @evt.name:InvokeModel @eventSource:bedrock.amazonaws.com
        @userIdentity.type:FederatedUser", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@awsRegion"], "aggregation":
        "cardinality", "name": "aws_bedrock_invokemodel_temp_user"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 300, "keepAlive":
        300}, "cases": [{"name": "Long term access key", "status": "medium", "notifications":
        [], "condition": "aws_bedrock_invokemodel_long_term_access_key > 3"}, {"name":
        "Temporary credentials", "status": "medium", "notifications": [], "condition":
        "aws_bedrock_invokemodel_temp_user > 3"}], "message": "## Goal\nDetect when
        there is an attempt to use InvokeModel in multiple regions. \n\n## Strategy\nMonitor
        CloudTrail and detect when there is an attempt to use the API call [InvokeModel][1]
        in multiple regions from a long-term access key. Attackers target the AWS
        Bedrock service generally for the purpose of hosting their own LLM service
        using the victim''s resources.\n\n## Triage and response\n1. Determine if
        the API call (`{{@evt.name}}`) should have been made by the user (`{{@userIdentity.arn}}`)
        from this IP address (`{{@network.client.ip}}`).\n2. If the action is legitimate,
        consider including the user in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][2] for more information.\n3.
        If the action shouldn''t have happened:\n   * Contact the user: `{{@userIdentity.arn}}`
        and see if they made the API call.\n   * Use the Cloud SIEM - User Investigation
        dashboard to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, initiate your company''s incident response
        process, as well as an investigation.\n\n[1]: https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n##
        Changelog\n* 11 Dec 2024 - Add case for temporary credentials.", "tags": ["iaas:aws",
        "source:cloudtrail", "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack",
        "technique:T1526-cloud-service-discovery", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas",
        "tactic:TA0007-discovery", "security:attack", "technique:T1526-cloud-service-discovery",
        "source:cloudtrail", "iaas:aws", "mitre_platform:cloud"], "version": 88, "id":
        "def-000-ynk", "updatedAt": 1736369580827, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Amazon Bedrock console activity", "createdAt":
        1728889437775, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:(GetFoundationModelAvailability OR PutUseCaseForModelAccess
        OR GetUseCaseForModelAccess OR CreateFoundationModelAgreement OR PutFoundationModelEntitlement)
        @userIdentity.accessKeyId:AKIA*", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "console_api_long_term_access_key"}, {"query": "source:cloudtrail
        @evt.name:(GetFoundationModelAvailability OR PutUseCaseForModelAccess OR GetUseCaseForModelAccess
        OR CreateFoundationModelAgreement OR PutFoundationModelEntitlement) @userIdentity.type:FederatedUser
        -@sessionCredentialFromConsole:true", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "console_api_federated_user"}], "options": {"evaluationWindow": 3600,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 3600},
        "cases": [{"name": "Long term access key", "status": "high", "notifications":
        [], "condition": "console_api_long_term_access_key > 0"}, {"name": "Temporary
        credentials", "status": "high", "notifications": [], "condition": "console_api_federated_user
        > 0"}], "message": "## Goal\nDetect when there is an attempt to access console-only
        API calls with an access key. \n\n## Strategy\nMonitor CloudTrail and detect
        when there is an attempt to make API calls to console-only APIs. This means
        they shouldn''t be originating from a long-term access key. Attackers target
        the AWS Bedrock service generally for the purpose of hosting their own LLM
        service using the victim''s resources.\n\n## Triage and response\n1. Determine
        if the API call (`{{@evt.name}}`) should have been made by the user (`{{@userIdentity.arn}}`)
        from this IP address (`{{@network.client.ip}}`).\n2. If the action is legitimate,
        consider including the user in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][1] for more information.\n3.
        If the action shouldn''t have happened:\n   * Contact the user: `{{@userIdentity.arn}}`
        and see if they made the API call.\n   * Use the Cloud SIEM - User Investigation
        dashboard to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, initiate your company''s incident response
        process, as well as an investigation.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n##
        Changelog\n* 11 Dec 2024 - Add case for temporary credentials.", "tags": ["technique:T1078-valid-accounts",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud",
        "tactic:TA0001-initial-access"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0001-initial-access", "security:attack",
        "mitre_platform:iaas", "mitre_platform:cloud", "technique:T1078-valid-accounts",
        "source:cloudtrail"], "version": 88, "id": "def-000-61e", "updatedAt": 1736369580851,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Amazon EC2 AMI exfiltration attempt
        by IAM user", "createdAt": 1683215388756, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @userIdentity.type:IAMUser
        @evt.name:ModifyImageAttribute @requestParameters.launchPermission.add.items.group:\"all\"
        -@userIdentity.invokedBy:(backup.amazonaws.com OR imagebuilder.amazonaws.com)",
        "groupByFields": ["@userIdentity.userName"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "ec2_ami_made_public_by_iam_user"},
        {"query": "source:cloudtrail @userIdentity.type:IAMUser @evt.name:ModifyImageAttribute
        @requestParameters.launchPermission.add.items.userId:* -@userIdentity.invokedBy:(backup.amazonaws.com
        OR imagebuilder.amazonaws.com)", "groupByFields": ["@userIdentity.userName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "ec2_ami_shared_with_aws_account_by_iam_user"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600, "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "image was
        made public by IAM User", "status": "high", "notifications": [], "condition":
        "ec2_ami_made_public_by_iam_user > 0"}, {"name": "image was shared with an
        AWS account by IAM User", "status": "medium", "notifications": [], "condition":
        "ec2_ami_shared_with_aws_account_by_iam_user > 0"}], "message": "## Goal\nDetect
        a user attempting to exfiltrate an Amazon EC2 AMI Snapshot.\n\n## Strategy\nThis
        rule lets you monitor the [ModifyImageAttribute][1] CloudTrail API calls to
        detect when an Amazon EC2 AMI snapshot is made public or shared with an AWS
        account.\n\nThis rule also inspects:\n * `@requestParameters.launchPermission.add.items.group`
        array to determine if the string `all` is contained. This is the indicator
        which means the RDS snapshot is made public.\n * `@requestParameters.launchPermission.add.items.userId`
        array to determine if the string `*` is contained. This is the indicator which
        means the RDS snapshot was shared with a new or unknown AWS account.\n\n##
        Triage and response\n1. Confirm if the user: `{{@userIdentity.arn}}` intended
        to make the RDS snaphsot public.\n2. If the user did not make the API call:\n    *
        Rotate the credentials.\n    * Investigate if the same credentials made other
        unauthorized API calls.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html",
        "tags": ["iaas:aws", "technique:T1537-transfer-data-to-cloud-account", "scope:amazon-ec2",
        "source:cloudtrail", "mitre_platform:iaas", "tactic:TA0010-exfiltration",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["technique:T1537-transfer-data-to-cloud-account",
        "mitre_platform:iaas", "iaas:aws", "mitre_platform:cloud", "security:attack",
        "tactic:TA0010-exfiltration", "scope:amazon-ec2", "source:cloudtrail"], "version":
        87, "id": "def-000-g55", "updatedAt": 1736369580894, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Amazon S3 bucket policy modified", "createdAt":
        1629705615692, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:(cloudtrail OR amazon-security-lake) @evt.name:(PutBucketAcl OR PutBucketPolicy
        OR PutBucketCors OR PutBucketLifecycle OR PutBucketReplication OR DeleteBucketPolicy
        OR DeleteBucketCors OR DeleteBucketReplication)", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "info", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when a S3 Bucket policy is modified.\n\n## Strategy\nMonitor CloudTrail and
        detect when S3 policies are being modified via one of the following API calls:\n*
        [PutBucketAcl][1]\n* [PutBucketPolicy][2]\n* [PutBucketCors][3]\n* [PutBucketLifecycle][4]\n*
        [PutBucketReplication][5]\n* [DeleteBucketPolicy][6]\n* [DeleteBucketCors][7]\n*
        [DeleteBucketReplication][8]\n\n## Triage and response\n1. Determine who the
        user was who made this API call.\n2. Contact the user and see if this was
        an API call which was made by the user.\n3. If the API call was not made by
        the user:\n   * Rotate the user credentials and investigate what other API
        calls.\n   * Determine what other API calls the user made which were not made
        by the user.\n\n## Changelog\n* 18 March 2022 - Updated signal message, query
        and severity.\n* 16 November 2022 - Updated rule query.\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html\n[2]:
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketPolicy.html\n[3]:
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketCors.html\n[4]:
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\n[5]:
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketReplication.html\n[6]:
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketPolicy.html\n[7]:
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketCors.html\n[8]:
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketReplication.html\n",
        "tags": ["iaas:aws", "technique:T1485-data-destruction", "scope:s3", "tactic:TA0040-impact",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "iaas:aws", "tactic:TA0040-impact", "scope:s3", "mitre_platform:cloud",
        "security:attack", "technique:T1485-data-destruction", "source:cloudtrail"],
        "version": 88, "id": "c70-8d3-554", "updatedAt": 1736369580979, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Amazon SES enumeration attempt by previously
        unseen user", "createdAt": 1677182821001, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:ses.amazonaws.com
        @evt.name:(GetAccount OR GetAccountSendingEnabled OR ListIdentities OR ListEmailIdentities
        OR GetSendQuota OR ListServiceQuotas OR GetIdentityVerificationAttributes)
        @userIdentity.type:IAMUser -@userIdentity.invokedBy:trustedadvisor.amazonaws.com
        -@userIdentity.assumed_role:CloudConformity", "groupByFields": ["@evt.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@userIdentity.arn",
        "metrics": ["@userIdentity.arn"], "aggregation": "new_value", "name": ""}],
        "options": {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter": 28, "learningDuration":
        7, "learningThreshold": 0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when the Amazon Simple Email Service (SES) is enumerated
        by a previously unseen user. \n\n## Strategy\nMonitor CloudTrail and detect
        when the Amazon SES has been enumerated with one of the following API calls:\n*
        [GetAccount][1] \n* [GetAccountSendingEnabled][2] \n* [ListIdentities][3]
        \n* [ListEmailIdentities][4]\n* [GetSendQuota][5]\n* [ListServiceQuotas][6]\n*
        [GetIdentityVerificationAttributes][7]\n\n## Triage and response\n1. Determine
        if the API call: `{{@evt.name}}` should have been made by the user: `{{@userIdentity.arn}}`
        from this IP address : `{{@network.client.ip}}` .\n2. If the action is legitimate,
        consider including the user in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][8] for more information.\n3.
        If it shouldn''t have been made:\n   * Contact the user: `{{@userIdentity.arn}}`
        and see if they made the API call.\n   * Use the Cloud SIEM - User Investigation
        dashboard to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, begin your company''s incident response
        process as well as an investigation.\n\n[1]: https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_GetAccount.html
        \n[2]: https://docs.aws.amazon.com/ses/latest/APIReference/API_GetAccountSendingEnabled.html\n[3]:
        https://docs.aws.amazon.com/ses/latest/APIReference/API_ListIdentities.html\n[4]:
        https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_ListEmailIdentities.html\n[5]:
        https://docs.aws.amazon.com/ses/latest/APIReference/API_GetSendQuota.html\n[6]:
        https://docs.aws.amazon.com/servicequotas/2019-06-24/apireference/API_ListServiceQuotas.html\n[7]:
        https://docs.aws.amazon.com/ses/latest/APIReference/API_GetIdentityVerificationAttributes.html\n[8]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n",
        "tags": ["iaas:aws", "source:cloudtrail", "scope:amazon-ses", "tactic:TA0007-discovery",
        "mitre_platform:iaas", "security:attack", "technique:T1526-cloud-service-discovery",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "scope:amazon-ses",
        "iaas:aws", "tactic:TA0007-discovery", "technique:T1526-cloud-service-discovery",
        "mitre_platform:cloud", "security:attack", "source:cloudtrail"], "version":
        87, "id": "def-000-su2", "updatedAt": 1736369580991, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Amazon SES modification attempt", "createdAt":
        1673650233392, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @eventSource:ses.amazonaws.com @userIdentity.type:IAMUser
        @evt.name:(VerifyEmailIdentity OR CreateEmailIdentity OR DeleteIdentity OR
        DeleteEmailIdentity)", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "ses_identity_modification"},
        {"query": "source:cloudtrail @eventSource:ses.amazonaws.com @evt.name:(VerifyEmailIdentity
        OR CreateEmailIdentity OR DeleteIdentity OR DeleteEmailIdentity) (@threat_intel.results.category:(attack
        OR anonymizer OR tor) OR @threat_intel.results.intention:malicious)", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "ses_identity_modification_by_suspicious_ip"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "identity modified by suspicious
        IP", "status": "medium", "notifications": [], "condition": "ses_identity_modification_by_suspicious_ip
        > 0"}, {"name": "identity modified", "status": "low", "notifications": [],
        "condition": "ses_identity_modification > 0"}], "message": "## Goal\nDetect
        when the Amazon Simple Email Service (SES) has been modified. An attacker
        could modify the AWS Simple Email Service to propagate large scale phishing
        email campaigns.\n\n## Strategy\nMonitor CloudTrail and detect when the Amazon
        SES has been modified with one of the following API calls:\n* [VerifyEmailIdentity][1]
        \n* [CreateEmailIdentity][2] \n* [DeleteIdentity][3] \n* [DeleteEmailIdentity][4]\n\n##
        Triage and response\n1. Determine if the API call: `{{@evt.name}}` should
        have been made by the user: `{{@userIdentity.arn}}` from this IP address :
        `{{@network.client.ip}}` .\n2. If the action is legitimate, consider including
        the user in a suppression list. See [Best practices for creating detection
        rules with Datadog Cloud SIEM][7] for more information.\n3. If it shouldn''t
        have been made:\n   * Contact the user: `{{@userIdentity.arn}}` and see if
        they made the API call.\n   * Use the Cloud SIEM - User Investigation dashboard
        to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, begin your company''s incident response
        process and an investigation.\n\n## Changelog\n* 17 August 2023 - Updated
        query to replace attribute `@threat_intel.results.subcategory:tor` with `@threat_intel.results.category:tor`.\n*
        1 May 2024 - Updated queries because coverage existed in other OOTB detection
        rules.\n\n[1]: https://docs.aws.amazon.com/ses/latest/APIReference/API_VerifyEmailIdentity.html
        \n[2]: https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_CreateEmailIdentity.html\n[3]:
        https://docs.aws.amazon.com/ses/latest/APIReference/API_DeleteIdentity.html\n[4]:
        https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_DeleteEmailIdentity.html\n[7]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n",
        "tags": ["iaas:aws", "tactic:TA0040-impact", "source:cloudtrail", "scope:amazon-ses",
        "technique:T1496-resource-hijacking", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "scope:amazon-ses",
        "iaas:aws", "tactic:TA0040-impact", "technique:T1496-resource-hijacking",
        "mitre_platform:cloud", "security:attack", "source:cloudtrail"], "version":
        87, "id": "def-000-3xr", "updatedAt": 1736369581092, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Amazon SNS enumeration attempt by previously
        unseen user", "createdAt": 1685044840714, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:sns.amazonaws.com
        @evt.name:(GetSMSAttributes OR GetSMSSandboxAccountStatus OR ListOriginationNumbers
        OR ListTopics OR ListSubscriptions) @userIdentity.type:IAMUser -@http.useragent:(*Datadog*
        OR *Terraform* OR resource-explorer-2.amazonaws.com OR cognito-idp.amazonaws.com)",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@userIdentity.arn", "metrics": ["@userIdentity.arn"],
        "aggregation": "new_value", "name": ""}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 86400, "keepAlive":
        3600, "newValueOptions": {"forgetAfter": 28, "learningDuration": 7, "learningThreshold":
        0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv": true},
        "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when the Amazon Simple Notification Service (SNS) is enumerated
        by a previously unseen user. \n\n## Strategy\nMonitor CloudTrail and detect
        when the Amazon SNS has been enumerated with one of the following API calls:\n*
        [GetSMSAttributes][1]\n* [GetSMSSandboxAccountStatus][2]\n* [ListOriginationNumbers][3]\n*
        [ListTopics][4]\n* [ListSubscriptions][5]\n\n## Triage and response\n1. Determine
        if the API call: `{{@evt.name}}` should have been made by the user: `{{@userIdentity.arn}}`
        from this IP address : `{{@network.client.ip}}` .\n2. If the action is legitimate,
        consider including the user in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][6] for more information.\n3.
        If the action shouldn''t have happened:\n   * Contact the user: `{{@userIdentity.arn}}`
        and see if they made the API call.\n   * Use the Cloud SIEM - User Investigation
        dashboard to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, begin your company''s incident response
        process as well as an investigation.\n\n[1]: https://docs.aws.amazon.com/sns/latest/api/API_GetSMSAttributes.html\n[2]:
        https://docs.aws.amazon.com/sns/latest/api/API_GetSMSSandboxAccountStatus.html\n[3]:
        https://docs.aws.amazon.com/sns/latest/api/API_ListOriginationNumbers.html\n[4]:
        https://docs.aws.amazon.com/sns/latest/api/API_ListTopics.html\n[5]: https://docs.aws.amazon.com/sns/latest/api/API_ListSubscriptions.html\n[6]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n\n",
        "tags": ["scope:amazon-sns", "iaas:aws", "source:cloudtrail", "tactic:TA0007-discovery",
        "mitre_platform:iaas", "security:attack", "technique:T1526-cloud-service-discovery",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "iaas:aws", "tactic:TA0007-discovery",
        "technique:T1526-cloud-service-discovery", "scope:amazon-sns", "mitre_platform:cloud",
        "security:attack", "source:cloudtrail"], "version": 87, "id": "def-000-eyt",
        "updatedAt": 1736369581119, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Amazon SNS enumeration in multiple regions using a long-term
        access key", "createdAt": 1707380040595, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @evt.name:GetSMSAttributes @eventSource:sns.amazonaws.com
        @userIdentity.accessKeyId:*AKIA*", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@awsRegion"], "aggregation":
        "cardinality", "name": "aws_sns_getsmsattributes_long_term_access_key"}, {"query":
        "source:cloudtrail @evt.name:GetSMSSandboxAccountStatus @eventSource:sns.amazonaws.com
        @userIdentity.accessKeyId:*AKIA*", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@awsRegion"], "aggregation":
        "cardinality", "name": "aws_sns_getsmssandboxaccountstatus_long_term_access_key"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        300, "keepAlive": 300}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "aws_sns_getsmsattributes_long_term_access_key > 3 || aws_sns_getsmssandboxaccountstatus_long_term_access_key
        > 3"}], "message": "## Goal\nDetect when the Amazon Simple Notification Service
        (SNS) is enumerated across multiple regions using a long-term access key.  \n\n##
        Strategy\nMonitor CloudTrail and detect when the Amazon SNS has been enumerated
        across multiple regions using a long-term access key with one of the following
        API calls:\n\n* [GetSMSAttributes][1]\n* [GetSMSSandboxAccountStatus][2]\n\nWith
        these API calls, an attacker can determine the account''s monthly spending
        limit and if the account is in a SMS sandbox. An attacker may target this
        service for the purpose of SMS phishing.\n\n## Triage and response\n1. Determine
        if the API call: `{{@evt.name}}` should have been made by the user: `{{@userIdentity.arn}}`
        from this IP address: `{{@network.client.ip}}` .\n2. If the action is legitimate,
        consider including the user in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][3] for more information.\n3.
        If the action shouldn''t have happened:\n   * Contact the user: `{{@userIdentity.arn}}`
        and see if they made the API call.\n   * Use the Cloud SIEM - User Investigation
        dashboard to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, begin your company''s incident response
        process as well as an investigation.\n\n## Changelog\n* 11 March 2024 - Reduced
        cardinality of threshold for high and medium severity signal.\n\n[1]: https://docs.aws.amazon.com/sns/latest/api/API_GetSMSAttributes.html\n[2]:
        https://docs.aws.amazon.com/sns/latest/api/API_GetSMSSandboxAccountStatus.html\n[3]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["iaas:aws", "source:cloudtrail", "tactic:TA0007-discovery", "mitre_platform:iaas",
        "security:attack", "technique:T1526-cloud-service-discovery", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "tactic:TA0007-discovery", "security:attack", "technique:T1526-cloud-service-discovery",
        "source:cloudtrail", "iaas:aws", "mitre_platform:cloud"], "version": 87, "id":
        "def-000-6g0", "updatedAt": 1736369581117, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "An AWS S3 bucket lifecycle expiration
        policy was set to disabled", "createdAt": 1638798267790, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "-status:error @eventSource:s3.amazonaws.com
        @evt.name:PutBucketLifecycle @requestParameters.LifecycleConfiguration.Rule.Expiration:*
        @requestParameters.LifecycleConfiguration.Rule.Status:Disabled", "groupByFields":
        ["@requestParameters.bucketName"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 7200, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect if an AWS S3 lifecycle expiration policy
        is set to disabled in your CloudTrail logs.\n\n## Strategy\nCheck if `@requestParameters.LifecycleConfiguration.Rule.Expiration.Days`,
        `@requestParameters.LifecycleConfiguration.Status:Disabled` and `@evt.name:PutBucketLifecycle`
        fields are present in your S3 Lifecycle configuration log. If these fields
        are present together, a bucket''s lifecycle configuration has been turned
        off.\n\n## Triage & Response\n1. Determine if `{{@evt.name}}` should have
        occurred on the `{{@requestParameters.bucketName}}` by `username:` `{{@userIdentity.sessionContext.sessionIssuer.userName}}`,
        `accountId:` `{{@userIdentity.accountId}}` of `type:` `{{@userIdentity.assumed_role}}`.\n2.
        If the `{{@requestParameters.bucketName}}` should not be disabled, escalate
        to engineering so they can re-enable it.\n", "tags": ["iaas:aws", "scope:s3",
        "source:cloudtrail", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1562-impair-defenses",
        "mitre_platform:iaas", "iaas:aws", "scope:s3", "mitre_platform:cloud", "security:attack",
        "tactic:TA0005-defense-evasion", "source:cloudtrail"], "version": 87, "id":
        "gzr-098-e6b", "updatedAt": 1736369581626, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "An AWS S3 bucket lifecycle policy expiration
        is set to < 90 days", "createdAt": 1638798267226, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "@evt.name:PutBucketLifecycle -status:error @eventSource:s3.amazonaws.com
        @requestParameters.LifecycleConfiguration.Rule.Expiration.Days:<90", "groupByFields":
        ["@requestParameters.bucketName"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 7200, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when an S3 bucket has a lifecycle configuration
        set with an expiration policy of less than 90 days.\n\n## Strategy\nLook for
        `@requestParameters.LifecycleConfiguration.Rule.Expiration.Days:<90` in your
        Cloudtrail logs.\n\n**NOTE**: This rule should be set to logs that this policy
        applies to. The `@requestParameters.LifecycleConfiguration.Rule.Expiration.Days`
        key path must be set as a measure to do a query.\n\n\n## Triage & response\n1.
        Determine if `{{@evt.name}}` should have occurred on the `{{@requestParameters.bucketName}}`
        by `username:` `{{@userIdentity.sessionContext.sessionIssuer.userName}}`,
        `accountId:` `{{@userIdentity.accountId}}` of `type:` `{{@userIdentity.assumed_role}}`
        and that the `{{@requestParameters.bucketName}}` bucket should have a file
        expiration of less than 90 days.\n2. If `{{@requestParameters.bucketName}}`
        is equal to `{{@aws.s3.bucket}}`, the CloudTrail bucket, consider escalating
        to higher severity and investigating further.", "tags": ["iaas:aws", "scope:s3",
        "source:cloudtrail", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1562-impair-defenses",
        "mitre_platform:iaas", "iaas:aws", "scope:s3", "mitre_platform:cloud", "security:attack",
        "tactic:TA0005-defense-evasion", "source:cloudtrail"], "version": 87, "id":
        "zhb-369-800", "updatedAt": 1736369581610, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "An AWS S3 bucket mfaDelete is disabled",
        "createdAt": 1638798266138, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "-status:error @eventSource:s3.amazonaws.com @evt.name:PutBucketVersioning
        @requestParameters.VersioningConfiguration.MfaDelete:Disabled", "groupByFields":
        ["@aws.s3.bucket"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": "mfadelete_disabled"}, {"query": "-status:error
        @eventSource:s3.amazonaws.com @evt.name:PutBucketVersioning @requestParameters.VersioningConfiguration.Status:Suspended",
        "groupByFields": ["@requestParameters.bucketName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "versioning_suspended"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "mfaDelete and Versioning are
        Disabled/Suspended", "status": "medium", "notifications": [], "condition":
        "versioning_suspended > 0 && mfadelete_disabled > 0"}, {"name": "mfaDelete
        or versioning are disabled", "status": "low", "notifications": [], "condition":
        "mfadelete_disabled > 0 || versioning_suspended > 0"}], "message": "## Goal\nDetect
        if versioning or MFA delete was disabled within an AWS S3 bucket''s Lifecycle
        configuration.\n\n## Strategy\nThis rule has two separate queries. The first
        query determines if `@requestParameters.VersioningConfiguration.MfaDelete`
        is set to `Disabled`. The second query determines if `@requestParameters.VersioningConfiguration.Status`
        is set to `Suspended`. For generating a signal, there are two cases. Case
        one generates a `Medium` signal if query one AND two return `true`. Case two
        will generate a `Low` signal if query one OR two returns `true`.\n\n**NOTE**:
        Versioning cannot be disabled permanently; only suspended until turned back
        on, once it has been enabled on a bucket.\n\n## Triage & Response\nDetermine
        if `{{@evt.name}}` should have occurred on the `{{@requestParameters.bucketName}}`
        by `username:` `{{@userIdentity.sessionContext.sessionIssuer.userName}}`,
        `accountId:` `{{@userIdentity.accountId}}` of `type:` `{{@userIdentity.assumed_role}}`.\n",
        "tags": ["iaas:aws", "scope:s3", "source:cloudtrail", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1562-impair-defenses", "mitre_platform:iaas",
        "iaas:aws", "scope:s3", "mitre_platform:cloud", "security:attack", "tactic:TA0005-defense-evasion",
        "source:cloudtrail"], "version": 87, "id": "vvv-5pb-z59", "updatedAt": 1736369581698,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "An AWS account attempted to leave the
        AWS Organization", "createdAt": 1644509358899, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @evt.name:LeaveOrganization
        @eventSource:organizations.amazonaws.com", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "leave_organization"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 7200, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "high", "notifications": [], "condition": "leave_organization
        > 0"}], "message": "## Goal\nDetect an AWS account attempting to leave an
        AWS organization.\n\n## Strategy\nThis rule allows you to monitor CloudTrail
        and detect if an attacker has attempted to have an AWS account leave an AWS
        organization using the [LeaveOrganization][1] API call.\n\nAn attacker may
        attempt this API call for several reasons, such as:\n\n* Target security configurations
        that are often defined at the organization level. Leaving an organization
        can disrupt or disable these controls.\n* Perform a denial of service (DoS)
        attack on the victim''s account that prevents the victim''s organization to
        access it.\n\n## Triage and response\n1. Determine if `{{@userIdentity.arn}}`
        should have made the `{{@evt.name}}` API call.\n2. If the API call was not
        made by the user:\n  * Rotate user credentials.\n  * Determine what other
        API calls were made by the user.\n  * Initiate your company''s incident response
        (IR) process.\n3. If the API call was made legitimately by the user:\n  *
        Communicate with the user to understand if this was a planned action.\n  *
        If No, see if other API calls were made by the user and determine if they
        warrant further investigation.\n  * Initiate your company''s incident response
        (IR) process.\n\n[1]: https://docs.aws.amazon.com/organizations/latest/APIReference/API_LeaveOrganization.html\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_AttachGroupPolicy.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/detach-group-policy.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privileg",
        "tags": ["iaas:aws", "scope:cloudtrail", "source:cloudtrail", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1562-impair-defenses", "mitre_platform:iaas",
        "iaas:aws", "scope:cloudtrail", "mitre_platform:cloud", "security:attack",
        "tactic:TA0005-defense-evasion", "source:cloudtrail"], "version": 87, "id":
        "f70-oqy-yer", "updatedAt": 1736369581721, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "An EC2 instance attempted to enumerate
        S3 bucket", "createdAt": 1629705613322, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @userIdentity.session_name:i-* @evt.name:ListBuckets
        @error.kind:AccessDenied", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "list_buckets_access_denied"},
        {"query": "source:cloudtrail @userIdentity.session_name:i-* @evt.name:ListBuckets
        -@error.kind:*", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "list_buckets_success"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "Access denied for ListBuckets",
        "status": "low", "notifications": [], "condition": "list_buckets_access_denied
        > 0"}, {"name": "Successful ListBuckets", "status": "info", "notifications":
        [], "condition": "list_buckets_success > 0"}], "message": "## Goal\nDetect
        when an EC2 instance makes an API call to AWS to list all of the S3 Buckets.\n\n##
        Strategy\nThis rule lets you monitor CloudTrail to detect a [ListBuckets][1]
        API call with the session name prefixed with `i-`. A session name prefixed
        with `i-` typically indicates that it is an EC2 instance using an [Instance
        Profile][2] to communicate with other AWS services, which is a common attacker
        technique to see the full list of S3 buckets in your AWS account.\n\n## Triage
        and response\nDetermine if the EC2 instance should be making this API call.\n*
        If **not a legitimate** user/application, rotate the credentials, verify what
        else may have been accessed and open an investigation into how this instance
        was compromised.\n* If a **legitimate** user/application on the EC2 instance
        is making the `ListBuckets` API call, consider whether this API call is really
        needed.  \n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\n[2]:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#ec2-instance-profile\n\n##
        Changelog\n18 March 2022 - Updated rule severity and rule name.", "tags":
        ["iaas:aws", "scope:s3", "source:cloudtrail", "tactic:TA0007-discovery", "mitre_platform:iaas",
        "security:attack", "technique:T1526-cloud-service-discovery", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "iaas:aws", "tactic:TA0007-discovery", "scope:s3",
        "technique:T1526-cloud-service-discovery", "mitre_platform:cloud", "security:attack",
        "source:cloudtrail"], "version": 87, "id": "8b7-d38-74d", "updatedAt": 1736369581750,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "An external Microsoft Teams member was
        added then removed", "createdAt": 1695944002216, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:microsoft-365 service:MicrosoftTeams
        @evt.name:MemberAdded @Members.UPN:*#EXT#*", "groupByFields": ["@Members.UPN"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "teams_member_added"}, {"query": "source:microsoft-365 service:MicrosoftTeams
        @evt.name:MemberRemoved @Members.UPN:*#EXT#*", "groupByFields": ["@Members.UPN"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "teams_member_removed"}], "options": {"evaluationWindow": 3600, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "medium", "notifications": [], "condition": "teams_member_added
        > 0 THEN teams_member_removed > 0"}], "message": "## Goal\nDetect when a Teams
        member is added and then removed within a short amount of time. An insider
        threat might add an external account to exfiltrate data then quickly remove
        the user to hide their tracks.\n\n## Strategy\nUsing the `THEN` operator,
        monitor Microsoft Teams audit logs to look for events with an `@evt.name`
        value of `MemberAdded` then `MemberRemoved`, where the `Members.UPN` has `#EXT#`
        within it. The `EXT` value is used to denote that a user is an external user.\n\n##
        Triage and response\n1. Determine if the user `{{@usr.email}}` intended to
        add and remove the external user and if the external user should indeed have
        been added.\n2. If `{{@usr.email}}` didn''t intend to add or remove the external
        user or the external user is not approved:\n    * Investigate other activities
        performed by the user `{{@usr.email}}` using the Cloud SIEM - User Investigation
        dashboard.\n    * Investigate the activities that were performed by the external
        user within the time period in which they were added and removed.\n    * Begin
        your organization''s incident response process and investigate.", "tags":
        ["source:microsoft-365", "scope:microsoft-teams", "technique:T1136-create-account",
        "mitre_platform:saas", "mitre_platform:office-suite", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1136-create-account", "mitre_platform:office-suite",
        "mitre_platform:cloud", "tactic:TA0003-persistence", "source:microsoft-365",
        "mitre_platform:saas", "security:attack", "scope:microsoft-teams"], "version":
        87, "id": "def-000-3id", "updatedAt": 1736369582228, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous API Gateway API key reads
        by user", "createdAt": 1629705618797, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @evt.name:GetApiKeys", "groupByFields":
        ["@userIdentity.session_name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 1800, "keepAlive":
        1800}, "cases": [{"name": "", "status": "info", "notifications": []}], "message":
        "## Goal\nDetect when a user is enumerating API Gateway API keys.\n\n## Strategy\nBaseline
        `GetApiKeys` events by `@userIdentity.session_name` to surface anomalous `GetApiKeys`
        calls. \n\n## Triage and response\n1. Investigate activity for the following
        ARN `{{@userIdentity.arn}}` using `{{@userIdentity.session_name}}`.\n2. Review
        any other security signals for `{{@userIdentity.arn}}`.\n", "tags": ["technique:T1552-unsecured-credentials",
        "iaas:aws", "tactic:TA0006-credential-access", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas", "security:attack",
        "tactic:TA0006-credential-access", "technique:T1552-unsecured-credentials",
        "source:cloudtrail", "iaas:aws", "mitre_platform:cloud"], "version": 88, "id":
        "0kb-4zy-y2r", "updatedAt": 1736369582224, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous S3 bucket activity from user
        ARN", "createdAt": 1637613296347, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventCategory:Data @eventSource:s3.amazonaws.com
        @evt.name:(Abort* OR Create* OR Delete* OR Initiate* OR Put* OR Replicate*
        OR Update*)", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@requestParameters.bucketName"], "aggregation":
        "cardinality", "name": "s3_write_events"}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 86400,
        "keepAlive": 7200}, "cases": [{"name": "s3_write_events", "status": "low",
        "notifications": []}], "message": "## Goal\nDetect when an AWS user performs
        S3 bucket write activities they do not usually perform. \n\n## Strategy\nMonitor
        cloudtrail logs for S3 Data Plane events (`@eventCategory:Data`) to detect
        when an AWS User (`@userIdentity.arn`) is detected performing anomalous S3
        Write `(@evt.name:(Abort* OR Create* OR Delete* OR Initiate* OR Put* OR Replicate*
        OR Update*))` API calls. \n\n## Triage and response\n1. Determine if user:
        `{{@userIdentity.arn}}` should be performing the: `{{@evt.name}}` API calls.\n   *
        Use the Cloud SIEM - User Investigation dashboard to assess user activity.\n2.
        If not, investigate the user: `{{@userIdentity.arn}}` for indicators of account
        compromise and rotate credentials as necessary.\n\n## Changelog\n27 October
        2022 - Updated tags.\n", "tags": ["iaas:aws", "tactic:TA0009-collection",
        "scope:s3", "source:cloudtrail", "technique:T1530-data-from-cloud-storage",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas",
        "iaas:aws", "scope:s3", "mitre_platform:cloud", "tactic:TA0009-collection",
        "security:attack", "technique:T1530-data-from-cloud-storage", "source:cloudtrail"],
        "version": 87, "id": "66d-nnk-onm", "updatedAt": 1736369582271, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous amount of Autoscaling Group
        events", "createdAt": 1632769123994, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @eventSource:autoscaling.amazonaws.com
        -@userIdentity.session_name:*Datadog*", "groupByFields": ["@evt.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        86400, "keepAlive": 7200}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "## Goal\nDetect when an attacker is attempting to hijack
        an EC2 AutoScaling Group.\n\n## Strategy\nThis rule lets you monitor AWS EC2
        Autoscaling logs (`@eventSource:autoscaling.amazonaws.com`) to detect when
        an Autoscaling group receives an anomalous amount of API calls (`{{@evt.name}}`).\n\n##
        Triage and response\n1. Confirm if the user `{{@userIdentity.arn}}` intended
        to make the `{{@evt.name}}` API calls.\n2. If the user did not make the API
        calls:\n    * Rotate the credentials.\n    * Investigate if the same credentials
        made other unauthorized API calls.", "tags": ["scope:ec2", "iaas:aws", "tactic:TA0040-impact",
        "source:cloudtrail", "technique:T1496-resource-hijacking", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas", "scope:ec2",
        "iaas:aws", "tactic:TA0040-impact", "technique:T1496-resource-hijacking",
        "mitre_platform:cloud", "security:attack", "source:cloudtrail"], "version":
        88, "id": "0cg-j5s-svt", "updatedAt": 1736369582347, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous amount of Salesforce query
        results", "createdAt": 1629705618946, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:salesforce @rows_returned:*", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "metric":
        "@rows_returned", "metrics": ["@rows_returned"], "aggregation": "sum", "name":
        ""}], "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name": "", "status":
        "info", "notifications": []}], "message": "## Goal\nDetect when there is a
        spike in Salesforce query results for a user. A large query can be an early
        warning sign of a user attempting to exfiltrate Salesforce data. \n\n## Strategy\nInspect
        and baseline Salesforce logs and determine if there is a spike in the number
        of rows returned (`@rows_returned`). \n\n## Triage and response\nDetermine
        if the user should be legitimately performing large queries.\n", "tags": ["tactic:TA0009-collection",
        "source:salesforce", "scope:salesforce", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "technique:T1213-data-from-information-repositories", "scope:salesforce",
        "source:salesforce", "tactic:TA0009-collection", "mitre_platform:cloud", "mitre_platform:saas"],
        "version": 88, "id": "cz6-1ud-98v", "updatedAt": 1736369582345, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous amount of Salesforce records
        deleted", "createdAt": 1629705619231, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:salesforce @operation:Delete @evt.outcome:Success",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 86400,
        "keepAlive": 7200}, "cases": [{"name": "", "status": "info", "notifications":
        []}], "message": "## Goal\nDetect when there is a significant increase in
        deleted records in Salesforce.\n\n## Strategy\nInspect and baseline Salesforce
        logs and determine if there is a significant increase in successful (`@evt.outcome:Success`)
        delete operations (`@operation:Delete`).\n\n## Triage and response\nDetermine
        if the user should be legitimately deleting Salesforce records.\n", "tags":
        ["technique:T1485-data-destruction", "source:salesforce", "tactic:TA0040-impact",
        "scope:salesforce", "mitre_platform:saas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1485-data-destruction", "security:attack", "tactic:TA0040-impact",
        "source:salesforce", "scope:salesforce", "mitre_platform:cloud", "mitre_platform:saas"],
        "version": 87, "id": "e07-736-rty", "updatedAt": 1736369582349, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous amount of access denied events
        for AWS EC2 Instance", "createdAt": 1629705613286, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @error.kind:AccessDenied @userIdentity.session_name:i-*",
        "groupByFields": ["@userIdentity.assumed_role"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        86400, "keepAlive": 7200}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "## Goal\nDetect when an EC2 instance is assessing privileges
        in AWS through various enumeration and discovery techniques.\n\n## Strategy\nMonitor
        CloudTrail logs to identify when an EC2 instance (`@userIdentity.session_name:i-*\"`)
        generates an anomalous amount of `AccessDenied` events.\n\n## Triage and response\n1.
        Determine what events the EC2 instance `{{@userIdentity.session_name}}` are
        generating in the time frame of the signal.\n2. If the root cause is not a
        misconfiguration, investigate any other signals around the same time of the
        signal by looking at the Host Investigation dashboard.", "tags": ["scope:ec2",
        "iaas:aws", "source:cloudtrail", "technique:T1069-permission-groups-discovery",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "scope:ec2", "iaas:aws", "tactic:TA0007-discovery",
        "technique:T1069-permission-groups-discovery", "mitre_platform:cloud", "security:attack",
        "source:cloudtrail"], "version": 88, "id": "169-fd7-41b", "updatedAt": 1736369582409,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous amount of failed sign-in attempts
        by 1Password user", "createdAt": 1687967174575, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:1password @evt.type:1password-sign-in-attempts
        @evt.outcome:*failed*", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "## Goal\nDetect failed sign-in attempts from a 1Password
        user.\n\n## Strategy\nThis rule monitors 1Password logs to identify when an
        user generates an anomalous amount of failed sign-in events.\n\n## Triage
        and response\nInvestigate and determine if user `{{@usr.email}}` with failed
        sign-in events `{{@evt.outcome}}`,  attempting to authenticate from IP address
        `{{@network.client.ip}}` should have access. \n\n## Changelog\nUpdated query
        by replacing `@evt.category:*failed*` with `@evt.outcome:*failed*`.", "tags":
        ["mitre_platform:saas", "technique:T1078-valid-accounts", "source:1password",
        "scope:onepassword", "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0001-initial-access", "security:attack", "technique:T1078-valid-accounts",
        "scope:onepassword", "source:1password", "mitre_platform:cloud", "mitre_platform:saas"],
        "version": 87, "id": "def-000-kfa", "updatedAt": 1736369582450, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous failed SSH authentication
        attempts by a single IP address", "createdAt": 1713252887588, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:zeek service:ssh
        @auth_success:false", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@auth_attempts", "metrics": ["@auth_attempts"],
        "aggregation": "sum", "name": ""}], "options": {"evaluationWindow": 1800,
        "detectionMethod": "anomaly_detection", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when an anomalous number of failed SSH authentication attempts
        have been made by a single IP address.\n\n## Strategy\nThis rule monitors
        Zeek SSH logs for when there has been an anomalous number of failed SSH authentication
        attempts by a single IP address. Attackers may try to brute force access to
        a server to gain direct or lateral access to a victim\u2019s environment.\n\n##
        Triage and response\n1. Verify whether the client IP `{{@network.client.ip}}`
        is internal or external.\n2. For internal IPs, identify the corresponding
        host and collaborate with the owner to investigate any host-based alerts,
        addressing potential compromises.\n3. For external IPs, assess the IP address
        reputation, specifically looking for associations with SSH-based attacks,
        and determine if the destination host should be accessible via external IPs
        over SSH.", "tags": ["security:anomaly", "tactic:TA0006-credential-access",
        "mitre_platform:network", "technique:T1110-brute-force", "source:zeek"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:network",
        "tactic:TA0006-credential-access", "technique:T1110-brute-force", "security:anomaly",
        "source:zeek"], "version": 87, "id": "def-000-xw3", "updatedAt": 1736369582478,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous number of Auth0 Attack Protection
        events", "createdAt": 1688629519660, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:auth0 @data.type:(limit_mu OR limit_wc OR pwd_leak
        OR signup_pwd_leak)", "groupByFields": ["@data.hostname"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        1800, "keepAlive": 1800}, "cases": [{"name": "", "status": "low", "notifications":
        []}], "message": "## Goal\nDetect an anomalous number of [Attack Protection][1]
        events for a hostname.\n\n## Strategy\nThis rule allows you to monitor Auth0
        logs and detect when there is an anomalous number of Attack Protection events
        for a host. Attack Protection is a feature that Auth0 provides to detect and
        mitigate attacks, including brute-force protection, suspicious IP throttling,
        breached password detection, bot detection, and adaptive multi-factor authentication.
        Abnormally high volumes of attack protection events may be an indicator of
        an ongoing credential based attack like credential stuffing.\n \n## Triage
        and response\n1. Determine if the spike in Attack Protection events are abnormal
        for your application:\n    * Is the spike related to a single IP (`@network.client.ip`)
        or user agent (`@http.useragent`)?\n    * Is it coming from unexpected geo-locations
        (`@network.client.geoip.country.name`) for your application?\n    * Is it
        comming from a set of unexpected autonomous systems (AS)?\n2. If it''s deemed
        to be an attack:\n    * Filter for any successful authentications (`@evt.name:success_login`)
        from the attackers infrastructure.\n    * If any accounts have been compromised,
        begin your organization''s incident response process and investigate.\n\n[1]:
        https://auth0.com/docs/secure/attack-protection", "tags": ["tactic:TA0006-credential-access",
        "source:auth0", "technique:T1110-brute-force", "mitre_platform:identity-provider",
        "scope:auth0", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:identity-provider",
        "technique:T1110-brute-force", "security:attack", "source:auth0", "tactic:TA0006-credential-access",
        "scope:auth0", "mitre_platform:cloud"], "version": 87, "id": "def-000-mdv",
        "updatedAt": 1736369582502, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Anomalous number of Google Cloud Compute GPU virtual
        machines created", "createdAt": 1677054376191, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:gcp.gce.instance @evt.name:(v1.compute.instances.insert
        OR beta.compute.instances.insert) @data.protoPayload.request.guestAccelerators.acceleratorCount:*",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": ["instance_id"], "aggregation": "cardinality", "name": "anomalous_gce_gpu_vm_creation"}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name": "", "status":
        "medium", "notifications": []}], "message": "## Goal\nDetect when an attempt
        to create a GPU-based virtual machine (VM) instance in Google Compute Engine
        occurs.\n\n## Strategy\nThis rule monitors Google Cloud Audit Logs to determine
        when an attempt to create an anomalous number of GPU-based VM instances in
        Google Compute Engine has occurred. An attacker who has already gained initial
        access may try to create GPU-based VM instances with goal mining cryptocurrency.\n\n##
        Triage and response\n1. Reach out to the user or owner of the service account
        to determine if this action is legitimate.\n2. If the action is legitimate,
        consider including the user in a suppression list. See this article on [Best
        practices for creating detection rules with Datadog Cloud SIEM][1] for more
        information.\n3. Otherwise, use the Cloud SIEM - User Investigation dashboard
        to see if the user `{{@usr.id}}` has taken other actions.\n4. If the results
        of the triage indicate that an attacker has taken the action, begin your company''s
        incident response process and an investigation.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "scope:google-compute-engine", "tactic:TA0040-impact",
        "technique:T1496-resource-hijacking", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "technique:T1496-resource-hijacking",
        "security:attack", "tactic:TA0040-impact", "source:gcp", "mitre_platform:cloud",
        "scope:google-compute-engine"], "version": 87, "id": "def-000-tz6", "updatedAt":
        1736369582736, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Anomalous number of Google Cloud Storage Buckets Accessed", "createdAt":
        1674815834048, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gcp.gcs.bucket @evt.name:storage.buckets.get", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": ["bucket_name"], "aggregation":
        "cardinality", "name": "anomalous_bucket_access"}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 86400,
        "keepAlive": 7200}, "cases": [{"name": "", "status": "low", "notifications":
        []}], "message": "## Goal\nDetect when a Google Cloud identity accesses a
        number of Google Cloud Storage buckets that they do not usually access. \n\n##
        Strategy\nMonitor Google Cloud Audit logs to identify when a Google Cloud
        identity makes an anomalous number of `storage.buckets.get` calls to a unique
        number of Google Cloud Storage buckets (`bucket_name`).\n\n## Triage and response\n1.
        Determine if the user: {{@usr.id}} should be accessing the storage buckets.\n    *
        Here is a list of buckets that were accessed (up to 10): {{bucket_name}}\n2.
        If the action is legitimate, consider including the user in a suppression
        list. See this article on [Best practices for creating detection rules with
        Datadog Cloud SIEM][1] for more information.\n3. Otherwise, use the Cloud
        SIEM - User Investigation dashboard to see if the User: {{@usr.id}} has taken
        other actions.\n4. If the results of the triage indicate that an attacker
        has taken the action, begin your company''s incident response process and
        investigate.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n",
        "tags": ["source:gcp", "technique:T1619-cloud-storage-object-discovery", "scope:google-cloud-storage",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "tactic:TA0007-discovery", "security:attack", "scope:google-cloud-storage",
        "source:gcp", "mitre_platform:cloud", "technique:T1619-cloud-storage-object-discovery"],
        "version": 87, "id": "def-000-330", "updatedAt": 1736369582814, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous number of Google Cloud Storage
        Objects Accessed", "createdAt": 1674815834098, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:gcp.gcs.bucket @evt.name:storage.objects.get",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        ["bucket_name"], "aggregation": "cardinality", "name": "anomalous_object_access"}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name": "", "status":
        "medium", "notifications": []}], "message": "## Goal\nDetect when a Google
        Cloud identity accesses a number of Google Cloud Storage objects that they
        do not usually access. \n\n## Strategy\nMonitor Google Cloud Audit logs to
        identify when a Google Cloud identity makes an anomalous number of `storage.objects.get`
        calls to a unique number of Google Cloud Storage buckets (`bucket_name`).\n\n##
        Triage and response\n1. Determine if the user: {{@usr.id}} should be accessing
        the storage buckets.\n    * Here is a list of buckets that were accessed (up
        to 10): {{bucket_name}}\n2. If the action is legitimate, consider including
        the user in a suppression list. See this article on [Best practices for creating
        detection rules with Datadog Cloud SIEM][1] for more information.\n3. Otherwise,
        use the Cloud SIEM - User Investigation dashboard to see if the User: {{@usr.id}}
        has taken other actions.\n4. If the results of the triage indicate that an
        attacker has taken the action, begin your company''s incident response process
        and investigate.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#customize-security-signal-messages-to-fit-your-environment\n\n",
        "tags": ["source:gcp", "tactic:TA0009-collection", "technique:T1530-data-from-cloud-storage",
        "scope:google-cloud-storage", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "security:attack", "scope:google-cloud-storage", "source:gcp",
        "technique:T1530-data-from-cloud-storage", "tactic:TA0009-collection", "mitre_platform:cloud"],
        "version": 88, "id": "def-000-472", "updatedAt": 1736369582823, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous number of Google Compute Engine
        instances created in multiple zones by user", "createdAt": 1680900140665,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:gcp.gce.instance
        @evt.name:(v1.compute.instances.insert OR beta.compute.instances.insert) -@http.useragent:(\"GCE
        Managed Instance Group\" OR \"GCE Managed Instance Group for GKE\")", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        ["zone"], "aggregation": "cardinality", "name": "anomalous_gce_instance_creation"}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name": "", "status":
        "medium", "notifications": []}], "message": "## Goal\n\nDetect when an anomalous
        number of Google Compute Engine instances are created in multiple distinct
        zones by an individual user or service account. This could be an indication
        of cryptomining activity.\n\n## Strategy\n\nMonitor Google Cloud Audit logs
        and detect when a single user or service account evokes the `v1.compute.instances.insert`
        or `beta.compute.instances.insert` API call an anomalous number of times in
        multiple distinct zones.\n\n## Triage and response\n\n1. Determine if the
        user `{{@usr.id}}` and IP address `{{@network.client.ip}}` should be performing
        the observed event: `{{@evt.name}}`.\n2. If the action is legitimate, consider
        including the user in a suppression list. See [Best practices for creating
        detection rules with Datadog Cloud SIEM][1] for more information.\n3. Otherwise,
        use the Cloud SIEM - User Investigation dashboard to see if the user `{{@usr.id}}`
        has taken other actions.\n4. If the results of the triage indicate that an
        attacker has taken the action, begin your company''s incident response process
        and an investigation.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "scope:google-compute-engine", "tactic:TA0040-impact",
        "technique:T1496-resource-hijacking", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "technique:T1496-resource-hijacking",
        "security:attack", "tactic:TA0040-impact", "source:gcp", "mitre_platform:cloud",
        "scope:google-compute-engine"], "version": 87, "id": "def-000-zsu", "updatedAt":
        1736369582871, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Anomalous number of S3 buckets accessed", "createdAt": 1629705615683, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail @evt.name:GetObject
        -status:error", "groupByFields": ["@userIdentity.assumed_role"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@requestParameters.bucketName"], "aggregation":
        "cardinality", "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod":
        "anomaly_detection", "maxSignalDuration": 86400, "keepAlive": 7200, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "medium", "notifications": []}], "message":
        "## Goal\nDetect when an AWS assumed role accesses S3 buckets that they do
        not usually access. \n\n## Strategy\nMonitor cloudtrail logs to identify when
        a `@userIdentity.assumed_role` makes an anomalous amount of `GetObject` calls
        to a unique number of S3 buckets (`@requestParameters.bucketName`).\n\n##
        Triage and response\nDetermine if the user using the assumed role: {{@userIdentity.assumed_role}}
        should be accessing a bunch of random buckets.\n* Here is a list of buckets
        that were accessed (up to 10): {{@requestParameters.bucketName}}\n\n## Changelog\n*
        30 March 2022 - Updated query and signal message.\n* 17 October 2022 - Updated
        tags.\n* 11 January 2023 - Updated severity.", "tags": ["iaas:aws", "scope:s3",
        "technique:T1619-cloud-storage-object-discovery", "source:cloudtrail", "tactic:TA0007-discovery",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas",
        "iaas:aws", "tactic:TA0007-discovery", "scope:s3", "mitre_platform:cloud",
        "security:attack", "technique:T1619-cloud-storage-object-discovery", "source:cloudtrail"],
        "version": 87, "id": "jlu-h6s-of3", "updatedAt": 1736369582892, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous number of assumed roles from
        user", "createdAt": 1629705618321, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @userIdentity.type:IAMUser @evt.name:AssumeRole",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@requestParameters.roleArn"], "aggregation": "cardinality", "name": ""}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name": "", "status":
        "low", "notifications": []}], "message": "## Goal\nDetect when a user has
        attempted to assume an anomalous number of unique roles.\n\n## Strategy\nThis
        rule sets a baseline for user activity for the [`AssumeRole`][1] API call,
        and enables detection of potentially anomalous activity.\n\nAn attacker may
        attempt this for the following reasons:\n\n* To identify which roles the user
        account has access to.\n* To identify what AWS services are being used internally.\n*
        To identify third party integrations and internal software.\n\n## Triage and
        response\n1. Investigate activity for the following ARN `{{@userIdentity.arn}}`
        using `{{@userIdentity.session_name}}`.\n2. Review any other security signals
        for `{{@userIdentity.arn}}`.\n3. If the activity is deemed malicious:\n    *
        Rotate user credentials.\n    * Determine what other API calls were made by
        the user.\n    * Begin your organization''s incident response process and
        investigate.\n\n[1]: https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html",
        "tags": ["tactic:TA0004-privilege-escalation", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "technique:T1069-permission-groups-discovery", "tactic:TA0007-discovery",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "tactic:TA0007-discovery", "security:attack", "technique:T1069-permission-groups-discovery",
        "iaas:aws", "technique:T1098-account-manipulation", "mitre_platform:iaas",
        "tactic:TA0004-privilege-escalation", "source:cloudtrail"], "version": 88,
        "id": "fwu-obr-c9n", "updatedAt": 1736369582945, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anomalous number of secrets retrieved
        from AWS Secrets Manager", "createdAt": 1685720633456, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:cloudtrail @evt.name:GetSecretValue
        @eventSource:secretsmanager.amazonaws.com -@error.kind:AccessDenied -@userIdentity.invokedBy:(apidestinations.events.amazonaws.com
        OR rds.amazonaws.com OR access-analyzer.amazonaws.com OR config.amazonaws.com)",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@requestParameters.secretId"], "aggregation": "cardinality",
        "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "low", "notifications": []}], "message": "## Goal\nDetect when an anomalous
        number of secrets are retrieved from AWS Secrets Manager.\n\n## Strategy\nThis
        rule lets you monitor the [`GetSecretValue`][1] CloudTrail API call to detect
        when a secret is retrieved. The anomaly detection generates a security signal
        when a user deviates from their baseline. \n\nFor more information about the
        anomaly detection method, see [Detect security threats with anomaly detection
        rules][2].\n\n## Triage and response\n1. Determine whether the identity: `{{@userIdentity.arn}}`
        is expected to access the AWS Secrets Manager and the secret values within
        `@requestParameters.secretId`.\n2. If the activity is legitimate, consider
        including the user in a suppression list. See [Best practices for creating
        detection rules with Datadog Cloud SIEM][3] for more information.\n3. If the
        activity is unusual:\n   * Contact the user: `{{@userIdentity.arn}}` and see
        if they made the API call.\n   * Use the Cloud SIEM - User Investigation dashboard
        to see if the user `{{@userIdentity.arn}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, begin your company''s incident response
        process as well as an investigation.\n\n[1]: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html\n[2]:
        https://www.datadoghq.com/blog/anomaly-detection-rules-datadog/\n[3]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["technique:T1555-credentials-from-password-stores", "iaas:aws", "tactic:TA0006-credential-access",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "security:attack", "tactic:TA0006-credential-access",
        "source:cloudtrail", "iaas:aws", "technique:T1555-credentials-from-password-stores",
        "mitre_platform:cloud"], "version": 88, "id": "def-000-mfm", "updatedAt":
        1736369582951, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Anomalous user behavior detected", "createdAt": 1706718944558, "isDefault":
        false, "isPartner": true, "isEnabled": true, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "@bottomline.mainframe.activity.type:Access
        ", "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 86400,
        "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "User anomaly detection", "tags": [], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "version": 56, "id": "ext-005-btm",
        "updatedAt": 1736369582973, "blocking": false, "partnerIntegrationId": "bottomline-recordandreplay",
        "metadata": {"entities": null, "sources": null}, "updateAuthorId": 1615666,
        "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Anonymous request authorized", "createdAt":
        1629705611944, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "@apiVersion:audit.k8s.io* @usr.name:\"system:anonymous\" @http.status_code:[100
        TO 299] -@http.url_details.path:(\"/livez\" OR \"/readyz\" OR  \"/healthz\"
        OR  \"/version\")", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "standardized_attributes"},
        {"query": "@apiVersion:audit.k8s.io* @user.username:\"system:anonymous\" @responseStatus.code:[100
        TO 299] -@requestURI:(\"/livez\" OR \"/readyz\" OR  \"/healthz\" OR  \"/version\")",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "non_standardized_attributes"}, {"query":
        "source:gcp.k8s.cluster service:k8s.io @usr.id:\"system:anonymous\" @data.labels.authorization.k8s.io/decision:allow
        -@data.protoPayload.resourceName:(version OR livez OR readyz OR healthz)",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gke_anonymous_request_authorized"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "standardized", "status": "info",
        "notifications": [], "condition": "standardized_attributes > 0"}, {"name":
        "non-standardized", "status": "info", "notifications": [], "condition": "non_standardized_attributes
        > 0"}, {"name": "gke_anonymous_request_authorized", "status": "info", "notifications":
        [], "condition": "gke_anonymous_request_authorized > 0"}], "message": "##
        Goal\nDetect when an unauthenticated request user is permitted in Kubernetes.\n\n##
        Strategy\nThis rule monitors when any action is permitted (`@http.status_code:[100
        TO 299]`) for an unauthenticated user (`@user.username:\\\"system:anonymous\\\"`).\nThe
        `/livez` and `/readyz` endpoints are commonly accessed unauthenticated and
        are excluded in the query filter.\n\n## Triage and response\n1. Inspect all
        of the HTTP paths accessed and determine if any of the path should be permitted
        by unauthenticated users.\n2. Determine what IP addresses accessed Kubernetes
        endpoints which may contain sensitive data.\n\n## Changelog\n* 7 May 2024
        - Updated detection query to include logs from Azure Kubernetes Service.\n*
        15 July 2024 - Updated detection query to include logs from Google Kubernetes
        Engine.", "tags": ["source:gcp.k8s.cluster", "source:kubernetes", "technique:T1078-valid-accounts",
        "mitre_platform:containers", "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "tactic:TA0001-initial-access",
        "technique:T1078-valid-accounts", "source:gcp.k8s.cluster", "mitre_platform:containers",
        "source:kubernetes", "mitre_platform:cloud", "security:attack"], "version":
        88, "id": "37f-a98-5cd", "updatedAt": 1736369582990, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Apache HTTP requests from security scanner",
        "createdAt": 1629705619385, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:apache @http.useragent:(*burp* OR *burpcollaborator.net*
        OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel*
        OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR
        *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR
        *eval* OR *javascript* OR *alert*)", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "info", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when a web application is being scanned. This identifies attacker IP addresses
        who are not trying to hide their attempt to attack your system. More advanced
        hackers will use an inconspicuous user agent. \n\n## Strategy\nInspect the
        user agent in the HTTP headers to determine if an IP is scanning your application
        and generate an `INFO` signal. \n\n## Triage and response\n1. Determine if
        this IP is making authenticated requests to the application.\n2. If the IP
        is making authenticated requests to the application:\n    * Investigate the
        HTTP logs and determine if the user is attacking your application.\n\nThe
        HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]:
        https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n", "tags":
        ["mitre_platform:windows", "scope:apache", "technique:T1190-exploit-public-facing-application",
        "mitre_platform:linux", "source:apache", "security:attack", "tactic:TA0001-initial-access"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1190-exploit-public-facing-application", "tactic:TA0001-initial-access",
        "security:attack", "source:apache", "mitre_platform:linux", "scope:apache",
        "mitre_platform:windows"], "version": 87, "id": "13a-810-14c", "updatedAt":
        1736369583068, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Atlassian Confluence admin key usage", "createdAt": 1730109322098, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:confluence-audit-records
        @evt.name:Login @evt.category:\"Admin Key\"", "groupByFields": ["@usr.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "atlassian_confluence_admin_key_usage"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "atlassian_confluence_admin_key_usage > 0"}], "message": "## Goal\nDetect
        when an Atlassian administrator uses the [admin key][1] feature.\n\n## Strategy\nThis
        rule monitors Confluence audit logs for when an administrator uses the admin
        key feature. This feature allows the user to access content they haven''t
        been given permission to view. This could impact the confidentiality of data
        stored on the confluence site.\n\n## Triage and response\n1. Determine if
        the user `{{@usr.name}}` intended use the admin key feature:\n    * Is there
        a related ticket tracking this change?\n    * Is `{{@usr.name}}` aware of
        this activity?\n2. If the results of the triage indicate that `{{@usr.name}}`
        was not aware of this activity or it did not originate from a known network,
        begin your company''s incident response process, and start an investigation.\n\n[1]:
        https://support.atlassian.com/confluence-cloud/docs/bypass-access-restrictions-on-a-page-with-admin-key/",
        "tags": ["tactic:TA0004-privilege-escalation", "mitre_platform:saas", "technique:T1078-valid-accounts",
        "security:attack", "source:confluence-audit-records", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:confluence-audit-records", "security:attack", "mitre_platform:saas",
        "tactic:TA0004-privilege-escalation", "mitre_platform:cloud", "technique:T1078-valid-accounts"],
        "version": 87, "id": "def-000-bhv", "updatedAt": 1736369583654, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Atlassian Confluence global setting
        changed", "createdAt": 1730109323818, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:confluence-audit-records @evt.name:\"Global
        settings changed\"", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "atlassian_confluence_global_setting_changed"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "atlassian_confluence_global_setting_changed > 0"}], "message":
        "## Goal\nDetect when a Confluence global setting has been changed.\n\n##
        Strategy\nThis rule monitors Confluence audit logs for when a global setting
        has been changed. Global settings include configurations to allow users to
        share pages publicly and allow anonymous users access to the confluence site.\n\n##
        Triage and response\n1. Determine if the user `{{@usr.name}}` intended make
        the global setting change:\n    * Is there a related ticket tracking this
        change?\n    * Is `{{@usr.name}}` aware of this activity?\n2. If the results
        of the triage indicate that `{{@usr.name}}` was not aware of this activity
        or it did not originate from a known network, begin your company''s incident
        response process, and start an investigation.", "tags": ["mitre_platform:saas",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "security:attack",
        "source:confluence-audit-records", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:confluence-audit-records",
        "security:attack", "tactic:TA0005-defense-evasion", "technique:T1562-impair-defenses",
        "mitre_platform:saas", "mitre_platform:cloud"], "version": 87, "id": "def-000-imy",
        "updatedAt": 1736369583691, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Atlassian Confluence public link turned on", "createdAt":
        1730109322085, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:confluence-audit-records @evt.name:\"Public link turned on\"", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "atlassian_public_link_turned_on"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "atlassian_public_link_turned_on > 0"}], "message": "## Goal\nDetect when
        a [public link][1] for a page has been enabled.\n\n## Strategy\nThis rule
        monitors Confluence audit logs for when a public link for a page has been
        enabled. A public link allows external users to view Confluence content. While
        this activity may be expected in some circumstances, monitoring this activity
        is valuable to ensure only authorized content is shared.\n\n## Triage and
        response\n1. Determine if the user `{{@usr.name}}` intended make to enable
        the public link:\n    * Is `{{@usr.name}}` aware of this activity?\n2. If
        the results of the triage indicate that `{{@usr.name}}` was not aware of this
        activity or it did not originate from a known network, begin your company''s
        incident response process, and start an investigation.\n\n[1]: https://support.atlassian.com/confluence-cloud/docs/share-content-externally-with-public-links/",
        "tags": ["tactic:TA0009-collection", "mitre_platform:saas", "technique:T1530-data-from-cloud-storage",
        "security:attack", "source:confluence-audit-records", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0009-collection", "security:attack", "technique:T1530-data-from-cloud-storage",
        "mitre_platform:saas", "mitre_platform:cloud", "source:confluence-audit-records"],
        "version": 87, "id": "def-000-udg", "updatedAt": 1736369583738, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Atlassian Confluence site export", "createdAt":
        1730109323820, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:confluence-audit-records @evt.name:\"Site export\"", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "atlassian_site_export"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "atlassian_site_export > 0"}], "message": "## Goal\nDetect when a Confluence
        [site export][1] occurs.\n\n## Strategy\nThis rule monitors Confluence audit
        logs for when a site export occurs. A site export includes the following data:\n\n*
        Each space\u2019s default classification level when applicable.\n* Pages,
        including their classification level when applicable.\n* Users and their group
        settings.\n* Attachments (if selected).\n\nDue to the sensitive nature of
        data documented on confluence, an attacker may export this data in order to
        mine for valuable information. \n\n## Triage and response\n1. Determine if
        the user `{{@usr.name}}` intended make to enable the public link:\n    * Is
        `{{@usr.name}}` aware of this activity?\n2. If the results of the triage indicate
        that `{{@usr.name}}` was not aware of this activity or it did not originate
        from a known network, begin your company''s incident response process, and
        start an investigation.\n\n[1]: https://support.atlassian.com/confluence-cloud/docs/create-a-site-backup/",
        "tags": ["tactic:TA0009-collection", "mitre_platform:saas", "technique:T1530-data-from-cloud-storage",
        "security:attack", "source:confluence-audit-records", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0009-collection", "security:attack", "technique:T1530-data-from-cloud-storage",
        "mitre_platform:saas", "mitre_platform:cloud", "source:confluence-audit-records"],
        "version": 87, "id": "def-000-ig1", "updatedAt": 1736369583768, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Atlassian Confluence space export",
        "createdAt": 1730109322066, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:confluence-audit-records @evt.name:\"Space export\"", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "atlassian_space_export"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "atlassian_space_export > 0"}], "message": "## Goal\nDetect when a Confluence
        [space export][1] occurs.\n\n## Strategy\nThis rule monitors Confluence audit
        logs for when a space export occurs. Space admins can export a space (or a
        group of individually selected pages in a space) to PDF, CSV, HTML, or XML.\n\nDue
        to the sensitive nature of data documented on confluence, an attacker may
        export this data in order to mine for valuable information. \n\n## Triage
        and response\n1. Determine if the user `{{@usr.name}}` intended make to enable
        the public link:\n    * Is `{{@usr.name}}` aware of this activity?\n2. If
        the results of the triage indicate that `{{@usr.name}}` was not aware of this
        activity or it did not originate from a known network, begin your company''s
        incident response process, and start an investigation.\n\n[1]: https://support.atlassian.com/confluence-cloud/docs/export-content-to-word-pdf-html-and-xml/",
        "tags": ["tactic:TA0009-collection", "mitre_platform:saas", "technique:T1530-data-from-cloud-storage",
        "security:attack", "source:confluence-audit-records", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0009-collection", "security:attack", "technique:T1530-data-from-cloud-storage",
        "mitre_platform:saas", "mitre_platform:cloud", "source:confluence-audit-records"],
        "version": 87, "id": "def-000-sqs", "updatedAt": 1736369583787, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Atlassian Tor client activity detected",
        "createdAt": 1730109287193, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(atlassian-event-logs OR confluence-audit-records OR jira-audit-records)
        @threat_intel.results.category:tor", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "atlassian_tor_client"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "atlassian_tor_client > 0"}], "message": "## Goal\nDetect
        when Tor client activity is seen in Atlassian audit logs.\n\n## Strategy\nThis
        rule monitors Atlassian audit logs to determine when an activity had originated
        from a Tor client. Datadog enriches all ingested logs with [expert-curated
        threat intelligence][1] in real time. An attacker may use a Tor client to
        anonymize their true origin. \n\n## Triage and response\n1. Determine if the
        actions taken by the identity `{{@usr.email}}` are legitimate by looking at
        past activity and the type of logs occurring. \n2. If the results of the triage
        indicate that `{{@usr.email}}` was not aware of this activity, begin your
        company''s incident response process, and start an investigation.\n\n[1]:
        https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog",
        "tags": ["source:jira-audit-records", "source:atlassian-event-logs", "mitre_platform:saas",
        "technique:T1078-valid-accounts", "security:attack", "source:confluence-audit-records",
        "mitre_platform:cloud", "tactic:TA0001-initial-access"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0001-initial-access",
        "source:confluence-audit-records", "technique:T1078-valid-accounts", "mitre_platform:cloud",
        "mitre_platform:saas", "security:attack", "source:atlassian-event-logs", "source:jira-audit-records"],
        "version": 91, "id": "def-000-7th", "updatedAt": 1736369583827, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Atlassian administrative API token activity
        observed", "createdAt": 1730109288354, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:atlassian-event-logs @evt.name:(api_token_created
        OR api_token_revoked)", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "atlassian_admin_api_token_activity"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "atlassian_admin_api_token_activity > 0"}], "message": "##
        Goal\nDetect when Atlassian administrative [API token][1] activity is observed.\n\n##
        Strategy\nThis rule monitors Atlassian organization audit logs for when an
        administrator API token activity is observed. An attacker may create or revoke
        an API token either as a method of persisting within the Atlassian environment
        or degrading the security controls of an organization or disrupting operations.
        These API tokens allow users to manage organization settings and users via
        the [admin APIs][2].\n\n## Triage and response\n1. Determine if the user `{{@usr.email}}`
        intended to create or revoke a new API token:\n    * Is there a related ticket
        tracking this change?\n    * Is `{{@usr.email}}` aware of this activity?\n    *
        Is the network metadata associated with the activity unusual for this user?\n2.
        If the results of the triage indicate that `{{@usr.email}}` was not aware
        of this activity or it did not originate from a known network, begin your
        company''s incident response process, and start an investigation.\n\n[1]:
        https://support.atlassian.com/organization-administration/docs/manage-an-organization-with-the-admin-apis/\n[2]:
        https://developer.atlassian.com/cloud/admin/rest-apis", "tags": ["technique:T1098-account-manipulation",
        "source:atlassian-event-logs", "mitre_platform:saas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "technique:T1098-account-manipulation",
        "mitre_platform:saas", "source:atlassian-event-logs", "mitre_platform:cloud",
        "tactic:TA0003-persistence"], "version": 87, "id": "def-000-6xe", "updatedAt":
        1736369583866, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Atlassian administrator impersonated user", "createdAt": 1730109287079, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:atlassian-event-logs
        @evt.name:user_logged_in_as_user", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "atlassian_administrator_login_impersonation"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "atlassian_administrator_login_impersonation > 0"}], "message":
        "## Goal\nDetect when an Atlassian administrator logs in as another user.\n\n##
        Strategy\nThis rule monitors Atlassian organization audit logs for when an
        administrator logs in as another user. This [feature][1] allows administrators
        to impersonate other users. Due to the privileged nature of this, it is important
        to monitor and verify any impersonation.\n\n## Triage and response\n1. Determine
        if `{{@usr.email}}` was authorized to impersonate the target user:\n    *
        Is there a related ticket tracking this work?\n    * Has it been approved
        by the target user?\n    * Is `{{@usr.email}}` aware of this activity?\n2.
        If the results of the triage indicate that `{{@usr.email}}` was not aware
        of this activity or it has not been approved, begin your company''s incident
        response process, and start an investigation.\n\n[1]: https://support.atlassian.com/user-management/docs/log-in-as-another-user/",
        "tags": ["tactic:TA0004-privilege-escalation", "technique:T1098-account-manipulation",
        "source:atlassian-event-logs", "mitre_platform:saas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "technique:T1098-account-manipulation", "mitre_platform:saas",
        "tactic:TA0004-privilege-escalation", "source:atlassian-event-logs", "mitre_platform:cloud"],
        "version": 87, "id": "def-000-2b1", "updatedAt": 1736369583887, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Atlassian user added to administrative
        group", "createdAt": 1730109294403, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:atlassian-event-logs @evt.name:user_added_to_group
        @attributes.context.attributes.groupName:(*admin* OR *administrators*)", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "atlassian_user_added_to_administrative_group"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "atlassian_user_added_to_administrative_group > 0"}], "message":
        "## Goal\nDetect when an Atlassian user is added to an administrative group.\n\n##
        Strategy\nThis rule monitors Atlassian organization audit logs for when a
        user is added to a [default administrative group][1]. An attacker may try
        to assign a compromised identity to an administrative group in order to elevate
        their privileges.\n\n## Triage and response\n1. Determine if the user `{{@usr.email}}`
        intended to assign the target user to the administrative group:\n    * Is
        there a related ticket tracking this change?\n    * Is `{{@usr.email}}` aware
        of this activity?\n    * Is the network metadata associated with the activity
        unusual for this user?\n2. If the results of the triage indicate that `{{@usr.email}}`
        was not aware of this activity or it did not originate from a known network,
        begin your company''s incident response process, and start an investigation.\n\n[1]:
        https://support.atlassian.com/user-management/docs/default-groups-and-permissions/",
        "tags": ["tactic:TA0004-privilege-escalation", "technique:T1098-account-manipulation",
        "source:atlassian-event-logs", "mitre_platform:saas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "technique:T1098-account-manipulation", "mitre_platform:saas",
        "tactic:TA0004-privilege-escalation", "source:atlassian-event-logs", "mitre_platform:cloud"],
        "version": 87, "id": "def-000-r2f", "updatedAt": 1736369583907, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Atlassian user added to organization
        administrative group", "createdAt": 1730109287140, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:atlassian-event-logs @evt.name:user_added_to_group
        @attributes.context.attributes.groupName:org-admins", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "atlassian_user_added_to_org_administrative_group"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "atlassian_user_added_to_org_administrative_group > 0"}], "message": "## Goal\nDetect
        when an Atlassian user is added to the organizational administrative group.\n\n##
        Strategy\nThis rule monitors Atlassian organization audit logs for when a
        user is added to the [organizational administrative group][1]. An attacker
        may try to assign a compromised identity to the organizational administrative
        group in order to elevate their privileges. This group contains users who
        manage all your sites and the organization.\n\n## Triage and response\n1.
        Determine if the user `{{@usr.email}}` intended to assign the target user
        to the administrative group:\n    * Is there a related ticket tracking this
        change?\n    * Is `{{@usr.email}}` aware of this activity?\n    * Is the network
        metadata associated with the activity unusual for this user?\n2. If the results
        of the triage indicate that `{{@usr.email}}` was not aware of this activity
        or it did not originate from a known network, begin your company''s incident
        response process, and start an investigation.\n\n[1]: https://support.atlassian.com/user-management/docs/default-groups-and-permissions/",
        "tags": ["tactic:TA0004-privilege-escalation", "technique:T1098-account-manipulation",
        "source:atlassian-event-logs", "mitre_platform:saas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "technique:T1098-account-manipulation", "mitre_platform:saas",
        "tactic:TA0004-privilege-escalation", "source:atlassian-event-logs", "mitre_platform:cloud"],
        "version": 87, "id": "def-000-cuu", "updatedAt": 1736369584012, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Atlassian user invited to organization
        as an organization administrator", "createdAt": 1730109288352, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:atlassian-event-logs
        @evt.name:user_invite_to_org @attributes.context.attributes.groupName:org-admins",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "atlassian_user_invited_to_org_as_org_admin"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "atlassian_user_invited_to_org_as_org_admin > 0"}], "message":
        "## Goal\nDetect when an Atlassian user is invited to the organization with
        the organizational administrator role.\n\n## Strategy\nThis rule monitors
        Atlassian organization audit logs for when a user is invited to the organization
        with the organizational administrator role. An attacker may try to invite
        an additional identity to the organization with high-level privileges.\n\n##
        Triage and response\n1. Determine if the user `{{@usr.email}}` intended to
        invite the target user as an organizational administrator:\n    * Is there
        a related ticket tracking this change?\n    * Is `{{@usr.email}}` aware of
        this activity?\n    * Is the network metadata associated with the activity
        unusual for this user?\n2. If the results of the triage indicate that `{{@usr.email}}`
        was not aware of this activity or it did not originate from a known network,
        begin your company''s incident response process, and start an investigation.",
        "tags": ["tactic:TA0004-privilege-escalation", "technique:T1098-account-manipulation",
        "source:atlassian-event-logs", "mitre_platform:saas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "technique:T1098-account-manipulation", "mitre_platform:saas",
        "tactic:TA0004-privilege-escalation", "source:atlassian-event-logs", "mitre_platform:cloud"],
        "version": 87, "id": "def-000-v79", "updatedAt": 1736369584197, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Attempt to add SSH key to Google Compute
        Engine project metadata by a previously unseen user", "createdAt": 1675257600588,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:gcp.gce.project
        @evt.name:v*.compute.projects.setCommonInstanceMetadata (@data.protoPayload.metadata.projectMetadataDelta.modifiedMetadataKeys:ssh-keys
        OR @protoPayload.metadata.projectMetadataDelta.addedMetadataKeys:ssh-keys)",
        "groupByFields": ["project_id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "metric": "@usr.id", "metrics": ["@usr.id"], "aggregation": "new_value",
        "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod": "new_value",
        "maxSignalDuration": 86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter":
        28, "learningDuration": 7, "learningThreshold": 0, "learningMethod": "duration"},
        "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "", "status": "medium",
        "notifications": []}], "message": "## Goal\nDetect when a previously unseen
        user attempts to add or modify an SSH key to GCE project metadata.\n\n## Strategy\nThis
        rule monitors Google Cloud Audit Logs to determine when a previously unseen
        user attempts to add or modify an SSH key in the GCE project metadata. An
        attacker who has already gained initial access may try to preserve access
        or laterally move to other GCE instances by adding their SSH key to the project
        metadata.\n\n**Note:**  This rule uses the `New Value` detection method, to
        determine when a previously unseen user performs this action.\n\n## Triage
        and response\n1. Reach out to the user or owner of the service account to
        determine if this action is legitimate.\n2. If the action is legitimate, consider
        including the IP address or ASN in a suppression list. For more information,
        see [Best practices for creating detection rules with Datadog Cloud SIEM][1].\n3.
        Otherwise, use the Cloud SIEM - IP Investigation dashboard to see if the IP
        address: `{{@network.client.ip}}` has taken other actions.\n4. If the results
        of the triage indicate that an attacker has taken the action, begin your company''s
        incident response process and investigate.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "scope:google-compute-engine", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0003-persistence", "mitre_platform:iaas", "security:attack", "source:gcp",
        "mitre_platform:cloud", "technique:T1098-account-manipulation", "scope:google-compute-engine"],
        "version": 88, "id": "def-000-8g1", "updatedAt": 1736369584211, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Attempt to create Xlarge EC2 instances
        in multiple AWS regions", "createdAt": 1684913769605, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @evt.name:(CreateInstance
        OR RunInstances) @requestParameters.instanceType:*xlarge*", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@awsRegion"], "aggregation": "cardinality", "name": "aws_ec2_xlarge_instances_multiple_regions"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "aws_ec2_xlarge_instances_multiple_regions > 7"}], "message":
        "## Goal\nDetect when there is an attempt to create Xlarge EC2 instances in
        multiple AWS regions.\n\n## Strategy\nMonitor CloudTrail and detect when an
        attempt to create Xlarge EC2 instances in multiple AWS regions occurs. An
        attacker may use Xlarge EC2 instances as a means of creating easily scalable
        resources to mine cryptocurrency. To avoid detection and resource service
        quotas, the attacker may try to create these resources in multiple regions.\n\n##
        Triage and response\n1. Determine if `{{@userIdentity.arn}}` should have carried
        out this operation.\n2. If the API calls were not made by the user:\n  * Rotate
        user credentials.\n  * Remove the newly created instances `{{@@responseElements.instancesSet.items.instanceId}}`  if
        the API call was successful.\n  * Remove any associated EC2 security groups
        or key pairs.\n  * Determine what other API calls were made by the user.\n  *
        Begin your organization''s incident response process and investigate.\n\n[1]:
        https://securitylabs.datadoghq.com/articles/tales-from-the-cloud-trenches-ecs-crypto-mining/",
        "tags": ["scope:ec2", "iaas:aws", "source:cloudtrail", "technique:T1535-unused-or-unsupported-cloud-regions",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1535-unused-or-unsupported-cloud-regions",
        "scope:ec2", "iaas:aws", "mitre_platform:cloud", "security:attack", "mitre_platform:iaas",
        "tactic:TA0005-defense-evasion", "source:cloudtrail"], "version": 87, "id":
        "def-000-la6", "updatedAt": 1736369584306, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Attempt to exfiltrate a 1Password item
        by user", "createdAt": 1687967178385, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:1password @evt.type:1password-item-usages @evt.name:export",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "item_exfiltration"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "item_exfiltration > 0"}], "message": "## Goal\nDetect possible exfiltration
        attempts from 1Password through an item export.\n\n## Strategy\nThis rule
        monitors 1Password audit logs to determine when the [export](https://developer.1password.com/docs/events-api/item-usage-actions/#export)
        item usage action occurs. This could indicate exfiltration attempts from 1Password
        by downloading or exporting items.\n\n## Triage & response\n1. Investigate
        the `{{@usr.email}}` attempting to download or export item `{{@item_uuid}}`
        from vault `{{@vault_uuid}}`.\n2. If this action was unintend by the user:\n    -
        Rotate the user''s 1Password master password\n    - Identify all the items
        that were exported and rotate the necessary authentication credentials", "tags":
        ["technique:T1555-credentials-from-password-stores", "tactic:TA0006-credential-access",
        "mitre_platform:saas", "source:1password", "scope:onepassword", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "tactic:TA0006-credential-access",
        "technique:T1555-credentials-from-password-stores", "scope:onepassword", "source:1password",
        "mitre_platform:cloud", "mitre_platform:saas"], "version": 87, "id": "def-000-ptj",
        "updatedAt": 1736369584354, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Attempt to modify a 1Password item by user", "createdAt":
        1687967174599, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:1password @evt.type:1password-item-usages @evt.name:enter-item-edit-mode",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "item_modification"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "item_modification > 0"}], "message": "## Goal\nDetect when a 1Password user
        attempts to modify an item.\n\n## Strategy\nThis rule monitors 1Password audit
        logs to determine when the the [enter-item-edit-mode](https://developer.1password.com/docs/events-api/item-usage-actions/#enter-item-edit-mode)
        item usage action occurs. This could indicate an attempt to modify an item.\n\n##
        Triage & response\n1. Investigate the `{{@usr.email}}` attempting to modify
        item `{{@item_uuid}}` within vault `{{@vault_uuid}}`.\n2. If this action was
        unintend by the user:\n    - Rotate the user''s 1Password master password\n    -
        Identify all the items that were modified and rotate the necessary authentication
        credentials", "tags": ["technique:T1555-credentials-from-password-stores",
        "tactic:TA0006-credential-access", "mitre_platform:saas", "source:1password",
        "scope:onepassword", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "tactic:TA0006-credential-access", "technique:T1555-credentials-from-password-stores",
        "scope:onepassword", "source:1password", "mitre_platform:cloud", "mitre_platform:saas"],
        "version": 87, "id": "def-000-fnn", "updatedAt": 1736369584356, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Auth0 Guardian MFA push notifications
        rejected by user", "createdAt": 1688629521730, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:auth0 @data.type:gd_auth_rejected @evt.name:multifactor_auth_rejected",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "auth0_mfa_push_rejected"}], "options":
        {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "over 25 push rejections",
        "status": "high", "notifications": [], "condition": "auth0_mfa_push_rejected
        > 25"}, {"name": "over 10 push rejections", "status": "low", "notifications":
        [], "condition": "auth0_mfa_push_rejected > 10"}, {"name": "audit", "status":
        "info", "notifications": [], "condition": "auth0_mfa_push_rejected > 0"}],
        "message": "## Goal\nDetects when multiple Auth0 Guardian multi-factor authentication
        (MFA) push notifications have been rejected by a user.\n\n## Strategy\nThis
        rule allows you to monitor Auth0 logs and detect when multiple Auth0 Guardian
        MFA push notifications have been rejected by a user. Attackers may attempt
        to bypass MFA mechanisms and gain access to accounts by generating MFA requests
        sent to users. Bombarding users with MFA push notifications may result in
        the user finally accepting the authentication request.\n\n## Triage and response\n1.
        Speak with the user `{{@usr.id}}` to understand the context of push rejections,
        if the push notifications were initiated by the user.\n2. If the user did
        not initate the push notifications:\n    * Filter for `@evt.name:multifactor_push_notification_sent`
        and the specific `@usr.id` to highlight push notifications. Compare previous
        geo-locations, user-agents and IP addresses for the user to determine if this
        is abnormal activity.\n    * If it is believed to be malicious activity then
        disable the user, invalidate any active sessions and rotate their credentials.\n    *
        Begin your organization''s incident response process and investigate.", "tags":
        ["tactic:TA0006-credential-access", "technique:T1621-multi-factor-authentication-request-generation",
        "source:auth0", "mitre_platform:identity-provider", "scope:auth0", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:identity-provider", "security:attack",
        "source:auth0", "tactic:TA0006-credential-access", "scope:auth0", "technique:T1621-multi-factor-authentication-request-generation",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-cue", "updatedAt":
        1736369584793, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Auth0 Guardian MFA push notifications rejected by user followed by successful
        login", "createdAt": 1688629521725, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:auth0 @data.type:gd_auth_rejected @evt.name:multifactor_auth_rejected",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "auth0_mfa_push_rejected"}, {"query":
        "source:auth0 @evt.name:success_login", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "auth0_successful_login"}],
        "options": {"evaluationWindow": 600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "auth0_mfa_push_rejected > 3 THEN auth0_successful_login
        > 0"}], "message": "## Goal\nDetects when multiple Auth0 Guardian multi-factor
        authentication (MFA) push notifications have been rejected by a user and then
        followed by a successful login.\n\n## Strategy\nThis rule allows you to monitor
        Auth0 logs and detect when multiple Auth0 Guardian MFA push notifications
        have been rejected by a user and then followed by a successful login. Attackers
        may attempt to bypass MFA mechanisms and gain access to accounts by generating
        MFA requests sent to users. Bombarding users with MFA push notifications may
        result in the user finally accepting the authentication request.\n\n## Triage
        and response\n1. Speak with the user `{{@usr.id}}` to understand the context
        of push rejections, if the push notifications were initiated by the user.\n2.
        If the user did not initate the push notifications:\n    * Filter for `@evt.name:multifactor_push_notification_sent`
        and the specific `@usr.id` to highlight push notifications. Compare previous
        geo-locations, user-agents and IP addresses for the user to determine if this
        is abnormal activity.\n    * If it is believed to be malicious activity then
        disable the user, invalidate any active sessions and rotate their credentials.\n    *
        Begin your organization''s incident response process and investigate.", "tags":
        ["tactic:TA0006-credential-access", "technique:T1621-multi-factor-authentication-request-generation",
        "source:auth0", "mitre_platform:identity-provider", "scope:auth0", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:identity-provider", "security:attack",
        "source:auth0", "tactic:TA0006-credential-access", "scope:auth0", "technique:T1621-multi-factor-authentication-request-generation",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-kpy", "updatedAt":
        1736369584822, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Auth0 breached password detection disabled", "createdAt": 1688629523027,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:auth0
        @data.type:sapi @data.details.request.path:/api/v2/attack-protection/breached-password-detection
        @data.details.response.body.enabled:false", "groupByFields": ["@data.client_id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "breached_password_detection_disabled"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "breached_password_detection_disabled > 0"}], "message": "## Goal\nDetect
        when Auth0 [breached password detection][1] is disabled.\n\n## Strategy\nThis
        rule allows you to monitor Auth0 logs and detect when Auth0 breached password
        detection is disabled. Breached password detection protects your applications
        from bad actors signing up or logging in with stolen credentials. Auth0 can
        notify users and block accounts that are at risk. Disabling this feature will
        degrade the security posture of your application, leaving it vulnerable to
        credential-based attacks like brute force attacks, credential stuffing, or
        bulk account creation.\n\n## Triage and response\n1. Investigate the client
        id `{{@data.client_id}}` to understand if this is an expected operation.\n2.
        Work with your tenant administrator to identify the owner of the application.\n3.
        Speak with the owner of the application to understand if this operation is
        expected and approved.\n4. If the owner of the application is unaware of this
        operation:\n    * Disable the application credentials if possible.\n    *
        Investigate any further activity from the IP `{{@network.client.ip}}` or the
        client id `{{@data.client_id}}`.\n    * Begin your organization''s incident
        response process and investigate.\n\n[1]: https://auth0.com/docs/secure/attack-protection/breached-password-detection",
        "tags": ["source:auth0", "technique:T1562-impair-defenses", "mitre_platform:identity-provider",
        "scope:auth0", "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:identity-provider", "tactic:TA0005-defense-evasion", "source:auth0",
        "security:attack", "scope:auth0", "mitre_platform:cloud", "technique:T1562-impair-defenses"],
        "version": 87, "id": "def-000-z01", "updatedAt": 1736369584824, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Auth0 brute-force protection disabled",
        "createdAt": 1688629521709, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:auth0 @data.type:sapi @data.details.request.path:/api/v2/attack-protection/brute-force-protection
        @data.details.response.body.enabled:false", "groupByFields": ["@data.client_id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "brute_force_protection_disabled"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "brute_force_protection_disabled > 0"}], "message": "## Goal\nDetect when
        Auth0 [brute-force protection][1] is disabled.\n\n## Strategy\nThis rule allows
        you to monitor Auth0 logs and detect when Auth0 brute-force protection is
        disabled. Brute-force protection safeguards against a single IP address attacking
        a single user account. For example, when a given IP address tries and fails
        multiple times to log in as the same user. Disabling this feature will degrade
        the security posture of your application, leaving it vulnerable to credential-based
        attacks like brute force attacks.\n\n## Triage and response\n1. Investigate
        the client id `{{@data.client_id}}` to understand if this is an expected operation.\n2.
        Work with your tenant administrator to identify the owner of the application.\n3.
        Speak with the owner of the application to understand if this operation is
        expected and approved.\n4. If the owner of the application is unaware of this
        operation:\n    * Disable the application credentials if possible.\n    *
        Investigate any further activity from the IP `{{@network.client.ip}}` or the
        client id `{{@data.client_id}}`.\n    * Begin your organization''s incident
        response process and investigate.\n\n[1]: https://auth0.com/docs/secure/attack-protection/brute-force-protection",
        "tags": ["source:auth0", "technique:T1562-impair-defenses", "mitre_platform:identity-provider",
        "scope:auth0", "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:identity-provider", "tactic:TA0005-defense-evasion", "source:auth0",
        "security:attack", "scope:auth0", "mitre_platform:cloud", "technique:T1562-impair-defenses"],
        "version": 87, "id": "def-000-8hj", "updatedAt": 1736369584916, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Auth0 suspicious IP throttling disabled",
        "createdAt": 1688629521712, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:auth0 @data.type:sapi @data.details.request.path:/api/v2/attack-protection/suspicious-ip-throttling
        @data.details.response.body.enabled:false", "groupByFields": ["@data.client_id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "suspicious_ip_throttling_disabled"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "suspicious_ip_throttling_disabled > 0"}], "message": "## Goal\nDetect when
        Auth0 [suspicious IP throttling][1] is disabled.\n\n## Strategy\nThis rule
        allows you to monitor Auth0 logs and detect when Auth0 suspicious IP throttling
        is disabled. Suspicious IP throttling blocks traffic from any IP address that
        rapidly attempts too many logins or signups. This helps protect your applications
        from high-velocity attacks that target multiple accounts. Disabling this feature
        will degrade the security posture of your application, leaving it vulnerable
        to credential-based attacks like brute force attacks, credential stuffing,
        or bulk account creation.\n\n## Triage and response\n1. Investigate the client
        id `{{@data.client_id}}` to understand if this is an expected operation.\n2.
        Work with your tenant administrator to identify the owner of the application.\n3.
        Speak with the owner of the application to understand if this operation is
        expected and approved.\n4. If the owner of the application is unaware of this
        operation:\n    * Disable the application credentials if possible.\n    *
        Investigate any further activity from the IP `{{@network.client.ip}}` or the
        client id `{{@data.client_id}}`.\n    * Begin your organization''s incident
        response process and investigate.\n\n[1]: https://auth0.com/docs/secure/attack-protection/suspicious-ip-throttling",
        "tags": ["source:auth0", "technique:T1562-impair-defenses", "mitre_platform:identity-provider",
        "scope:auth0", "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:identity-provider", "tactic:TA0005-defense-evasion", "source:auth0",
        "security:attack", "scope:auth0", "mitre_platform:cloud", "technique:T1562-impair-defenses"],
        "version": 87, "id": "def-000-2su", "updatedAt": 1736369584930, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Auth0 tenant invitation sent to user",
        "createdAt": 1688629521776, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:auth0 @data.type:sapi @data.details.request.path:/api/v2/tenants/invitations
        message:\"Create tenant invitations for a given client\" @data.details.request.body.roles:owner",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "tenant_invitation_owner"}, {"query":
        "source:auth0 @data.type:sapi @data.details.request.path:/api/v2/tenants/invitations
        message:\"Create tenant invitations for a given client\"", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "tenant_invitation"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 21600},
        "cases": [{"name": "Owner role assigned", "status": "high", "notifications":
        [], "condition": "tenant_invitation_owner > 0"}, {"name": "Editor, viewer
        or support-access role assigned", "status": "medium", "notifications": [],
        "condition": "tenant_invitation > 0"}], "message": "## Goal\nDetect when a
        Auth0 tenant invitation has been sent to a user.\n\n## Strategy\nThis rule
        allows you to monitor Auth0 logs and detect when a Auth0 tenant invitation
        has been sent to a user. This invitation gives the user access to Auth0\u2019s
        primary administrator interface in which you can register applications or
        APIs, connect to a user store or another identity provider, and configure
        Auth0 services. When new tenant members are added they can be assigned [roles][1]
        to moderate levels of access. \n\n## Triage and response\n1. Determine if
        user `{{@usr.email}}` should have invited `{{@data.details.response.body.email}}`
        to the Auth0 tenant.\n2. If the invitation was not created by the user:\n    *
        Rotate user credentials.\n    * Determine what other actions were carried
        out by user `{{@usr.email}}`.\n    * Remove the invited member `{{@data.details.response.body.email}}`
        from the tenant and investigate any actions taken by this user.\n3. If the
        invitation was created by the user and the assigned role includes write access:\n    *
        Confirm with user `{{@usr.email}}` that this level of access is required for
        the invited user.\n\n[1]: https://auth0.com/docs/get-started/manage-dashboard-access/feature-access-by-role#dashboard-roles\n",
        "tags": ["technique:T1098-account-manipulation", "source:auth0", "mitre_platform:identity-provider",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "technique:T1098-account-manipulation", "mitre_platform:identity-provider",
        "mitre_platform:cloud", "source:auth0", "tactic:TA0003-persistence"], "version":
        87, "id": "def-000-u21", "updatedAt": 1736369584956, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Auth0 user logged in with a breached
        password", "createdAt": 1629705618119, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:auth0 @evt.name:breached_password", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "breached_password"}], "options": {"evaluationWindow": 0,
        "detectionMethod": "threshold", "maxSignalDuration": 0, "keepAlive": 0}, "cases":
        [{"name": "", "status": "medium", "notifications": [], "condition": "breached_password
        > 0"}], "message": "## Goal\nDetect when a user logs in with a breached password.\n\n##
        Strategy\nAuth0 logs an event when a user logs in with a breached password.
        When this event is detected, Datadog generates a `MEDIUM` severity Security
        Signal.\n\nYou can see more information on how Auth0 detects breached passwords
        on their [documentation][1].\n\n## Triage and response\n1. Inspect the policy
        and user location to see if this was a login from approved location\n2. See
        if 2FA was authenticated\n3. If the user was compromised, rotate user credentials.\n\n[1]:
        https://auth0.com/docs/anomaly-detection/brute-force-protection\n", "tags":
        ["technique:T1078-valid-accounts", "source:auth0", "mitre_platform:identity-provider",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0001-initial-access", "security:attack", "mitre_platform:identity-provider",
        "mitre_platform:cloud", "technique:T1078-valid-accounts", "source:auth0"],
        "version": 87, "id": "6f0-939-666", "updatedAt": 1736369584971, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure AD Identity Protection risky user",
        "createdAt": 1681888819320, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.activedirectory @evt.name:\"Risky user\" @properties.riskState:(atRisk
        OR confirmedCompromised) @properties.riskLevel:low", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "azure_ad_risky_user_low"}, {"query": "source:azure.activedirectory
        @evt.name:\"Risky user\" @properties.riskState:(atRisk OR confirmedCompromised)
        @properties.riskLevel:medium", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "azure_ad_risky_user_medium"},
        {"query": "source:azure.activedirectory @evt.name:\"Risky user\" @properties.riskState:atRisk
        @properties.riskLevel:high", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "azure_ad_risky_user_high"},
        {"query": "source:azure.activedirectory @evt.name:\"Risky user\" @properties.riskLevel:high
        @properties.riskState:confirmedCompromised", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "azure_ad_risky_user_high_confirmcompromised"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "Confirmed compromise", "status": "high", "notifications":
        [], "condition": "azure_ad_risky_user_high_confirmcompromised > 0"}, {"name":
        "High risk", "status": "high", "notifications": [], "condition": "azure_ad_risky_user_high
        > 0"}, {"name": "Medium risk", "status": "medium", "notifications": [], "condition":
        "azure_ad_risky_user_medium > 0"}, {"name": "Low risk", "status": "low", "notifications":
        [], "condition": "azure_ad_risky_user_low > 0"}], "message": "## Goal\nDetect
        when Azure Identity Protection categorizes an Azure Active Directory user
        as risky.\n\n## Strategy\nMonitor Azure Active Directory Identity Protection
        and generate a signal when Azure identifies the user as risky. \n\n## Triage
        and response\n1. Check for other signals and logs generated by the impacted
        user `{{@usr.id}}`, and look for deviations in the following properties:\n    -
        Application\n    - Device\n    - Geolocation\n    - IP address\n    - User
        agent\n2. Reach out to the user `{{@usr.id}}` to confirm if they recognize
        the activity.    \n2. If the activity is not legitimate, block the user from
        signing in and begin your Incident Response process.\n3. If the activity is
        legitimate, dismiss the user risk in the Azure portal.", "tags": ["source:azure",
        "technique:T1078-valid-accounts", "mitre_platform:iaas", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0001-initial-access",
        "security:attack", "mitre_platform:iaas", "source:azure", "mitre_platform:cloud",
        "technique:T1078-valid-accounts"], "version": 87, "id": "def-000-86b", "updatedAt":
        1736369585857, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Azure AD Login Without MFA", "createdAt": 1629705620008, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:azure.activedirectory
        @evt.category:SignInLogs @properties.authenticationRequirement:singleFactorAuthentication
        @evt.outcome:success @properties.authenticationDetails.authenticationStepRequirement:\"Primary
        authentication\" NOT (@properties.authenticationDetails.authenticationMethod:\"Previously
        satisfied\" @properties.authenticationDetails.authenticationStepResultDetail:(\"First
        factor requirement satisfied by claim in the token\" OR \"Requirement satisfied
        by claim in the token\")) NOT message:(\"MFA requirement satisfied by claim
        in the token\" OR \"MFA requirement satisfied by strong authentication\" OR
        \"MFA requirement skipped due to remembered device\" OR \"MFA requirement
        satisfied by claim provided by external provider\") NOT @properties.authenticationDetails.authenticationMethod:\"Windows
        Hello for Business\"", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "user_login_without_mfa"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "user_login_without_mfa > 0"}], "message": "## Goal\nDetect
        when any user logs in to Azure AD without multi-factor authentication.\n\n##
        Strategy\nThis rule monitors Azure Activity logs for Active Directory logs
        and detects when any `@evt.category` has a value of  `SignInLogs`, and `@properties.authenticationRequirement`
        has a value of `singleFactorAuthentication`.\n\n## Triage and response\n1.
        Reach out to the user to determine if the login was legitimate.\n2. If the
        login was legitimate, request that the user enables 2FA.\n3. If the login
        wasn''t legitimate, rotate the credentials.\n4. Review all user accounts to
        ensure MFA is enabled.\n\n## Changelog\n* 15 November 2022 - Updated query
        to reduce false positives, updated option values.", "tags": ["security:compliance",
        "source:azure", "technique:T1078-valid-accounts", "mitre_platform:iaas", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:azure",
        "mitre_platform:iaas", "tactic:TA0001-initial-access", "security:attack",
        "technique:T1078-valid-accounts", "mitre_platform:cloud", "security:compliance"],
        "version": 87, "id": "07c-ed1-a61", "updatedAt": 1736369585829, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure AD Privileged Identity Management
        member assigned", "createdAt": 1681391765374, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:azure.activedirectory @evt.outcome:success
        @properties.targetResources.displayName:\"Global Administrator\" @evt.name:(\"Add
        eligible member to role in PIM completed (permanent)\" OR \"Add eligible member
        to role in PIM completed (timebound)\" OR \"Add member to role in PIM completed
        (permanent)\" OR \"Add member to role in PIM completed (timebound)\")", "groupByFields":
        ["@usr.id", "@properties.targetResources.userPrincipalName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "azure_assign_global_admin_to_pim_user"},
        {"query": "source:azure.activedirectory @evt.outcome:success @properties.targetResources.displayName:*Administrator*
        @evt.name:(\"Add eligible member to role in PIM completed (permanent)\" OR
        \"Add eligible member to role in PIM completed (timebound)\" OR \"Add member
        to role in PIM completed (permanent)\" OR \"Add member to role in PIM completed
        (timebound)\")", "groupByFields": ["@usr.id", "@properties.targetResources.userPrincipalName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "azure_assign_admin_role_to_pim_user"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "global administrator role", "status": "high", "notifications":
        [], "condition": "azure_assign_global_admin_to_pim_user > 0"}, {"name": "built-in
        administrator role", "status": "medium", "notifications": [], "condition":
        "azure_assign_admin_role_to_pim_user > 0"}], "message": "## Goal\nDetect whenever
        a user assigns an administrative role in Azure Privileged Identity Management
        (PIM).\n\n## Strategy\nMonitor Azure Active Directory and generate a signal
        when a user assigns an administrative role to a PIM member.\n\nThe field `@usr.id`
        is the user that actioned the change, and the field `@properties.targetResources.userPrincipalName`
        is the user being assigned the administrative privileges.\n\n## Triage and
        response\n1. Determine if `{{@usr.id}}` should have assigned the administrative
        role.\n2. If the API call was not made by the user:\n  * Rotate user credentials.\n  *
        Determine what other API calls were made by the user.\n  * Begin your organization''s
        incident response (IR) process and investigate.\n3. If the API call was made
        legitimately:\n  * Determine if `{{@usr.id}}` was authorized to make the change.\n  *
        Follow Microsoft''s [best practices][1] where possible to ensure the user
        was assigned the correct level of privileges for their function.\n\n## Changelog\n*
        19 December 2023 - Updated group by values to include `@properties.targetResources.userPrincipalName`\n\n[1]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/best-practices",
        "tags": ["source:azure", "technique:T1098-account-manipulation", "mitre_platform:iaas",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "technique:T1098-account-manipulation", "mitre_platform:iaas", "source:azure",
        "mitre_platform:cloud", "tactic:TA0003-persistence"], "version": 87, "id":
        "def-000-rev", "updatedAt": 1736369585844, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure AD brute force login", "createdAt":
        1629705615496, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure
        @properties.status.errorCode:(50126 OR 50053 OR 53003 OR 50135 OR 50055)",
        "groupByFields": ["@usr.id", "@properties.appId"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "failed_login"},
        {"query": "source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:success
        -message:(\"MFA requirement satisfied by claim in the token\" OR \"MFA requirement
        satisfied by strong authentication\" OR \"MFA requirement skipped due to remembered
        device\" OR \"MFA requirement satisfied by claim provided by external provider\"
        OR \"MFA completed in Azure AD\")", "groupByFields": ["@usr.id", "@properties.appId"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "successful_login"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "Successful login", "status": "low", "notifications": [], "condition": "failed_login
        > 4 && successful_login > 0"}, {"name": "Unsuccessful", "status": "info",
        "notifications": [], "condition": "failed_login > 4"}], "message": "## Goal\nDetect
        when a user is a victim of an Account Take Over (ATO) by a brute force attack.\n\n##
        Strategy\nMonitor Azure Active Directory Sign-in logs and detect when any
        `@evt.category` is equal to  `SignInLogs`, and `@evt.outcome` is equal to
        `failure`.\n\n## Triage and response\n1. Inspect the log and determine if
        this was a valid login attempt.\n2. If the user was compromised, rotate user
        credentials.\n\n## Changelog\n* 26 October 2022 - Updated query.\n", "tags":
        ["source:azure", "tactic:TA0006-credential-access", "technique:T1110-brute-force",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:iaas", "technique:T1110-brute-force", "tactic:TA0006-credential-access",
        "source:azure", "mitre_platform:cloud"], "version": 87, "id": "rrb-osy-cuu",
        "updatedAt": 1736369585896, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Azure AD member assigned Global Administrator role",
        "createdAt": 1658502043161, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.activedirectory @properties.targetResources.modifiedProperties.newValue:\"\\\"Global
        Administrator\\\"\" @evt.category:AuditLogs @evt.name:\"Add member to role\"
        @evt.outcome:success", "groupByFields": ["@usr.id", "@properties.targetResources.userPrincipalName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "member_assigned_global_administrator_role"}, {"query": "source:azure.activedirectory
        @properties.targetResources.modifiedProperties.newValue:\"\\\"Global Administrator\\\"\"
        @evt.category:AuditLogs @evt.name:\"Add member to role\" @evt.outcome:success",
        "groupByFields": ["@properties.targetResources.displayName", "@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "member_assigned_global_administrator_role_type"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "member_assigned_global_administrator_role > 0 || member_assigned_global_administrator_role_type
        > 0"}], "message": "## Goal\nDetect an Azure Active Directory (Azure AD) member
        being added to the [Global Administrator][1] role.\n\n## Strategy\nMonitor
        Azure AD Audit logs for the following operations:\n\n- `@evt.name:\"Add member
        to role\"` \n- `@properties.targetResources.modifiedProperties.newValue:\"\\\"Global
        Administrator\\\"\"`\n\nThe Global Administrator role can manage all aspects
        of Azure AD and Microsoft services that use Azure AD identities. An adversary
        can add identities as Global Administrators in order to maintain access to
        Azure AD.\n\nThe field `@usr.id` is the identity that actioned the change,
        and the fields `@properties.targetResources.userPrincipalName` or `@properties.targetResources.displaylName`
        is the identity being assigned the administrative privileges.\n\n## Triage
        and response\n1. Determine if `{{@usr.id}}` should have made a `{{@evt.name}}`
        API call.\n2. If the API call was not made by the user:\n  * Rotate user credentials.\n  *
        Determine what other API calls were made by the user.\n  * Begin your organization''s
        incident response (IR) process and investigate.\n3. If the API call was made
        legitimately by the user:\n  * Determine if `{{@usr.id}}` was authorized to
        make the change.\n  * Follow Microsoft''s [best practices][2] where possible
        to ensure the user was assigned the correct level of privileges for their
        function.\n\n## Changelog\n* 19 December 2023 - Updated group by values to
        include `@properties.targetResources.userPrincipalName`\n* 19 September 2024
        - Updated with additional query to capture service principals being assigned
        administrative roles.\n\n[1]: https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference#global-administrator\n[2]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/best-practices",
        "tags": ["source:azure", "technique:T1098-account-manipulation", "scope:azure",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0003-persistence", "source:azure", "mitre_platform:iaas", "security:attack",
        "scope:azure", "mitre_platform:cloud", "technique:T1098-account-manipulation"],
        "version": 87, "id": "psm-gpc-pgy", "updatedAt": 1736369585900, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure AD member assigned built-in Administrator
        role", "createdAt": 1658502043196, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:azure.activedirectory @properties.targetResources.modifiedProperties.newValue:*Administrator*
        @evt.category:AuditLogs @evt.name:\"Add member to role\" -@properties.targetResources.modifiedProperties.newValue:\"\\\"Global
        Administrator\\\"\" @evt.outcome:success", "groupByFields": ["@usr.id", "@properties.targetResources.userPrincipalName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "member_assigned_built_in_administrator_role"}, {"query": "source:azure.activedirectory
        @properties.targetResources.modifiedProperties.newValue:*Administrator* @evt.category:AuditLogs
        @evt.name:\"Add member to role\" -@properties.targetResources.modifiedProperties.newValue:\"\\\"Global
        Administrator\\\"\" @evt.outcome:success", "groupByFields": ["@usr.id", "@properties.targetResources.displayName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "member_assigned_built_in_administrator_role_type"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "member_assigned_built_in_administrator_role > 0 || member_assigned_built_in_administrator_role_type
        > 0"}], "message": "## Goal\nDetect an Azure Active Directory (Azure AD) member
        being added to a [built-in Administrative role][1].\n\n## Strategy\nMonitor
        Azure AD Audit logs for the following operations:\n\n- `@evt.name:\"Add member
        to role\"` \n- `@properties.targetResources.modifiedProperties.newValue:*Administrator*`\n\nAzure
        AD uses roles to assign privileges to identities. There are over 80 roles
        available, the list below details some of the highest privileged roles that
        adversaries could target:\n\n- [Application Administrator][2]\n- [Cloud Application
        Administrator][3]\n- [Exchange Administrator][4]\n- [Privileged Role Administrator][5]\n-
        [User Administrator][6]\n- [Sharepoint Administrator][7]\n- [Hybrid Identity
        Administrator][8]\n\nThis [whitepaper][9] from Mandiant describes the abuse
        of Azure AD privileged roles.\n\nThe field `@usr.id` is the identity that
        actioned the change, and the fields `@properties.targetResources.userPrincipalName`
        or `@properties.targetResources.displaylName` is the identity being assigned
        the administrative privileges.\n\n## Triage and response\n1. Determine if
        `{{@usr.id}}` should have made a `{{@evt.name}}` API call.\n2. If the API
        call was not made by the user:\n  * Rotate user credentials.\n  * Determine
        what other API calls were made by the user.\n  * Begin your organization''s
        incident response (IR) process and investigate.\n3. If the API call was made
        legitimately by the user:\n  * Determine if `{{@usr.id}}` was authorized to
        make the change.\n  * Follow Microsoft''s [best practices][10] where possible
        to ensure the user was assigned the correct level of privileges for their
        function.\n\n## Changelog\n* 19 December 2023 - Updated group by values to
        include `@properties.targetResources.userPrincipalName`\n* 19 September 2024
        - Updated with additional query to capture service principals being assigned
        administrative roles.\n\n\n[1]: https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference\n[2]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference#application-administrator\n[3]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference#cloud-application-administrator\n[4]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference#exchange-administrator\n[5]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference#privileged-role-administrator\n[6]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference#user-administrator\n[7]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference#sharepoint-administrator\n[8]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/permissions-reference#hybrid-identity-administrator\n[9]:
        https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/wp-m-unc2452-2021-000343-01.pdf\n[10]:
        https://docs.microsoft.com/en-us/azure/active-directory/roles/best-practices",
        "tags": ["source:azure", "technique:T1098-account-manipulation", "scope:azure",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0003-persistence", "source:azure", "mitre_platform:iaas", "security:attack",
        "scope:azure", "mitre_platform:cloud", "technique:T1098-account-manipulation"],
        "version": 87, "id": "sqa-ez2-ojw", "updatedAt": 1736369585934, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure AD possible MFA fatigue attack",
        "createdAt": 1695366697894, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.activedirectory @properties.status.errorCode:500121
        @evt.category:SignInLogs @properties.status.additionalDetails:(\"MFA denied;
        user declined the authentication\" OR *fraud* OR \"MFA denied; user did not
        respond to mobile app notification\") @properties.authenticationRequirement:multiFactorAuthentication
        @evt.outcome:failure", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "azuread_mfa_push_fatigue"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "10 failed push attempts in
        5 minutes", "status": "medium", "notifications": [], "condition": "azuread_mfa_push_fatigue
        > 10"}, {"name": "5 failed push attempts in 5 minutes", "status": "low", "notifications":
        [], "condition": "azuread_mfa_push_fatigue > 5"}], "message": "## Goal\nDetects
        when multiple Azure AD multi-factor authentication (MFA) push notifications
        have been rejected or not responded to by a user.\n\n## Strategy\nThis rule
        allows you to monitor Azure AD sign-in logs and detect when multiple MFA push
        notifications have been rejected or not responded to by a user. Attackers
        may attempt to bypass MFA mechanisms and gain access to accounts by generating
        MFA requests sent to users. Bombarding users with MFA push notifications may
        result in the user finally accepting the authentication request.\n\n## Triage
        and response\n1. Speak with the user `{{@usr.id}}` to understand the context
        of push rejections, and whether or not the push notifications were initiated
        by the user.\n2. If the user did not initate the push notifications:\n    *
        Filter for the specific `@usr.id` and `@properties.status.additionalDetails:(\"MFA
        denied; user declined the authentication\\\" OR \"MFA denied; user did not
        respond to mobile app notification\")` to highlight failed push notifications.
        Compare previous geo-locations, user-agents, and IP addresses for the user
        to determine if this is abnormal activity.\n    * If it is believed to be
        malicious activity, then disable the user, invalidate any active sessions,
        and rotate their credentials.\n    * Begin your organization''s incident response
        process and investigate.", "tags": ["source:azure", "scope:azure-active-directory",
        "tactic:TA0006-credential-access", "technique:T1621-multi-factor-authentication-request-generation",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:azure",
        "mitre_platform:iaas", "security:attack", "tactic:TA0006-credential-access",
        "scope:azure-active-directory", "technique:T1621-multi-factor-authentication-request-generation",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-p7y", "updatedAt":
        1736369585947, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Azure AD possible MFA fatigue attack followed by successful login", "createdAt":
        1695366697855, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:azure.activedirectory @properties.status.errorCode:500121 @evt.category:SignInLogs
        @properties.status.additionalDetails:(\"MFA denied; user declined the authentication\"
        OR *fraud* OR \"MFA denied; user did not respond to mobile app notification\")
        @properties.authenticationRequirement:multiFactorAuthentication @evt.outcome:failure",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "azuread_mfa_push_fatigue"}, {"query":
        "source:azure.activedirectory @evt.category:SignInLogs @properties.status.additionalDetails:\"MFA
        successfully completed\" @properties.authenticationRequirement:multiFactorAuthentication",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "azuread_mfa_completed"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "azuread_mfa_push_fatigue > 5 THEN azuread_mfa_completed
        > 0"}], "message": "## Goal\nDetects when multiple Azure AD multi-factor authentication
        (MFA) push notifications have been rejected or not responded to by a user,
        followed by a successful login.\n\n## Strategy\nThis rule allows you to monitor
        Azure AD sign-in logs and detect when multiple MFA push notifications have
        been rejected or not responded to by a user, followed by a successful login.
        Attackers may attempt to bypass MFA mechanisms and gain access to accounts
        by generating MFA requests sent to users. Bombarding users with MFA push notifications
        may result in the user finally accepting the authentication request.\n\n##
        Triage and response\n1. Speak with the user `{{@usr.id}}` to understand the
        context of push rejections, and whether or not the push notifications were
        initiated by the user.\n2. If the user did not initate the push notifications:\n    *
        Filter for the specific `@usr.id` and `@properties.status.additionalDetails:(\"MFA
        denied; user declined the authentication\\\" OR \"MFA denied; user did not
        respond to mobile app notification\")` to highlight failed push notifications.
        Compare previous geo-locations, user-agents, and IP addresses for the user
        to determine if this is abnormal activity.\n    * If it is believed to be
        malicious activity then disable the user, invalidate any active sessions,
        and rotate their credentials.\n    * Begin your organization''s incident response
        process and investigate.", "tags": ["source:azure", "scope:azure-active-directory",
        "tactic:TA0006-credential-access", "technique:T1621-multi-factor-authentication-request-generation",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:azure",
        "mitre_platform:iaas", "security:attack", "tactic:TA0006-credential-access",
        "scope:azure-active-directory", "technique:T1621-multi-factor-authentication-request-generation",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-0i4", "updatedAt":
        1736369586000, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Azure AD sign in from AADinternals default user agent", "createdAt": 1695302036568,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(azure.activedirectory
        OR microsoft-365) @http.useragent:AADInternals", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "aadinternals_default_useragent"}], "options": {"evaluationWindow":
        600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "aadinternals_default_useragent > 0"}], "message": "## Goal\nDetect when the
        [AADInternals][1] default user agent is seen in Azure AD sign-in logs.\n\n##
        Strategy\nThis rule monitors Azure AD sign-in logs for the default user agent
        `AADInternals` (this default user agent can be altered). AADInternals toolkit
        is a PowerShell module containing tools for administering and exploiting Azure
        AD and Office 365. It is listed in MITRE ATT&CK with id [S0677][2] and has
        been associated with a number of threat groups.\n\n## Triage and response\n1.
        Determine if your organization has authorized the use of the AADInternals
        toolkit.\n2. If the results of triage indicate that this tool is not used
        by your organization, begin your company''s incident response process and
        an investigation.\n    * If appropriate, disable the affected identity and
        revoke any sign-in sessions.\n    * Investigate any actions taken by the identity
        `{{@usr.id}}` during the identified time frame.\n\n[1]: https://aadinternals.com/aadinternals/#introduction\n[2]:
        https://attack.mitre.org/software/S0677/", "tags": ["technique:T1059-command-and-scripting-interpreter",
        "source:azure", "scope:azure-active-directory", "tactic:TA0002-execution",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:azure",
        "mitre_platform:iaas", "security:attack", "technique:T1059-command-and-scripting-interpreter",
        "scope:azure-active-directory", "mitre_platform:cloud", "tactic:TA0002-execution"],
        "version": 88, "id": "def-000-rjy", "updatedAt": 1736369586003, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure AD sign in from AzureHound default
        user agent", "createdAt": 1695366697915, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:(azure.activedirectory OR microsoft-365) @http.useragent:*azurehound*",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "azurehound_default_useragent"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "azurehound_default_useragent > 0"}], "message": "## Goal\nDetect
        when the [AzureHound][1] default user agent is seen in Azure AD sign-in logs.\n\n##
        Strategy\nThis rule monitors Azure AD sign-in logs for the default user agent
        `AzureHound` (this default user agent can be altered). AzureHound is a data
        collector for Bloodhound. Bloodhound is an Active Directory (AD) reconnaissance
        tool that can reveal hidden relationships and identify attack paths within
        an AD environment. It is listed in MITRE ATT&CK with id [S0521][2] and has
        been associated with a number of threat groups.\n\n## Triage and response\n1.
        Determine if your organization has authorized the use of Bloodhound.\n2. If
        the results of triage indicate that this tool is not used by your organization,
        begin your company''s incident response process and an investigation.\n    *
        If appropriate, disable the affected identity and revoke any sign-in sessions.\n    *
        Investigate any actions taken by the identity `{{@usr.id}}` during the identified
        time frame.\n\n[1]: https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html\n[2]:
        https://attack.mitre.org/software/S0521/", "tags": ["source:azure", "scope:azure-active-directory",
        "technique:T1087-account-discovery", "technique:T1069-permission-groups-discovery",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "technique:T1087-account-discovery", "scope:azure-active-directory",
        "tactic:TA0007-discovery", "technique:T1069-permission-groups-discovery",
        "mitre_platform:cloud", "security:attack", "source:azure"], "version": 88,
        "id": "def-000-85j", "updatedAt": 1736369586060, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure Active Directory risky sign-in",
        "createdAt": 1629716591229, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.activedirectory @evt.name:\"Sign-in activity\" @evt.category:SignInLogs
        @evt.outcome:success @properties.riskState:(atRisk OR confirmedCompromised)
        @properties.riskLevelDuringSignIn:high", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "risk_level_during_signin_high"},
        {"query": "source:azure.activedirectory @evt.name:\"Sign-in activity\" @evt.category:SignInLogs
        @evt.outcome:success @properties.riskState:(atRisk OR confirmedCompromised)
        @properties.riskLevelAggregated:high", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "risk_level_aggregated_high"},
        {"query": "source:azure.activedirectory @evt.name:\"Sign-in activity\" @evt.category:SignInLogs
        @evt.outcome:success @properties.riskState:(atRisk OR confirmedCompromised)
        @properties.riskLevelDuringSignIn:medium", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "risk_level_medium_during_signin"},
        {"query": "source:azure.activedirectory @evt.name:\"Sign-in activity\" @evt.category:SignInLogs
        @evt.outcome:success @properties.riskState:(atRisk OR confirmedCompromised)
        @properties.riskLevelAggregated:medium", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "risk_level_medium_aggregated"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "High Risk Aggregated", "status":
        "high", "notifications": [], "condition": "risk_level_aggregated_high > 0"},
        {"name": "High Risk During Sign-In", "status": "high", "notifications": [],
        "condition": "risk_level_during_signin_high > 0"}, {"name": "Medium Risk Aggregated",
        "status": "medium", "notifications": [], "condition": "risk_level_medium_aggregated
        > 0"}, {"name": "Medium Risk Sign-In", "status": "medium", "notifications":
        [], "condition": "risk_level_medium_during_signin > 0"}], "message": "## Goal\nDetect
        whenever Azure Identity Protection categorizes an Azure Active Directory login
        as risky.\n\n## Strategy\nMonitor Azure Active Directory sign in activity
        (`@evt.name:\"Sign-in activity\"`) and generate a signal when Azure identifies
        the user as risky or compromised (`@properties.riskState:\"atRisk\" OR \"confirmedCompromised\"`).
        \n\n## Triage and response\n1. Analyze the location (`@network.client.geoip.subdivision.name`)
        of `{{@usr.id}}` to determine if they''re logging into from their usual location.
        \n2. If log in activity is not legitimate, disable `{{@usr.id}}` account.\n3.
        Investigate any devices owned by `{{@usr.id}}`.\n\n## Changelog\n14 June 2022
        - Updated rule query.", "tags": ["source:azure", "scope:azure-active-directory",
        "technique:T1078-valid-accounts", "mitre_platform:iaas", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:azure",
        "mitre_platform:iaas", "tactic:TA0001-initial-access", "security:attack",
        "technique:T1078-valid-accounts", "scope:azure-active-directory", "mitre_platform:cloud"],
        "version": 87, "id": "lb6-1tt-tv9", "updatedAt": 1736369586448, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure Bastion shareable link created",
        "createdAt": 1728889487843, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.network service:azure @evt.name:(\"MICROSOFT.NETWORK/BASTIONHOSTS/GETSHAREABLELINKS/ACTION\"
        OR \"MICROSOFT.NETWORK/BASTIONHOSTS/CREATESHAREABLELINKS/ACTION\") @evt.outcome:Success",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "shareable_link_created"}], "options":
        {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "shareable_link_created", "status":
        "medium", "notifications": [], "condition": "shareable_link_created >= 1"}],
        "message": "## Goal\n\nDetect when an Azure Bastion public link is created.
        Azure Bastion public links can allow remote access to Azure VMs from untrusted
        networks. Public links generated for an Azure Bastion can allow VM network
        access to anyone with the generated URL.\n\n## Strategy\n\nMonitor Azure Monitor
        activity logs for `MICROSOFT.NETWORK/BASTIONHOSTS/GETSHAREABLELINKS/ACTION`
        or `MICROSOFT.NETWORK/BASTIONHOSTS/CREATESHAREABLELINKS/ACTION` where `@evt.outcome`
        is `Success`.\n\n## Triage and response\n\n1. Verify the legitimacy of the
        public link creation:\n\n   - Review the Azure activity logs to confirm if
        the user or process responsible for generating the Bastion public link had
        a valid business reason.\n   - Cross-check with stakeholders or the requesting
        team to validate whether the action aligns with any approved workflows or
        maintenance activities.\n\n2. Investigate suspicious or unexpected link creation:\n\n   -
        Review related logs to identify the IP address and user identity responsible
        for generating the public link. Look for unusual IPs (for example, foreign
        or untrusted locations) or unexpected user accounts.\n   - Examine the timeline
        of activities around the event. This includes checking for failed login attempts,
        access requests from unknown sources, or other suspicious behavior before
        and after the link creation.\n\n3. Mitigate unauthorized public link creation:\n\n   -
        If unauthorized, immediately revoke the public link and disable any further
        access through it.\n   - Consider disabling shareable links for Azure Bastion
        to prevent future unauthorized public link creations.\n", "tags": ["source:azure",
        "technique:T1098-account-manipulation", "mitre_platform:iaas", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "technique:T1098-account-manipulation", "mitre_platform:iaas", "source:azure",
        "mitre_platform:cloud", "tactic:TA0003-persistence"], "version": 19, "id":
        "def-009-aa7", "updatedAt": 1736369586565, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure Datadog Log Forwarder Deleted",
        "createdAt": 1634570138512, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.web @evt.name:\"MICROSOFT.WEB/SITES/DELETE\" @resourceId:(*DATADOG*
        AND *LOG*) @evt.outcome:Success", "groupByFields": ["@resourceId"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when the Datadog Azure
        function is deleted which will prevent Azure logs from being sent to Datadog.\n\n##
        Strategy\nMonitor Azure logs where `@evt.name` is `\"MICROSOFT.WEB/SITES/DELETE\"`,
        `@evt.outcome` is `Success`, and the `@resourceID` contains `DATADOG` and
        `LOG`. This rule does not work if the the Azure resource group or Azure function
        does not contain `DATADOG` or `LOG`.\n\n## Triage and response\n1. Verify
        the Azure function (`@resourceId`) is responsible for forwarding logs to Datadog.\n2.
        Determine if there is a legitimate reason for deleting the Azure function.\n3.
        If activity is not expected, investigate activity from the service principal
        (`@identity.authorization.evidence`) or user (`{{@usr.id}}`).", "tags": ["source:azure",
        "scope:azure", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:azure",
        "mitre_platform:iaas", "tactic:TA0005-defense-evasion", "security:attack",
        "scope:azure", "mitre_platform:cloud", "technique:T1562-impair-defenses"],
        "version": 87, "id": "qh4-l0f-cy9", "updatedAt": 1736369586725, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure Firewall Threat Intelligence Alert",
        "createdAt": 1629705613875, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.network @evt.name:AzureFirewallThreatIntelLog", "groupByFields":
        ["@network.client.ip"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "azure_firewall_threat_intel_alert"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "azure_firewall_threat_intel_alert > 0"}], "message": "##
        Goal\nDetect when an Azure firewall threat intelligence alert is received.\n\n##
        Strategy\nMonitor Azure Network Diagnostic logs and detect when `@evt.name`
        is equal to `AzureFirewallThreatIntelLog`.\n\n## Triage and response\n1. Inspect
        the threat intelligence log.\n2. Investigate the activity from this IP address.\n",
        "tags": ["source:azure", "security:threat-intel", "mitre_platform:iaas", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "security:threat-intel", "mitre_platform:cloud", "source:azure"],
        "version": 87, "id": "6ir-aj0-eec", "updatedAt": 1736369586763, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure Frontdoor WAF Blocked a Request",
        "createdAt": 1629705616508, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.network @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\"
        @properties.action:Block", "groupByFields": ["@properties.clientIP"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "waf_blocked_a_request"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "waf_blocked_a_request > 0"}], "message": "## Goal\nDetect
        when an Azure Frontdoor Web Application Firewall (WAF) blocks a request from
        an IP address.\n\n## Strategy\nThis rule monitors Azure Activity logs for
        Frontdoor Web Application Firewall logs and detects when the `@evt.name` has
        a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write`
        and `@properties.action` has a value of `Block`.\n\n## Triage and response\n1.
        Inspect whether this request should have been blocked or not.\n2. Navigate
        to the IP dashboard and inspect other requests this IP address has made.\n",
        "tags": ["source:azure", "technique:T1190-exploit-public-facing-application",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0001-initial-access", "security:attack",
        "mitre_platform:iaas", "source:azure", "technique:T1190-exploit-public-facing-application",
        "mitre_platform:cloud"], "version": 87, "id": "4af-ed1-fc0", "updatedAt":
        1736369586766, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Azure Frontdoor WAF Logged a Request", "createdAt": 1629705619108, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:azure.network
        @evt.name:\"Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write\"
        @properties.action:Log", "groupByFields": ["@properties.clientIP"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "waf_logged_a_request"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "waf_logged_a_request > 0"}], "message": "## Goal\nDetect
        when an Azure Frontdoor Web Application Firewall (WAF) logs a request from
        an IP address.\n\n## Strategy\nThis rule monitors Azure Activity logs for
        Frontdoor Web Application Firewall logs and detects when the `@evt.name` has
        a value of  `Microsoft.Network/FrontDoor/WebApplicationFirewallLog/Write`
        and `@properties.action` has a value of `Log`.\n\n## Triage and response\n1.
        Inspect whether this request should have been blocked or not.\n2. Navigate
        to the IP dashboard and inspect other requests this IP address has made.\n",
        "tags": ["source:azure", "technique:T1190-exploit-public-facing-application",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0001-initial-access", "security:attack",
        "mitre_platform:iaas", "source:azure", "technique:T1190-exploit-public-facing-application",
        "mitre_platform:cloud"], "version": 87, "id": "cb9-5d2-43b", "updatedAt":
        1736369586870, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Azure Login Explicitly Denied MFA", "createdAt": 1629705616468, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:azure.activedirectory
        @evt.category:SignInLogs @properties.authenticationRequirement:multiFactorAuthentication
        @evt.outcome:failure", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@usr.email"], "aggregation": "cardinality", "name":
        "failed_login_mfa_denied_w_multiple_user_accounts"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "Greater than 10 unique users", "status": "medium",
        "notifications": [], "condition": "failed_login_mfa_denied_w_multiple_user_accounts
        > 10"}, {"name": "Greater than 3 unique user", "status": "low", "notifications":
        [], "condition": "failed_login_mfa_denied_w_multiple_user_accounts > 3"}],
        "message": "## Goal\nDetect and identify the network IP address when multiple
        user accounts failed to complete the MFA process.\n\n## Strategy\nMonitor
        Azure Active Directory Sign-in logs and detect when any `@evt.category` is
        equal to `SignInLogs`, `@properties.authenticationRequirement` is equal to
        `multiFactorAuthentication` and `@evt.outcome` is equal to `failure`.\n\n##
        Triage and response \n1. Inspect the log and determine if this was a valid
        login attempt.\n2. If the user was compromised, rotate user credentials.\n",
        "tags": ["source:azure", "tactic:TA0006-credential-access", "technique:T1110-brute-force",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:iaas", "technique:T1110-brute-force", "tactic:TA0006-credential-access",
        "source:azure", "mitre_platform:cloud"], "version": 87, "id": "w6m-rmy-hra",
        "updatedAt": 1736369587161, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Azure Network Security Group Open to the World", "createdAt":
        1629705616660, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:azure.network @evt.name:\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\"
        @properties.securityRules.properties.direction:Inbound @properties.securityRules.properties.access:Allow
        @properties.securityRules.properties.sourceAddressPrefix:(\"0.0.0.0/0\" OR
        \"*\")", "groupByFields": ["@resourceId"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "security_group_open_to_world"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "", "status": "high", "notifications": [], "condition": "security_group_open_to_world
        > 0"}], "message": "## Goal\nDetect when an Azure network security group allows
        inbound traffic from all IP Addresses.\n\n## Strategy\nThis rule monitors
        Azure Activity logs for network changes and detects when the `@evt.name` has
        a value of  `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`, `@properties.securityRules.properties.direction`
        has a value of `Inbound`, `@properties.securityRules.properties.access` has
        a value of `Allow`, and `@properties.securityRules.properties.sourceAddressPrefix`
        has a value of either `0.0.0.0/0` OR `*`.\n\n## Triage and response\n1. Inspect
        which Virtual Machines are associated with this security group.\n2. Determine
        whether this security group and the VMs should permit inbound traffic from
        all IP addresses.\n", "tags": ["security:compliance", "source:azure", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:azure", "mitre_platform:iaas", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud", "technique:T1562-impair-defenses",
        "security:compliance"], "version": 87, "id": "34e-bda-42c", "updatedAt": 1736369587168,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure Network Security Groups or Rules
        Created, Modified, or Deleted", "createdAt": 1629705615977, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:azure.network @evt.name:(\"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE\"
        OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE\" OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE\"
        OR \"MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE\") @evt.outcome:Success",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when an Azure network security group
        or an Azure network security rule has been created, modified, or deleted.\n\n##
        Strategy\nMonitor Azure activity logs and detect when the `@evt.name` is equal
        to any one of the following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/WRITE`\n-
        `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/DELETE`\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE`
        \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand
        `@evt.outcome` is equal to `Success`.\n\n## Triage and response\nInspect the
        security group or security rule and determine if it exposes any Azure resources
        that should not be exposed.\n", "tags": ["security:compliance", "source:azure",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["source:azure", "mitre_platform:iaas",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud",
        "technique:T1562-impair-defenses", "security:compliance"], "version": 87,
        "id": "rzw-eru-lnp", "updatedAt": 1736369587231, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure New Owner added to Azure Active
        Directory application", "createdAt": 1630591536259, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:azure.activedirectory @evt.name:\"Add
        owner to application\" @evt.outcome:success  @usr.name:* -@identity:*", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "new_owner"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "medium", "notifications": [], "condition": "new_owner > 0"}],
        "message": "## Goal\nDetect when a user is added as a new owner for an Active
        Directory application which could be used as a persistence mechanism. \n\n##
        Strategy\nMonitor Azure Active Directory logs for `@evt.name: \"Add owner
        to application\"` has an `@evt.outcome` of `success`. \n\n## Triage and response\n1.
        Review evidence of anomalous activity for the user being added as an owner
        (`@properties.targetResources`) for the Active Directory application.\n2.
        Determine if there is a legitimate reason for the user being added to the
        application.", "tags": ["scope:azure.activedirectory", "source:azure", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0003-persistence", "source:azure", "mitre_platform:iaas", "scope:azure.activedirectory",
        "security:attack", "mitre_platform:cloud", "technique:T1098-account-manipulation"],
        "version": 88, "id": "ofj-lse-l1a", "updatedAt": 1736369587275, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure New Service Principal created",
        "createdAt": 1630591536485, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.activedirectory @evt.name:\"Add service principal\"
        @evt.outcome:success @usr.name:*", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "new_sp"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "new_sp > 0"}], "message": "## Goal\n\nDetect when a new
        service principal is created in Azure, which applies to a persistence mechanism.\n\n##
        Strategy\n\nMonitor Azure Active Directory logs where `@evt.name` is `\"Add
        service principal\"` and `@evt.outcome` of `Success`. \n\n## Triage and response\n\n1.
        Inspect the new service principal in `@properties.targetResources`.\n2. Verify
        with the user (`{{$usr.name}}`) to determine if the service principal is legitimate.
        ", "tags": ["source:azure", "technique:T1098-account-manipulation", "scope:azure",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0003-persistence", "source:azure", "mitre_platform:iaas", "security:attack",
        "scope:azure", "mitre_platform:cloud", "technique:T1098-account-manipulation"],
        "version": 88, "id": "848-4cc-725", "updatedAt": 1736369587286, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure Policy Assignment Created", "createdAt":
        1629705612675, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:azure @evt.name:\"MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE\"
        @evt.outcome:Success", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when an Azure policy
        assignment has been created.\n\n## Strategy\nMonitor Azure activity logs and
        detect when the `@evt.name` is equal to `MICROSOFT.AUTHORIZATION/POLICYASSIGNMENTS/WRITE`
        and `@evt.outcome` is equal to `Success`.\n\n## Triage and response\nInspect
        the policy assignment and determine if an unsolicited change was made on any
        Azure resources.\n", "tags": ["security:compliance", "source:azure", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "mitre_platform:cloud", "tactic:TA0003-persistence"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "technique:T1098-account-manipulation", "security:compliance",
        "source:azure", "mitre_platform:cloud", "tactic:TA0003-persistence"], "version":
        87, "id": "f72-zu8-tjj", "updatedAt": 1736369587378, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure SQL Server Firewall Rules Created
        or Modified", "createdAt": 1629705612912, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:azure.sql @evt.name:\"MICROSOFT.SQL/SERVERS/FIREWALLRULES/WRITE\"
        @evt.outcome:Success", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when an Azure network
        security rule has been created, modified, or deleted.\n\n## Strategy\nMonitor
        Azure activity logs and detect when the `@evt.name` is equal to any of the
        following names:\n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/WRITE`
        \n- `MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/SECURITYRULES/DELETE`\n\nand
        `@evt.outcome` is equal to `Success`.\n\n## Triage and response\nInspect the
        security rule and determine if it exposes any Azure resources that should
        not be made public.\n", "tags": ["security:compliance", "source:azure", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:azure", "mitre_platform:iaas", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud", "technique:T1562-impair-defenses",
        "security:compliance"], "version": 87, "id": "aoc-jdx-q3d", "updatedAt": 1736369587434,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure Service Principal was assigned
        a role", "createdAt": 1661892218456, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:azure.authorization @evt.name:\"MICROSOFT.AUTHORIZATION/ROLEASSIGNMENTS/WRITE\"  @properties.requestbody:*ServicePrincipal*",
        "groupByFields": ["@usr.id", "@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "role_assignment"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "role_assignment > 0"}], "message": "## Goal\nDetect an Azure
        service principal being assigned an Azure role.\n\n## Strategy\nMonitor Azure
        Activity logs for the following operations:\n\n- `@evt.name:\"MICROSOFT.AUTHORIZATION/ROLEASSIGNMENTS/WRITE\"`\n-
        `@properties.requestbody:*ServicePrincipal*`\n\n## Triage and response\n1.
        Determine if this activity is legitimate by investigating the: \n  * Source
        IP of this activity: `{{@network.client.ip}}`\n  * The user who made this
        request: `@identity.claims.name`\n  * The role that was assigned to the application
        or service principal.\n2. If this user should not be assigning this Azure
        role and if the service principal should not be assigned this role:\n  * Revoke
        access of compromised credentials.\n  * Remove unauthorized app registration
        and/or service principal.\n  * Investigate other activities performed by the
        source IP `{{@network.client.ip}}` in the IP Investigation Dashboard.\n  *
        Investigate other activities performed by the user `{{@usr.id}}` in the User
        Investigation Dashboard.", "tags": ["tactic:TA0004-privilege-escalation",
        "source:azure", "scope:azure-active-directory", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:azure",
        "mitre_platform:iaas", "security:attack", "tactic:TA0004-privilege-escalation",
        "scope:azure-active-directory", "mitre_platform:cloud", "technique:T1098-account-manipulation"],
        "version": 87, "id": "21q-lj7-jl3", "updatedAt": 1736369587459, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure administrative unit created",
        "createdAt": 1724362970113, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "service:azure source:azure.activedirectory @properties.category:AdministrativeUnit
        @evt.name:\"Add administrative unit\" !@properties.targetResources.modifiedProperties.displayName:IsMemberManagementRestricted
        ", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "admin_unit_created"}], "options": {"evaluationWindow":
        900, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "admin_unit_created", "status": "low", "notifications":
        [], "condition": "admin_unit_created >= 1"}], "message": "## Goal\n\nDetects
        the creation of Entra ID (Azure AD) Administrative Units (AUs). The use of
        this type of this policy may indicate suspicious activity if an environment
        is not utilizing AUs.\n\n## Strategy\n\nMonitor Azure Active Directory logs
        for `@properties.category:AdministrativeUnit` and `@evt.name: \"Add administrative
        unit\"` where the event is not a restricted administrative unit.\n\n## Triage
        and response\n\n1. Review if administrative units are used by the organization.\n2.
        Review evidence of anomalous activity for the user creating an administrative
        unit.\n3. Determine if there is a legitimate reason for the user creating
        an administrative unit.\n", "tags": ["source:azure", "scope:azure-active-directory",
        "technique:T1098-account-manipulation", "mitre_platform:iaas", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0003-persistence",
        "source:azure", "mitre_platform:iaas", "security:attack", "scope:azure-active-directory",
        "mitre_platform:cloud", "technique:T1098-account-manipulation"], "version":
        87, "id": "def-000-aa7", "updatedAt": 1736369587845, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure administrative unit modified",
        "createdAt": 1724362963796, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "service:azure source:azure.activedirectory @properties.category:AdministrativeUnit
        @evt.name:(\"Update administrative unit\" OR \"Restore administrative unit\"
        OR \"Delete administrative unit\" OR \"Hard delete administrative unit\")",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "admin_unit_modified"}], "options": {"evaluationWindow":
        900, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "admin_unit_modified", "status": "low", "notifications":
        [], "condition": "admin_unit_modified >= 1"}], "message": "## Goal\n\nDetects
        the modification of Entra ID (Azure AD) Administrative Units (AUs). The modification
        of AUs may indicate suspicious activity if an environment is not utilizing
        AUs.\n\n## Strategy\n\nMonitor Azure Active Directory logs for `@properties.category:AdministrativeUnit`
        and `(@evt.name:\"Update administrative unit\" OR @evt.name:\"Restore administrative
        unit\" OR @evt.name:\"Delete administrative unit\" OR @evt.name:\"Hard delete
        administrative unit\")` where the event is not a restricted administrative
        unit.\n\n## Triage and response\n\n1. Review if administrative units are used
        by the organization.\n2. Review evidence of anomalous activity for the user
        modifying an administrative unit.\n3. Determine if there is a legitimate reason
        for the user modifying an administrative unit.\n", "tags": ["source:azure",
        "scope:azure-active-directory", "technique:T1098-account-manipulation", "mitre_platform:iaas",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0003-persistence",
        "source:azure", "mitre_platform:iaas", "security:attack", "scope:azure-active-directory",
        "mitre_platform:cloud", "technique:T1098-account-manipulation"], "version":
        87, "id": "def-000-b90", "updatedAt": 1736369587889, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure diagnostic setting deleted or
        disabled", "createdAt": 1629705618755, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "service:azure @evt.name:\"MICROSOFT.INSIGHTS/DIAGNOSTICSETTINGS/DELETE\"
        @evt.outcome:Success", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when a diagnostic
        setting is deleted which can disable centralized logging and metrics on Azure.\n\n##
        Strategy\nMonitor Azure logs where `@evt.name` is `\"MICROSOFT.INSIGHTS/DIAGNOSTICSETTINGS/DELETE\"`
        and `@evt.outcome` is `Success`.\n\n## Triage and response\n1. Inspect the
        diagnostic setting resource which is found in `@resourceId`.\n2. Verify that
        the user (`{{@usr.id}}`) to determine if the removal of the resource is legitimate.",
        "tags": ["source:azure", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:iaas", "tactic:TA0005-defense-evasion", "technique:T1562-impair-defenses",
        "source:azure", "mitre_platform:cloud"], "version": 87, "id": "apn-0ib-a6f",
        "updatedAt": 1736369587927, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Azure disk export URI created", "createdAt": 1635258362855,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:azure.compute
        @evt.name:\"MICROSOFT.COMPUTE/DISKS/BEGINGETACCESS/ACTION\" @evt.outcome:Success",
        "groupByFields": ["@resourceId"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "export_uri_generated"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "export_uri_generated > 0"}], "message": "## Goal\nDetect when an Azure disk
        is successfully exported. Export URLs generated in Azure are accessible to
        anyone with the URI. This could be utilized as an exfiltration method that
        would allow an attacker to download an Azure Compute VM''s disk as a VHD file.\n\n##
        Strategy\nMonitor Azure logs where `@evt.name` is `\"MICROSOFT.COMPUTE/DISKS/BEGINGETACCESS/ACTION\"`
        and `@evt.outcome` is `Success`.\n\n## Triage and response\n1. Verify the
        disk (`{{@resourceId}}`) has a legitimate reason for being exported.\n2. If
        the activity is not expected, investigate the activity around the IP (`{{@network.client.ip}}`)
        creating the export URI.\n\n## Changelog\n2 November 2022 - Updated strategy.",
        "tags": ["source:azure", "tactic:TA0009-collection", "technique:T1074-data-staged",
        "scope:azure-vm", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:azure-vm", "source:azure", "mitre_platform:iaas", "security:attack",
        "technique:T1074-data-staged", "tactic:TA0009-collection", "mitre_platform:cloud"],
        "version": 87, "id": "em5-2ya-8se", "updatedAt": 1736369587984, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure new owner added for service principal",
        "createdAt": 1632250449493, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.activedirectory @evt.name:\"Add owner to service
        principal\" @evt.outcome:success @usr.name:*", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "new_owner_sp"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "new_owner_sp > 0"}], "message": "## Goal\nDetect when a
        new owner is added to a service principal, which applies to privilege escalation
        or persistence.\n\n## Strategy\nMonitor Azure Active Directory logs where
        `@evt.name` is `\"Add owner to service principal\"` and `@evt.outcome` of
        `Success`. \n\n## Triage and response\n1. Inspect that the user is added to
        a service principal in `@properties.targetResources`.\n2. Verify with the
        user (`{{@usr.name}}`) to determine if the owner addition is legitimate. ",
        "tags": ["scope:azure.activedirectory", "source:azure", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0003-persistence", "source:azure", "mitre_platform:iaas", "scope:azure.activedirectory",
        "security:attack", "mitre_platform:cloud", "technique:T1098-account-manipulation"],
        "version": 88, "id": "ypa-4t4-zo4", "updatedAt": 1736369588390, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure restricted management administrative
        unit created", "createdAt": 1724362963803, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "service:azure source:azure.activedirectory @properties.category:AdministrativeUnit
        @evt.name:\"Add administrative unit\" @properties.targetResources.modifiedProperties.displayName:IsMemberManagementRestricted",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "restrictive_admin_unit_created"}], "options":
        {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "restrictive_admin_unit_created",
        "status": "low", "notifications": [], "condition": "restrictive_admin_unit_created
        >= 1"}], "message": "## Goal\n\nDetect creation of Entra ID (Azure AD) restricted
        management Administrative Units (AUs). Restricted AUs prevent any user without
        a specific scoped role assignment from modifying target users who are members
        of a restricted management AU. This can impact user containment during sensitive
        incidents if not intentionally configured by the IT team, and may indicate
        malicious activity.\n\n## Strategy\n\nMonitor Azure Active Directory logs
        for `@properties.category:AdministrativeUnit` and `@evt.name:\"Add administrative
        unit\"` where the event includes a restricted administrative unit.\n\n## Triage
        and response\n\n1. Review if restricted administrative units are used by the
        organization.\n2. Review evidence of anomalous activity for the user creating
        a restricted administrative unit.\n3. Determine if there is a legitimate reason
        for the user creating a restricted administrative unit.\n", "tags": ["source:azure",
        "scope:azure-active-directory", "technique:T1098-account-manipulation", "mitre_platform:iaas",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0003-persistence",
        "source:azure", "mitre_platform:iaas", "security:attack", "scope:azure-active-directory",
        "mitre_platform:cloud", "technique:T1098-account-manipulation"], "version":
        87, "id": "def-000-a89", "updatedAt": 1736369588460, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure snapshot export URI created",
        "createdAt": 1635255176732, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.compute @evt.name:\"MICROSOFT.COMPUTE/SNAPSHOTS/BEGINGETACCESS/ACTION\"
        @evt.outcome:Success", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "export_uri"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "export_uri > 0"}], "message": "## Goal\nDetect if an Azure
        snapshot is exported. Export URLs generated in Azure are accessible to anyone
        with the URL.\n\n## Strategy\nMonitor Azure logs where `@evt.name` is `\"MICROSOFT.COMPUTE/SNAPSHOTS/BEGINGETACCESS/ACTION\"`
        and `@evt.outcome` is `Success`.\n\n## Triage and response\n1. Verify the
        snapshot (`@resourceId`) has a legitimate reason for being exported.\n2. If
        the activity is not expected, investigate the activity around the IP (`{{@network.client.ip}}`)
        creating the export URL.", "tags": ["source:azure", "tactic:TA0009-collection",
        "technique:T1074-data-staged", "scope:azure-vm", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["scope:azure-vm", "source:azure", "mitre_platform:iaas",
        "security:attack", "technique:T1074-data-staged", "tactic:TA0009-collection",
        "mitre_platform:cloud"], "version": 87, "id": "7r2-807-3pa", "updatedAt":
        1736369588747, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Azure user added to restricted management administrative unit", "createdAt":
        1724362970115, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "service:azure source:azure.activedirectory @properties.category:AdministrativeUnit
        (@evt.name:\"Add member to restricted management administrative unit\")",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "restrictive_admin_unit_usr_added"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "restrictive_admin_unit_usr_added",
        "status": "medium", "notifications": [], "condition": "restrictive_admin_unit_usr_added
        >= 1"}], "message": "## Goal\n\nDetects addition of Entra ID (Azure AD) users
        to restricted management Administrative Units (AUs). Restricted AUs prevent
        any user without a specific scoped role assignment from modifying target users
        who are members of a restricted management AU. Addition of a user to a restricted
        management AU can impact user containment during sensitive incidents if not
        intentionally configured by the IT team, and may indicate malicious activity.\n\n##
        Strategy\n\nMonitor Azure Active Directory logs for `@properties.category:AdministrativeUnit`
        and `@evt.name:\"Add member to restricted management administrative unit\"`
        where the event includes a restricted administrative unit.\n\n## Triage and
        response\n\n1. Review if restricted administrative units are used by the organization.\n2.
        Review evidence of anomalous activity for the user being added to the restricted
        administrative unit.\n3. Determine if there is a legitimate reason for the
        user to be added to the restricted administrative unit.\n", "tags": ["source:azure",
        "scope:azure-active-directory", "technique:T1098-account-manipulation", "mitre_platform:iaas",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0003-persistence",
        "source:azure", "mitre_platform:iaas", "security:attack", "scope:azure-active-directory",
        "mitre_platform:cloud", "technique:T1098-account-manipulation"], "version":
        87, "id": "def-000-a79", "updatedAt": 1736369588862, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure user granted scoped role assignment
        over administrative unit", "createdAt": 1724362963796, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "service:azure source:azure.activedirectory
        @properties.category:RoleManagement @evt.name:(\"Add scoped member to role\"
        OR \"Add member to role scoped over Restricted Management Administrative Unit\")",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "usr_granted_scoped_assignment_admin_unit"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "usr_granted_scoped_assignment_admin_unit",
        "status": "medium", "notifications": [], "condition": "usr_granted_scoped_assignment_admin_unit
        >= 1"}], "message": "## Goal\n\nDetect scoped Entra ID (Azure AD) role assignment
        over an Administrative Unit (AU). Use of this type of role assignment may
        indicate suspicious activity if an environment is not utilizing AUs.\n\n##
        Strategy\n\nMonitor Azure Active Directory logs for `@properties.category:AdministrativeUnit`
        and `(@evt.name:\"Add scoped member to role\" OR @evt.name:\"Add member to
        role scoped over Restricted Management Administrative Unit\")` where the event
        includes a restricted administrative unit.\n\n## Triage and response\n\n1.
        Review if restricted administrative units are used by the organization.\n2.
        Review evidence of anomalous activity for the user being granted role assignment
        to the restricted administrative unit.\n3. Determine if there is a legitimate
        reason for the user being granted role assignment to the restricted administrative
        unit.\n", "tags": ["source:azure", "scope:azure-active-directory", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0003-persistence", "source:azure", "mitre_platform:iaas", "security:attack",
        "scope:azure-active-directory", "mitre_platform:cloud", "technique:T1098-account-manipulation"],
        "version": 87, "id": "def-000-a11", "updatedAt": 1736369588880, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure user invited an external user",
        "createdAt": 1629705619853, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.activedirectory @evt.name:\"Invite external user\"
        @evt.outcome:success", "groupByFields": ["@usr.id", "@properties.targetResources.userPrincipalName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "invite_external_user"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "low", "notifications": [], "condition": "invite_external_user
        > 0"}], "message": "## Goal\nDetect when an invitation is sent to an external
        user.\n\n## Strategy\nMonitor Azure Active Directory Audit logs and detect
        when any `@evt.name` is equal to `Invite external user` and the `@evt.outcome`
        is equal to `success`.\n\n## Triage and response\nReview and determine if
        the invitation and its recipient are valid.\n", "tags": ["security:compliance",
        "source:azure", "technique:T1136-create-account", "mitre_platform:iaas", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0003-persistence",
        "source:azure", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud",
        "security:compliance", "technique:T1136-create-account"], "version": 88, "id":
        "8pu-lqe-4ze", "updatedAt": 1736369589155, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure user ran command on container
        instance", "createdAt": 1635255177912, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "service:azure @evt.name:\"MICROSOFT.CONTAINERINSTANCE/CONTAINERGROUPS/CONTAINERS/EXEC/ACTION\"
        @evt.outcome:Success", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "container_exec_success"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "container_exec_success > 0"}], "message": "## Goal\nDetect
        when a command is executed on a container instance with the Azure API.\n\n##
        Strategy\nMonitor Azure container instance logs where `@evt.name` is `\"MICROSOFT.CONTAINERINSTANCE/CONTAINERGROUPS/CONTAINERS/EXEC/ACTION\"`
        and `@evt.outcome` is `Success`.\n\n## Triage and response\n1. Verify that
        the user (`{{@usr.id}}`) should be executing commands on the container (`@resourceId`).\n2.
        If the activity is not expected, investigate the activity around the container
        (`@resourceId`).\n", "tags": ["scope:azure-containerinstances", "source:azure",
        "tactic:TA0002-execution", "mitre_platform:containers", "mitre_platform:iaas",
        "security:attack", "technique:T1609-container-administration-command", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1609-container-administration-command", "mitre_platform:iaas",
        "tactic:TA0002-execution", "mitre_platform:containers", "mitre_platform:cloud",
        "security:attack", "scope:azure-containerinstances", "source:azure"], "version":
        87, "id": "0bt-76f-qi0", "updatedAt": 1736369589245, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure user removed from restricted administrative
        unit", "createdAt": 1726223670925, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "service:azure source:azure.activedirectory @properties.category:AdministrativeUnit
        @evt.name:\"Remove member from restricted management administrative unit\"",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "usr_removed_from_admin_unit"}], "options":
        {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "usr_removed_from_admin_unit",
        "status": "low", "notifications": [], "condition": "usr_removed_from_admin_unit
        >= 1"}], "message": "## Goal\n\nDetect removal of Entra ID (Azure AD) users
        from restricted management Administrative Units (AUs). Restricted AUs prevent
        any user without a specific scoped role assignment from modifying target users
        who are members of a restricted management AU. Removal of a user intentionally
        placed in a restricted management AU can result in a protected user being
        modifiable by directory-level administrators.\n\n## Strategy\n\nMonitor Azure
        Active Directory logs for `@properties.category:AdministrativeUnit` and `@evt.name:\"Remove
        member from restricted management administrative unit\"` where the event includes
        a restricted administrative unit.\n\n## Triage and response\n\n1. Review if
        restricted administrative units are used by the organization.\n2. Review evidence
        of anomalous activity for the user being removed from the restricted administrative
        unit.\n3. Determine if there is a legitimate reason for the user being removed
        from the restricted administrative unit.\n", "tags": ["source:azure", "scope:azure-active-directory",
        "technique:T1098-account-manipulation", "mitre_platform:iaas", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0003-persistence",
        "source:azure", "mitre_platform:iaas", "security:attack", "scope:azure-active-directory",
        "mitre_platform:cloud", "technique:T1098-account-manipulation"], "version":
        87, "id": "def-000-b12", "updatedAt": 1736369589271, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Azure user viewed CosmosDB access keys",
        "createdAt": 1635356632082, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.documentdb @evt.name:\"MICROSOFT.DOCUMENTDB/DATABASEACCOUNTS/LISTKEYS/ACTION\"
        @evt.outcome:Success", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "list_keys"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "list_keys > 0"}], "message": "## Goal\nDetect when a user
        successfully requests to view a CosmoDB access key with the Azure API. An
        attacker with the appropriate privileges can view an access key and use it
        to access and manage the CosmoDB database. \n\n## Strategy\nMonitor Azure
        CosmoDB logs where `@evt.name` is `\"MICROSOFT.DOCUMENTDB/DATABASEACCOUNTS/LISTKEYS/ACTION\\\"`
        and `@evt.outcome` is `Success`.\n\n## Triage and response\n1. Verify that
        the user (`{{@usr.name}}`) should be viewing the access key for the following
        CosmoDB database: (`{{@resourceId}}`).\n2. If the activity is not expected,
        investigate the activity around the CosmoDB Database (`{{@resourceId}}`).",
        "tags": ["source:azure", "technique:T1580-cloud-infrastructure-discovery",
        "scope:azure-cosmosdb", "tactic:TA0007-discovery", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas", "source:azure",
        "tactic:TA0007-discovery", "security:attack", "mitre_platform:cloud", "scope:azure-cosmosdb",
        "technique:T1580-cloud-infrastructure-discovery"], "version": 87, "id": "g3k-7d3-mcx",
        "updatedAt": 1736369589335, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}], "meta": {"page": {"total_count": 560, "total_filtered_count":
        100}}}'
    headers:
      Content-Type:
      - application/json
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Content-Type:
      - application/json
    method: GET
    uri: https://us5.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=2&page%5Bsize%5D=100
  response:
    body:
      string: '{"data": [{"name": "Azure user viewed CosmosDB connection string",
        "createdAt": 1635356631755, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.documentdb @evt.name:\"MICROSOFT.DOCUMENTDB/DATABASEACCOUNTS/LISTCONNECTIONSTRINGS/ACTION\"
        @evt.outcome:Success", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "list_connectionstrings"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "list_connectionstrings > 0"}], "message": "## Goal\nDetect
        when a user successfully requests to view a CosmoDB connection string with
        the Azure API. An attacker with the appropriate privileges can view a connection
        string and use it to access or modify data in the CosmoDB database. \n\n##
        Strategy\nMonitor Azure CosmoDB logs where `@evt.name` is `\"MICROSOFT.DOCUMENTDB/DATABASEACCOUNTS/LISTCONNECTIONSTRINGS/ACTION\"`
        and `@evt.outcome` is `Success`.\n\n## Triage and response\n1. Verify that
        the user (`{{@usr.name}}`) should be viewing the connection string for the
        following CosmoDB database: (`{{@resourceId}}`).\n2. If the activity is not
        expected, investigate the activity around the CosmoDB (`{{@resourceId}}`).",
        "tags": ["source:azure", "technique:T1580-cloud-infrastructure-discovery",
        "scope:azure-cosmosdb", "tactic:TA0007-discovery", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:azure-cosmosdb",
        "technique:T1580-cloud-infrastructure-discovery", "mitre_platform:iaas", "source:azure",
        "tactic:TA0007-discovery", "security:attack"], "version": 87, "id": "zax-6ov-em2",
        "updatedAt": 1736369589394, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Base64 was detected in an http.user_agent or http.referrer",
        "createdAt": 1639665450494, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(apache OR nginx) (@http.referrer:(*jndi\\:ldap*Base64*
        OR *jndi\\:rmi*Base64* OR *jndi\\:dns*Base64*) OR @http.user_agent:(*jndi\\:ldap*Base64*
        OR *jndi\\:rmi*Base64* OR *jndi\\:dns*Base64*))", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "standard_attributes"},
        {"query": "source:(apache OR nginx) (@http_referer:(*jndi\\:ldap*Base64* OR
        *jndi\\:rmi*Base64* OR *jndi\\:dns*Base64*) OR @http_referrer:(*jndi\\:ldap*Base64*
        OR *jndi\\:rmi*Base64* OR *jndi\\:dns*Base64*) OR @http_user_agent:(*jndi\\:ldap*Base64*
        OR *jndi\\:rmi*Base64* OR *jndi\\:dns*Base64*))", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "non_standard_attributes"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "standard attribute query triggered",
        "status": "medium", "notifications": [], "condition": "standard_attributes
        > 0"}, {"name": "non standard attribute query triggered", "status": "medium",
        "notifications": [], "condition": "non_standard_attributes > 0"}], "message":
        "## Goal\nThis rule detects if your Apache or NGINX web servers are being
        exploited using the log4j vulnerability. The initial vulnerability was identified
        as [CVE-2021-44228](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228).\n\n##
        Strategy\nThis signal evaluated that `Base64` has been detected in the HTTP
        header fields `user agent` and `referrer` or `referer`.\n\n## Triage and response\n1.
        Ensure you servers have the most recent version of log4j installed. \n2. If
        you are not patched, decode the base64 string and look for any successful
        traffic to the malicious server.\n3. If a connection was successful to the
        malicious server, begin your company''s IR procedures to remediate.\n\nNote:
        Datadog''s `The Monitor` blog has an article published about [\"The Log4j
        Logshell vulnerability: Overview, detection, and remediation\"](https://www.datadoghq.com/blog/log4j-log4shell-vulnerability-overview-and-remediation/).
        ", "tags": ["mitre_platform:windows", "technique:T1027-obfuscated-files-or-information",
        "technique:T1190-exploit-public-facing-application", "mitre_platform:linux",
        "tactic:TA0011-command-and-control", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "tactic:TA0001-initial-access", "security:attack"], "hasExtendedTitle": true,
        "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:iaas", "technique:T1190-exploit-public-facing-application",
        "tactic:TA0001-initial-access", "mitre_platform:linux", "tactic:TA0005-defense-evasion",
        "technique:T1027-obfuscated-files-or-information", "tactic:TA0011-command-and-control",
        "mitre_platform:windows"], "version": 88, "id": "jhe-xm6-xdm", "updatedAt":
        1736369589408, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Brute force attack on an Auth0 user", "createdAt": 1629705616612, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:auth0 @evt.name:(failed_login_incorrect_password
        OR failed_login_invalid_email_or_username)", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "failed_login"}, {"query": "source:auth0 @evt.name:success_login",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "successful_login"}], "options": {"evaluationWindow":
        600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "Successful", "status": "medium", "notifications":
        [], "condition": "failed_login>5 && successful_login>=1"}, {"name": "Attempt",
        "status": "info", "notifications": [], "condition": "failed_login>10"}], "message":
        "## Goal\nDetect a brute force attack on a user. \n\n## Strategy\n**To determine
        a successful attempt:** Detect when the same user fails to login five times
        and then successfully logs in. This generates a `MEDIUM` severity signal.\n\n**To
        determine an unsuccessful attempt:** Detect when the same user fails to login
        five times. This generates an `INFO` severity signal.\n\n## Triage and response\n1.
        Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA
        was authenticated\n3. If the user was compromised, rotate user credentials.\n\n",
        "tags": ["tactic:TA0006-credential-access", "source:auth0", "technique:T1110-brute-force",
        "mitre_platform:identity-provider", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:auth0", "security:attack", "technique:T1110-brute-force",
        "tactic:TA0006-credential-access", "mitre_platform:identity-provider"], "version":
        87, "id": "154-6ed-00d", "updatedAt": 1736369590033, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Brute force attempt from suspicious
        IP by user email", "createdAt": 1732661076994, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "@evt.name:*login* -@usr.email:\"\" -@evt.outcome:\"\"
        @evt.outcome:(false OR NO OR no OR FAILURE OR failure OR Failed) (@threat_intel.results.intention:malicious
        OR @threat_intel.results.category:(botnet_proxy OR hosting_proxy OR attack
        OR malware OR malware_proxy))", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "failed_logins"},
        {"query": "@evt.name:*login* -@usr.email:\"\" -@evt.outcome:\"\" @evt.outcome:(true
        OR YES OR yes OR success OR SUCCESS OR Succeeded) (@threat_intel.results.intention:malicious
        OR @threat_intel.results.category:(botnet_proxy OR hosting_proxy OR attack
        OR malware OR malware_proxy))", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "successful_logins"}],
        "options": {"evaluationWindow": 7200, "detectionMethod": "threshold", "maxSignalDuration":
        43200, "keepAlive": 21600}, "cases": [{"name": "Potential successful brute-force",
        "status": "medium", "notifications": [], "condition": "failed_logins >= 5
        && successful_logins > 0"}, {"name": "Potential unauthorized access attempt",
        "status": "info", "notifications": [], "condition": "failed_logins > 10"}],
        "message": "## Goal\n\nDetect a brute force attack on a user across log sources.\n\n##
        Strategy\n\nTo identify a successful attempt: Detect when the same user fails
        to log in five times, and then successfully logs in. This generates a `MEDIUM`
        severity signal.\n\nTo identify an unsuccessful attempt: Detect when the same
        user fails to log in ten times. This generates an `INFO` severity signal.\n\n##
        Triage and response\n\n1. Inspect the logs to see if this was a valid login
        attempt.\n2. Verify if 2FA was authenticated.\n3. If the user was compromised,
        rotate user credentials.\n", "tags": ["tactic:TA0006-credential-access", "technique:T1110-brute-force",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["tactic:TA0006-credential-access",
        "technique:T1110-brute-force", "mitre_platform:cloud", "security:attack"],
        "version": 20, "id": "def-003-6ty", "updatedAt": 1736369590008, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Brute forced ConsoleLogin event correlates
        with an assumed role event", "createdAt": 1660638897242, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "event_count", "name": "potential_brute_force_attack_on_aws_console_login",
        "defaultRuleId": "8d2-d0c-0b6", "correlatedByFields": ["@userIdentity.arn"]},
        {"groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "event_count", "name": "anomalous_assumed_roles_from_user",
        "defaultRuleId": "fwu-obr-c9n", "correlatedByFields": ["@userIdentity.arn"]}],
        "options": {"evaluationWindow": 7200, "detectionMethod": "threshold", "maxSignalDuration":
        10800, "keepAlive": 7200, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "Brute force lead to assumed role", "status": "critical", "notifications":
        [], "condition": "potential_brute_force_attack_on_aws_console_login > 0 &&
        anomalous_assumed_roles_from_user > 0"}], "message": "## Goal\nCorrelate a
        bruteforce login with a user attempting to assume an anomalous number of roles.\n\n##
        Strategy\nCorrelate the [Potential brute force attack on AWS ConsoleLogin][1]
        and [Anomalous number of assumed roles from user][2] signals based on the
        ARN: {{@userIdentity.arn}}.\n\n## Triage and response\n1. Set signal triage
        state to `Under Review`.\n2. Determine if the brute force attack was successful.\n    *
        If the login was not legitimate:\n        * Investigate the user using the
        `User Investigation Dashboard`\n        * Rotate credentials on the brute
        forced account\n        * Enable MFA if it is not already enabled\n    * If
        the login was legitimate:\n        * Triage the signal as a false positive\n\n[1]:
        https://docs.datadoghq.com/security/default_rules/aws-iam-brute-force-consolelogin/\n[2]:
        https://docs.datadoghq.com/security/default_rules/cloudtrail-aws-user-attempted-to-assumerole-anomaly\n",
        "tags": ["iaas:aws", "scope:aws", "source:aws", "security:attack"], "hasExtendedTitle":
        true, "type": "signal_correlation", "filters": [], "defaultTags": ["security:attack",
        "scope:aws", "source:aws", "iaas:aws"], "version": 86, "id": "v5u-24i-koa",
        "updatedAt": 1736369590071, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Brute-forced user has assigned a role", "createdAt":
        1657009674027, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "event_count", "name": "azure_credential_stuffing", "defaultRuleId": "ljt-3f4-8ty",
        "correlatedByFields": ["@usr.id"], "correlatedQueryIndex": 1}, {"groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "event_count", "name": "admin_role_assigned", "defaultRuleId": "psm-gpc-pgy",
        "correlatedByFields": ["@usr.id"]}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "Brute-forced user has assigned a role", "status": "high",
        "notifications": [], "condition": "azure_credential_stuffing > 0 && admin_role_assigned
        > 0"}], "message": "## Goal\nCorrelate a successful credential stuffing login
        with a user assumed a role.\n\n## Strategy\nCorrelate the [Credential Stuffing
        Attack on Azure][1] and [Azure AD member assigned Global Administrator role][2]
        signals based on the ARN: {{@userIdentity.arn}}.\n\n## Triage and response\n1.
        Set signal triage state to `Under Review`.\n2. Determine if the credential
        stuffing attack was successful.\n    * If the login was not legitimate:\n        *
        Investigate the user using the `User Investigation Dashboard`\n        * Rotate
        credentials on the credential stuffed account\n        * Enable MFA if it
        is not already enabled\n    * If the login was legitimate:\n        * Triage
        the signal as a false positive\n\n[1]: https://docs.datadoghq.com/security/default_rules/azure_credential_stuffing_attack\n[2]:
        https://docs.datadoghq.com/security/default_rules/azure-ad-user-assigned-global-admin-role",
        "tags": ["source:azure", "tactic:TA0006-credential-access", "iaas:azure",
        "technique:T1110-brute-force", "security:attack"], "hasExtendedTitle": true,
        "type": "signal_correlation", "filters": [], "defaultTags": ["security:attack",
        "tactic:TA0006-credential-access", "technique:T1110-brute-force", "iaas:azure",
        "source:azure"], "version": 86, "id": "ldd-v8t-81e", "updatedAt": 1736369590073,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Checkpoint Quantum firewall ransomware
        infection detected", "createdAt": 1713769351360, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "@severity:Low", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@severity:Medium", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "none", "name": ""}, {"query": "@severity:High",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@severity:Critical", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod":
        "third_party", "maxSignalDuration": 86400, "keepAlive": 1800, "thirdPartyRuleOptions":
        {"signalTitleTemplate": "Checkpoint Quantum firewall ransomware infection
        detected - {{@usr.name}}", "defaultStatus": "info", "rootQueries": [{"query":
        "source:checkpoint-quantum-firewall @product:Anti-Ransomware @action:Detect",
        "groupByFields": ["@file_name", "@usr.name"]}], "defaultNotifications": []}},
        "cases": [{"name": "", "status": "low", "notifications": []}, {"name": "",
        "status": "medium", "notifications": []}, {"name": "", "status": "high", "notifications":
        []}, {"name": "", "status": "critical", "notifications": []}], "message":
        "## Goal\nDetect when Checkpoint''s Anti-Ransomware solution raises a ransomware
        infection alert.\n\n## Strategy\nThis rule monitors Checkpoint Quantum Firewall
        logs for when a ransomware infection is detected by the Anti-Ransomware product.
        This rule uses the third-party detection method to create a signal with the
        same serverity as the event severity (`@checkpoint_firewall_severity`).\n\n##
        Triage and response\n1. Investigate the Checkpoint alert to determine if it
        is malicious or benign.\n2. If the alert is benign, consider including the
        user or host in a suppression list. See [Best practices for creating detection
        rules with Datadog Cloud SIEM][1] for more information.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#customize-security-signal-messages-to-fit-your-environment",
        "tags": ["source:checkpoint-quantum-firewall", "tactic:TA0040-impact", "technique:T1486-data-encrypted-for-impact",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["security:attack", "tactic:TA0040-impact", "source:checkpoint-quantum-firewall",
        "technique:T1486-data-encrypted-for-impact"], "version": 86, "id": "def-000-o81",
        "updatedAt": 1736369590651, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "thirdPartyCases": [{"name": "", "status": "low", "notifications":
        [], "query": "@severity:Low"}, {"name": "", "status": "medium", "notifications":
        [], "query": "@severity:Medium"}, {"name": "", "status": "high", "notifications":
        [], "query": "@severity:High"}, {"name": "", "status": "critical", "notifications":
        [], "query": "@severity:Critical"}], "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cisco Duo administrator locked out after
        too many failed login attempts", "createdAt": 1713252889363, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:cisco-duo service:administrator
        @cisco.duo.action.name:admin_lockout", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "cisco_duo_admin_lockout"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "cisco_duo_admin_lockout > 0"}], "message": "## Goal\nDetect
        when a Duo administrator is locked out of their account due to failed login
        attempts.\n\n## Strategy\nThis rule monitors administrator lockout events
        in Cisco Duo logs. While this could result from user error, an attacker trying
        to gain unauthorized access to an administrator''s account may try to brute
        force authentications.\n\n## Triage and Response\n1. Contact the user `{{@usr.name}}`
        to determine if they are aware of the failed authentication attempts.\n2.
        If the user is unaware, investigate the authentication event, focusing on
        the IP address `{{@access_device.ip}}`, application `{{@application.name}}`,
        and user `{{@usr.name}}` involved.\n3. If the event is deemed malicious, begin
        your organization''s incident response process to contain the affected account
        or device.\n", "tags": ["tactic:TA0006-credential-access", "source:cisco-duo",
        "technique:T1110-brute-force", "mitre_platform:identity-provider", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:cisco-duo",
        "security:attack", "technique:T1110-brute-force", "tactic:TA0006-credential-access",
        "mitre_platform:identity-provider"], "version": 87, "id": "def-000-8gg", "updatedAt":
        1736369590651, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Cisco Duo application enumeration by user", "createdAt": 1732181533448, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:cisco-duo service:authentication
        @evt.outcome:(denied OR fraud)", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@application.name"], "aggregation": "cardinality",
        "name": "failed_application_access"}, {"query": "source:cisco-duo service:authentication
        @evt.outcome:success", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@application.name"], "aggregation": "cardinality",
        "name": "successful_application_access"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "Failed application access followed by success",
        "status": "medium", "notifications": [], "condition": "failed_application_access
        > 3 && successful_application_access >=1"}, {"name": "Failed application access",
        "status": "low", "notifications": [], "condition": "failed_application_access
        > 5"}], "message": "## Goal\n\nDetect and investigate attempts to enumerate
        applications via an Identity Provider (IdP) service, which may indicate an
        attacker is probing for accessible resources to facilitate lateral movement.\n\n##
        Strategy\n\nThis rule monitors enumeration activities via IdP services where
        repeated queries are made to list available applications. Such behavior may
        suggest an attempt to identify accessible resources and potentially map out
        targets for lateral movement. Enumeration of applications is typically associated
        with discovery tactics often used in lateral movement and privilege escalation
        stages.\n\n## Triage and Response\n\n1. Validate the user activity:\n\n   -
        Check if the user account (`{{@usr.name}}`) or associated IP address has a
        legitimate reason for listing applications via the IdP.\n   - Review recent
        authentication attempts and associated IP addresses to determine if there
        are additional signs of compromise or unauthorized access.\n\n2. Investigate
        suspicious enumeration activity:\n\n   - Review IdP logs for additional enumeration
        patterns, such as repeated application listing requests from the same IP or
        user within a short time frame.\n   - Examine logs for any unusual or infrequently
        used applications that are being accessed or targeted in enumeration requests.\n\n3.
        Containment and remediation:\n   - If the enumeration activity is deemed unauthorized,
        consider restricting the user\u2019s access temporarily and resetting credentials
        to prevent further probing.\n   - Conduct a broader investigation into recent
        activity from the flagged user and IP to check for other signs of lateral
        movement, such as privilege escalation or additional resource access attempts.\n",
        "tags": ["source:cisco-duo", "mitre_platform:identity-provider", "tactic:TA0007-discovery",
        "security:attack", "technique:T1526-cloud-service-discovery", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1526-cloud-service-discovery", "source:cisco-duo",
        "security:attack", "tactic:TA0007-discovery", "mitre_platform:identity-provider"],
        "version": 21, "id": "def-002-87v", "updatedAt": 1736369590654, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cisco Duo brute force attack on user",
        "createdAt": 1732181533517, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cisco-duo service:authentication (@evt.outcome:denied OR
        @evt.outcome:fraud)", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "failed_login"},
        {"query": "source:cisco-duo service:authentication @evt.outcome:success",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "successful_login"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "Successful", "status": "medium", "notifications":
        [], "condition": "failed_login > 5 THEN successful_login >= 1"}], "message":
        "## Goal\n\nDetect a brute force attack on a user.\n\n## Strategy\n\nTo identify
        a successful attempt: Detect when the same user fails to log in five times,
        and then successfully logs in. This generates a `MEDIUM` severity signal.\n\nTo
        identify an unsuccessful attempt: Detect when the same user fails to log in
        five times. This generates an `INFO` severity signal.\n\n## Triage and response\n\n1.
        Inspect the logs to see if this was a valid login attempt.\n2. Verify if 2FA
        was authenticated.\n3. If the user was compromised, rotate user credentials.\n",
        "tags": ["tactic:TA0006-credential-access", "source:cisco-duo", "technique:T1110-brute-force",
        "mitre_platform:identity-provider", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:cisco-duo", "security:attack", "technique:T1110-brute-force",
        "tactic:TA0006-credential-access", "mitre_platform:identity-provider"], "version":
        20, "id": "def-002-88v", "updatedAt": 1736369590770, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cisco Duo bypass code created by administrator",
        "createdAt": 1713252890325, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cisco-duo service:activity @cisco.duo.action.name:bypass_create",
        "groupByFields": ["@access_device.ip.address", "@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "cisco_duo_bypass_code_created_by_administrator"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "cisco_duo_bypass_code_created_by_administrator > 0"}], "message":
        "## Goal\nDetect when a Duo [bypass code][1] is created by an administrator.\n\n##
        Strategy\nThis rule monitors Cisco Duo activity logs for the creation of bypass
        codes by administrators. A bypass code is a temporary passcode created by
        an administrator for a specific user. These are generally used as \"backup
        codes\" to grant enrolled users access to their Duo-protected systems when
        they have problems with their mobile device, or when they''re temporarily
        unable to access their enrolled device.\n\n## Triage and Response\n1. Investigate
        the nature of the bypass code creation:\n   * Verify if the bypass code creation
        generated by user `{{@usr.email}}` from device IP `{{@access_device.ip.address}}`
        was authorized and legitimate.\n   * Identify the administrator responsible
        for the action.\n2. If unauthorized or suspicious activity is detected:\n   *
        Disable or review the administrator''s account.\n   * Reset any affected user
        accounts associated with the bypass codes.\n   * Initiate an investigation
        into potential security breaches.\n\n[1]: https://duo.com/docs/administration-users#generating-a-bypass-code",
        "tags": ["technique:T1556-modify-authentication-process", "source:cisco-duo",
        "mitre_platform:identity-provider", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:cisco-duo",
        "technique:T1556-modify-authentication-process", "security:attack", "tactic:TA0005-defense-evasion",
        "mitre_platform:identity-provider"], "version": 87, "id": "def-000-2qy", "updatedAt":
        1736369590765, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Cisco Duo bypass code is used to authenticate user request", "createdAt":
        1713252890453, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cisco-duo service:authentication @result:success @reason:bypass_user",
        "groupByFields": ["@access_device.ip", "@application.name", "@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "cisco_duo_bypass_code_used_to_authenticate"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "cisco_duo_bypass_code_used_to_authenticate > 0"}], "message": "## Goal\nDetect
        when a Duo bypass code is used to authenticate a user request.\n\n## Strategy\nThis
        rule monitors successful authentication events in Cisco Duo logs where the
        reason is set to `bypass_user`.\n    \n## Triage and Response\n1. Contact
        the user `{{@usr.email}}` to confirm they used the bypass code.\n2. If the
        user is unaware, investigate the authentication event, focusing on the IP
        address `{{@access_device.ip}}`, application `{{@application.name}}`, and
        user `{{@usr.email}}` involved.\n3. If the event is deemed malicious, begin
        your organization''s incident response process to contain the affected account
        or device.", "tags": ["technique:T1078-valid-accounts", "source:cisco-duo",
        "mitre_platform:identity-provider", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1078-valid-accounts",
        "tactic:TA0001-initial-access", "source:cisco-duo", "security:attack", "mitre_platform:identity-provider"],
        "version": 87, "id": "def-000-jxj", "updatedAt": 1736369590763, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cisco Duo user marked authentication
        request as fraudulent", "createdAt": 1713252890366, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cisco-duo service:authentication @result:fraud",
        "groupByFields": ["@access_device.ip", "@application.name", "@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "cisco_duo_fraudulent_request"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "cisco_duo_fraudulent_request > 0"}], "message": "## Goal\nDetect when a user
        has marked a Duo push as fraudulent.\n\n## Strategy\nThis rule monitors Cisco
        Duo logs for when a user marks a Duo push as fraudulent. If a user suspects
        that a Duo push is suspicious, such as an unusual location or application
        name, they will mark the push as fraudulent.\n\n## Triage and Response\n1.
        Contact the user `{{@usr.email}}` to confirm why they thought the push was
        suspicious.\n2. Investigate the push event, focusing on the IP address `{{@access_device.ip}}`
        and application `{{@application.name}}`.\n3. If the event is deemed malicious,
        begin your organization''s incident response process to contain the affected
        account or device.", "tags": ["technique:T1078-valid-accounts", "source:cisco-duo",
        "mitre_platform:identity-provider", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1078-valid-accounts",
        "tactic:TA0001-initial-access", "source:cisco-duo", "security:attack", "mitre_platform:identity-provider"],
        "version": 87, "id": "def-000-onq", "updatedAt": 1736369590789, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cisco Meraki organization appliance
        security IDS events", "createdAt": 1700576778491, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "@priority:4", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@priority:3", "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@priority:2", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}, {"query": "@priority:1", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "third_party", "maxSignalDuration":
        86400, "keepAlive": 1800, "thirdPartyRuleOptions": {"signalTitleTemplate":
        "Cisco Meraki organization appliance security events: {{ @evt.category }}
        - {{ @message }}", "defaultStatus": "low", "rootQueries": [{"query": "source:meraki
        appliance:security @evt.category:\"IDS Alert\"", "groupByFields": ["@network.client.ip"]}],
        "defaultNotifications": []}}, "cases": [{"name": "", "status": "info", "notifications":
        []}, {"name": "", "status": "low", "notifications": []}, {"name": "", "status":
        "medium", "notifications": []}, {"name": "", "status": "high", "notifications":
        []}], "message": "## Goal\nDetect when intrustion detection system (IDS) alerts
        are created by the Meraki MX Security Appliance.\n\n## Strategy\nThe Cisco
        Meraki MX Security Appliance [threat protection][1] is comprised of the Sourcefire
        SNORT intrusion detection engine and anti-malware technology. Advanced malware
        prevention (AMP) inspects HTTP file downloads through the MX Security Appliance
        and blocks or allows file downloads based on threat intelligence retrieved
        from the AMP cloud. The intrusion detection engine monitors the network to
        detect malicious or anomalous behaviours, and then raises an alert. The security
        appliance can also be used as an Intrusion Prevention System (IPS) blocking
        malicious packets.\n\n**Note:** This detection filters for IDS alerts.\n\n##
        Triage and response\n1. Investigate the SNORT alert to determine if it is
        malicious or benign:\n    * Have the malicious packets been blocked `@blocked:true`?\n    *
        Are there other security signals related to the affected internal host?\n    *
        Does the internal host run the affected technology specified in the SNORT
        alert.\n2. If it is determined to be benign, consider including an attribute
        in a suppression list. See this article on [Best practices for creating detection
        rules with Datadog Cloud SIEM][2] for more information.\n3. If it is determined
        to be malicious, begin your organization''s incident response process and
        investigate.\n\n[1]: https://documentation.meraki.com/MX/Content_Filtering_and_Threat_Protection/Threat_Protection\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["scope:meraki", "source:meraki", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "source:meraki", "scope:meraki"], "version": 86, "id": "def-000-sgp", "updatedAt":
        1736369590838, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "thirdPartyCases": [{"name": "", "status": "info", "notifications":
        [], "query": "@priority:4"}, {"name": "", "status": "low", "notifications":
        [], "query": "@priority:3"}, {"name": "", "status": "medium", "notifications":
        [], "query": "@priority:2"}, {"name": "", "status": "high", "notifications":
        [], "query": "@priority:1"}], "updateAuthorId": 1615666, "creator": {"handle":
        "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name":
        "Michael Richey"}}, {"name": "Cisco Secure Endpoint high number of malicious
        files from single host", "createdAt": 1726646802932, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cisco-secure-endpoint service:event @event.file.disposition:Malicious
        @evt.name:\"Threat Detected\"", "groupByFields": ["@event.computer.hostname"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@event.file.file_name"],
        "aggregation": "cardinality", "name": "high_number_of_malicious_files_from_single_host"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "high_number_of_malicious_files_from_single_host > 10"}],
        "message": "## Goal\nDetect an unusually high number of unique malicious files
        from a single host.\n\n## Strategy\nThis rule monitors events to detect a
        spike in the number of malicious files from single host.\n\n## Triage and
        response\n1. Investigate the Host, `{{@event.computer.hostname}}`, in which
        the malicious files have been detected.\n2. Analyze the endpoint for other
        potentially malicious activity.\n3. Implement immediate measures to block
        or limit the impact of the suspicious activity if confirmed as a threat.\n4.
        Follow company procedures for handling malicious files, including isolating
        the endpoint, running antivirus/antimalware scans, analyzing logs, and updating
        security policies.", "tags": ["mitre_platform:windows", "tactic:TA0002-execution",
        "mitre_platform:macos", "source:cisco-secure-endpoint", "technique:T1204-user-execution",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["mitre_platform:macos", "technique:T1204-user-execution",
        "source:cisco-secure-endpoint", "tactic:TA0002-execution", "security:attack",
        "mitre_platform:windows"], "version": 20, "id": "def-000-ewq", "updatedAt":
        1736369590862, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Cisco Secure Endpoint malicious activity detected in system scan", "createdAt":
        1726646802929, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cisco-secure-endpoint service:event @event.scan.malicious_detections:>0",
        "groupByFields": ["@event.computer.hostname"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@event.id"], "aggregation": "cardinality", "name":
        "malicious_activity_detected_in_system_scan"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "malicious_activity_detected_in_system_scan > 0"}], "message": "## Goal\nThis
        rule is designed to identify and flag instances of potential malicious activity
        detected during system scans conducted by Cisco Secure Endpoint.\n\n## Strategy\nThis
        rule monitors and reports the presence of a positive number of malicious detections
        identified during comprehensive system scans executed by Cisco Secure Endpoint.\n\n##
        Triage and response\n1. Investigate the system scan by hostname: `{{@event.computer.hostname}}`.\n2.
        Investigate more about the system scan by scan description (`{{@event.scan.description}}`)
        and number of malicious detections (`{{@event.scan.malicious_detections}}`).\n3.
        Initiate containment measures to isolate affected systems or endpoints from
        the network if confirmed as a security threat.\n4. Execute remediation actions,
        such as deploying security patches, updating antivirus definitions, or performing
        system scans to remove any detected malware.\n5. Take necessary and appropriate
        actions based on the company procedures.\n", "tags": ["mitre_platform:windows",
        "tactic:TA0002-execution", "mitre_platform:macos", "source:cisco-secure-endpoint",
        "technique:T1204-user-execution", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:macos",
        "technique:T1204-user-execution", "source:cisco-secure-endpoint", "tactic:TA0002-execution",
        "security:attack", "mitre_platform:windows"], "version": 20, "id": "def-000-ljl",
        "updatedAt": 1736369591172, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Cisco Secure Endpoint malicious file detected on multiple
        hosts", "createdAt": 1726646804091, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cisco-secure-endpoint service:event @event.file.disposition:Malicious",
        "groupByFields": ["@event.file.file_name"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@event.computer.hostname"], "aggregation": "cardinality",
        "name": "malicious_file_detected_on_multiple_hosts"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "malicious_file_detected_on_multiple_hosts > 5"}], "message": "## Goal\nDetect
        when a malicious file is found on multiple hosts. \n\n## Strategy\nThis rule
        monitors Cisco Secure Endpoint logs for detecting when a malicious file is
        found on multiple hosts.\n\n## Triage and response\n1. Investigate the file,
        `{{@event.file.file_name}}`, to determine if the file is malicious.\n2. Investigate
        host(s) (`{{@event.computer.hostname}}`) in which the malicious file has been
        detected.\n3. Analyze the file activity pattern for the potential attack.\n4.
        Implement immediate measures to block or limit the impact of the suspicious
        activity, if confirmed as a threat.\n5. Follow company procedures for handling
        malicious files, including isolating the endpoint, running antivirus/antimalware
        scans, analyzing logs, and updating security policies.", "tags": ["mitre_platform:windows",
        "tactic:TA0002-execution", "mitre_platform:macos", "source:cisco-secure-endpoint",
        "technique:T1204-user-execution", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:macos",
        "technique:T1204-user-execution", "source:cisco-secure-endpoint", "tactic:TA0002-execution",
        "security:attack", "mitre_platform:windows"], "version": 20, "id": "def-000-q94",
        "updatedAt": 1736369591453, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Cisco Secure Endpoint rise in number of user login requests
        detected", "createdAt": 1726646804092, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cisco-secure-endpoint service:audit @evt.name:sso_login",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 86400,
        "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        []}], "message": "## Goal\nDetect when there has been an anomalous number
        of logins to the Cisco Secure Endpoint Console.\n\n## Strategy\nThis rule
        monitors the number of login attempts in the Cisco Secure Endpoint Console.
        Attackers may attempt to gain access to the console via a brute force attack.\n\n##
        Triage and response\n1. Investigate the login requests by user `{{@usr.name}}`.\n2.
        Implement immediate measures to block access of system for the user.\n3. Inform
        IT security teams and management about the incident to take necessary actions.",
        "tags": ["mitre_platform:windows", "tactic:TA0006-credential-access", "mitre_platform:macos",
        "source:cisco-secure-endpoint", "technique:T1110-brute-force", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:macos", "source:cisco-secure-endpoint", "security:attack",
        "technique:T1110-brute-force", "mitre_platform:windows", "tactic:TA0006-credential-access"],
        "version": 20, "id": "def-000-6fl", "updatedAt": 1736369591429, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cisco Umbrella - access to personal
        network detected", "createdAt": 1713252887587, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cisco-umbrella-dns service:proxy @verdict:allowed
        @categories.label:(\"Personal VPN\" OR \"Dynamic and Residential\")", "groupByFields":
        ["@internalip"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": "cisco_umbrella_access_to_personal_network"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "cisco_umbrella_access_to_personal_network > 0"}], "message":
        "## Goal\nDetect allowed access to personal network through proxy.\n\n## Strategy\nThis
        rule monitors Cisco Umbrella proxy logs to determine when a host accesses
        content related to personal VPNs or dynamic and residential IPs, possibly
        indicating that a user has accessed their personal network.\n\n## Triage and
        response\n1. Assess whether the site identified in the logs is allowed according
        to the organization''s acceptable use policy.\n2. Contact the user associated
        with the device to determine if they actively browsed to the sites identified
        in the log.\n3. If users should not be accessing the site, block the URL via
        Cisco Umbrella.\n4. If required, begin your organization''s incident response
        process and investigate.", "tags": ["source:cisco-umbrella-dns", "technique:T1071-application-layer-protocol",
        "mitre_platform:network", "tactic:TA0011-command-and-control", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:cisco-umbrella-dns", "security:attack", "mitre_platform:network",
        "technique:T1071-application-layer-protocol", "tactic:TA0011-command-and-control"],
        "version": 87, "id": "def-000-j6f", "updatedAt": 1736369591465, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cisco Umbrella - allowed request to
        unsafe URL category", "createdAt": 1713252887579, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cisco-umbrella-dns service:proxy @verdict:allowed
        @categories.label:(\"Chat and Instant Messaging\" OR \"Extreme\" OR \"Hacking\"
        OR \"Illegal Activities\" OR \"Illegal Downloads\" OR \"Illegal Drugs\" OR
        \"Terrorism and Violent Extremism\" OR \"Child Abuse Content\" OR \"Hate Speech\"
        OR \"Extreme\" OR \"Pornography\")", "groupByFields": ["@internalip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "cisco_umbrella_allowed_request_to_unsafe_url_category"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "cisco_umbrella_allowed_request_to_unsafe_url_category >
        0"}], "message": "## Goal\nDetect allowed requests to URLs associated with
        unsafe categories.\n\n## Strategy\nThis rule monitors Cisco Umbrella proxy
        logs to determine when a host accesses URLs related to unsafe categories,
        such as Chat and Instant Messaging, Extreme content, Hacking, Illegal Activities,
        Illegal Downloads, Illegal Drugs, Terrorism and Violent Extremism, Child Abuse
        Content, Hate Speech, and Pornography. This indicates a potential risk to
        the network''s security.\n\n## Triage and response\n1. Assess whether the
        site identified in the logs is allowed according to the organization''s acceptable
        use policy.\n2. Contact the user associated with the device to determine if
        they actively browsed to the sites identified in the log.\n3. If users should
        not be accessing the site, block the URL via Cisco Umbrella.\n4. If required,
        begin your organization''s incident response process and investigate.", "tags":
        ["source:cisco-umbrella-dns", "technique:T1071-application-layer-protocol",
        "mitre_platform:network", "tactic:TA0011-command-and-control", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:cisco-umbrella-dns", "security:attack", "mitre_platform:network",
        "technique:T1071-application-layer-protocol", "tactic:TA0011-command-and-control"],
        "version": 87, "id": "def-000-zt4", "updatedAt": 1736369591558, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cloud provider activity observed from
        IP associated with cryptomining", "createdAt": 1732661083387, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:(cloudtrail OR
        gcp* OR azure*) @threat_intel.results.category:cryptomining", "groupByFields":
        ["@network.client.ip"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "cryptomining_ip_activity"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "cryptomining_ip_activity > 0"}], "message": "## Goal\n\nDetect
        when a host in AWS, GCP, or Azure is potentially infected with a cryptominer.\n\n##
        Strategy\n\nThis rule compares the `@network.client.ip` standard attribute
        to a curated threat intelligence list of known cryptomining IP addresses.\n\n##
        Triage and response\n\n1. Determine if the resource should be contacting a
        cryptomining associated IP address.\n2. If not, begin your company''s incident
        response process.\n", "tags": ["security:threat-intel", "technique:T1071-application-layer-protocol",
        "tactic:TA0011-command-and-control", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0011-command-and-control", "technique:T1071-application-layer-protocol",
        "mitre_platform:cloud", "security:threat-intel", "security:attack", "mitre_platform:iaas"],
        "version": 21, "id": "def-009-syp", "updatedAt": 1736369592508, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cloudflare CASB Finding", "createdAt":
        1685056269569, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "@FindingTypeSeverity:Low", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@FindingTypeSeverity:Medium", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@FindingTypeSeverity:High", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@FindingTypeSeverity:Critical", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "third_party", "maxSignalDuration":
        86400, "keepAlive": 1800, "thirdPartyRuleOptions": {"signalTitleTemplate":
        "Cloudflare CASB Finding: {{ @FindingTypeDisplayName }} - via {{ @IntegrationDisplayName
        }} Integration", "defaultStatus": "medium", "rootQueries": [{"query": "source:cloudflare
        @FindingTypeDisplayName:*", "groupByFields": ["@IntegrationDisplayName"]}],
        "defaultNotifications": []}}, "cases": [{"name": "", "status": "low", "notifications":
        []}, {"name": "", "status": "medium", "notifications": []}, {"name": "", "status":
        "high", "notifications": []}, {"name": "", "status": "critical", "notifications":
        []}], "message": "## Goal \nDetect when a Cloudflare CASB finding is observed.\n\n##
        Strategy\nCloudflare''s Cloud Access Security Broker (CASB) scans SaaS integrations
        for various misconfigurations, and security issues that can occur after a
        user has successfully logged in. These scans result in findings that detail
        the security issues detected within the SaaS application.\n\n## Triage & response\nInvestigate
        the asset `{{@AssetDisplayName}}` involved in the finding: `{{@FindingTypeDisplayName}}`from
        the `{{@IntegrationDisplayName}}` integration.\n", "tags": ["tactic:TA0002-execution",
        "technique:T1098-account-manipulation", "source:cloudflare", "technique:T1204-user-execution",
        "security:attack", "tactic:TA0003-persistence"], "hasExtendedTitle": true,
        "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0003-persistence",
        "technique:T1204-user-execution", "source:cloudflare", "tactic:TA0002-execution",
        "security:attack", "technique:T1098-account-manipulation"], "version": 86,
        "id": "def-000-4jd", "updatedAt": 1736369593371, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "thirdPartyCases": [{"name": "", "status":
        "low", "notifications": [], "query": "@FindingTypeSeverity:Low"}, {"name":
        "", "status": "medium", "notifications": [], "query": "@FindingTypeSeverity:Medium"},
        {"name": "", "status": "high", "notifications": [], "query": "@FindingTypeSeverity:High"},
        {"name": "", "status": "critical", "notifications": [], "query": "@FindingTypeSeverity:Critical"}],
        "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Cloudflare L7 DDOS detected", "createdAt": 1685519820205, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:cloudflare @Source:l7ddos
        -@Action:block", "groupByFields": ["@http.url_details.host"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "l7ddos_detected"},
        {"query": "source:cloudflare @Source:l7ddos @Action:block", "groupByFields":
        ["@http.url_details.host"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "l7ddos_detected_blocked"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "not blocked", "status": "high",
        "notifications": [], "condition": "l7ddos_detected > 5"}, {"name": "blocked",
        "status": "low", "notifications": [], "condition": "l7ddos_detected_blocked
        > 5"}], "message": "## Goal\nDetect when a Layer 7 Distributed Denial of Service
        (DDoS) occurs.\n\n## Strategy\nThe Cloudflare HTTP DDoS Attack Protection
        managed ruleset is a set of pre-configured rules used to match known DDoS
        attack vectors at layer 7 (application layer) on the Cloudflare global network.
        The rules match known attack patterns and tools, suspicious patterns, protocol
        violations, requests causing large amounts of origin errors, excessive traffic
        hitting the origin/cache, and additional attack vectors at the application
        layer. \n\nThis rule inspects the `@Source` attribute for the value `l7ddos`
        to determine that the L7 DDoS product has been triggered. \n\n## Triage and
        response\n1. Monitor application for indications of reduced performance or
        outages.\n2. Analyze identified traffic to ensure it is not a [false positive][1]
        that should be tuned.\n3. In addition, CloudFlare provides a [response guide][2]
        for all customers to reduce the impact of a DDoS attack on your application.\n\n[1]:
        https://developers.cloudflare.com/ddos-protection/managed-rulesets/adjust-rules/false-positive/\n[2]:
        https://developers.cloudflare.com/ddos-protection/best-practices/respond-to-ddos-attacks/",
        "tags": ["technique:T1498-network-denial-of-service", "scope:cloudflare",
        "tactic:TA0040-impact", "source:cloudflare", "mitre_platform:network", "mitre_platform:iaas",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["mitre_platform:network", "source:cloudflare", "mitre_platform:iaas",
        "technique:T1498-network-denial-of-service", "security:attack", "tactic:TA0040-impact",
        "scope:cloudflare"], "version": 87, "id": "def-000-lhq", "updatedAt": 1736369593349,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Cloudtrail SecretsManager secret retrieved
        from AWS CloudShell environment", "createdAt": 1707119727248, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail @http.useragent:*exec-env/CloudShell*
        @evt.name:GetSecretValue", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "cloudtrail_getsecretvalue_cloudshell"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "cloudtrail_getsecretvalue_cloudshell > 0"}], "message":
        "## Goal\nDetect when an AWS secret is retrieved from an AWS CloudShell environment.\n\n##
        Strategy\nMonitor CloudTrail and detect when an AWS secret is retrieved from
        an AWS CloudShell environment. The threat group [LUCR-3][1] uses AWS CloudShell
        in the AWS management console to carry out activities that require direct
        interaction with the AWS API, such as the retrieval of secrets.\n\n## Triage
        and response\n1. Determine if `{{@userIdentity.arn}}` should have carried
        out this operation.\n2. If the API calls were not made by the user:\n  * Rotate
        user credentials.\n  * Rotate the secrets retrieved by the identity, if feasible.\n  *
        Determine what other API calls were made by the user.\n  * Begin your organization''s
        incident response process and investigate.\n\n[1]: https://permiso.io/blog/lucr-3-scattered-spider-getting-saas-y-in-the-cloud",
        "tags": ["technique:T1555-credentials-from-password-stores", "tactic:TA0006-credential-access",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1555-credentials-from-password-stores",
        "source:cloudtrail", "security:attack", "mitre_platform:iaas", "tactic:TA0006-credential-access"],
        "version": 87, "id": "def-000-rcr", "updatedAt": 1736369593493, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Compromised AWS EC2 Instance", "createdAt":
        1641394449128, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail -@level:Error @userIdentity.type:AssumedRole @userIdentity.session_name:i-*
        -@network.client.geoip.invalidAddress:\"AWS Internal\" -@threat_intel.results.category:corp_vpn",
        "groupByFields": ["@userIdentity.accessKeyId"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@network.client.geoip", "metrics":
        ["@network.client.geoip"], "aggregation": "geo_data", "name": ""}], "options":
        {"evaluationWindow": 0, "detectionMethod": "impossible_travel", "maxSignalDuration":
        86400, "keepAlive": 21600, "impossibleTravelOptions": {"baselineUserLocations":
        true, "detectIpTransition": false}}, "cases": [{"name": "", "status": "medium",
        "notifications": []}], "message": "\n## Goal\nDetect an Impossible Travel
        event when a `@userIdentity.type:` `{{@userIdentity.type}}` uses an AWS EC2
        access key and filter out VPNs and AWS Internal IPs.\n\n## Strategy\nThe Impossible
        Travel detection type''s algorithm compares the GeoIP data of the last log
        and the current log to determine if the EC2 instance with `@userIdentity.session_name:`
        `{{@userIdentity.session_name}}`  traveled more than 500km at over 1,000km/hr
        and used an AWS EC2 access key.\n\n## Triage and response\n1. Determine if
        the `@userIdentity.accessKeyId:` `{{@userIdentity.accessKeyId}}` for `@userIdentity.session_name:`
        `{{@userIdentity.session_name}}` instance should be used from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`.\n2.
        If the EC2 access key should not be used from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`., then
        consider isolating the account and reset credentials.\n3. Audit any instance
        actions that may have occurred after the illegitimate login.\n\n**NOTE** VPNs
        and other anonymous IPs are filtered out of this signal\n\n## Changelog\n*
        7 April 2022 - Updated rule name and signal message.\n* 30 September 2024
        - Updated query to replace attribute `@threat_intel.results.category:anonymizer`.",
        "tags": ["scope:iam", "iaas:aws", "technique:T1078-valid-accounts", "source:cloudtrail",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "source:cloudtrail", "scope:iam", "mitre_platform:iaas", "iaas:aws", "tactic:TA0001-initial-access",
        "technique:T1078-valid-accounts"], "version": 88, "id": "gay-o0u-6in", "updatedAt":
        1736369594161, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Compromised AWS IAM User Access Key", "createdAt": 1641394450586, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail @userIdentity.type:IAMUser
        @network.client.ip:* -@userIdentity.accessKeyId:\"\" -@threat_intel.results.category:corp_vpn
        -@network.client.geoip.as.domain:microsoft.com -@network.client.geoip.as.domain:amazon.com
        -@network.client.geoip.as.domain:google.com -@network.client.ip:\"AWS Internal\"
        -@network.client.is_private_network_ip:true", "groupByFields": ["@userIdentity.accessKeyId"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@network.client.geoip",
        "metrics": ["@network.client.geoip"], "aggregation": "geo_data", "name": ""}],
        "options": {"evaluationWindow": 0, "detectionMethod": "impossible_travel",
        "maxSignalDuration": 86400, "keepAlive": 21600, "impossibleTravelOptions":
        {"baselineUserLocations": true, "detectIpTransition": false}}, "cases": [{"name":
        "", "status": "medium", "notifications": []}], "message": "## Goal\n\nDetect
        an Impossible Travel event when a `@userIdentity.type:` `{{@userIdentity.type}}`
        uses an AWS IAM access key and filter out VPNs and AWS Internal IPs.\n\n##
        Strategy\n\nThe Impossible Travel detection type''s algorithm compares the
        GeoIP data of the last log and the current log to determine if the IAM user
        with `@userIdentity.session_name:` `{{@userIdentity.session_name}}` traveled
        more than 500km at over 1,000km/hr and used an AWS IAM access key.\n\n## Triage
        and response\n\n1. Determine if the `@userIdentity.accessKeyId:` `{{@userIdentity.accessKeyId}}`
        for `@userIdentity.session_name:` `{{@userIdentity.session_name}}` should
        be used from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`.\n2.
        If the IAM user should not be used from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`, then
        consider isolating the account and reset credentials.\n3. Audit any user actions
        that may have occurred after the illegitimate login.\n\n## Changelog\n\n-
        7 April 2022 - Updated signal message.\n- 3 August 2022 - Fixed null groupby
        field in query.\n- 11 September 2024 - Tuned rule to remove internal network
        IPs and the three major cloud provider IPs: Azure, AWS, and GCP.\n- 30 September
        2024 - Updated query to replace attribute `@threat_intel.results.subcategory:anonymizer`.\n-
        18 November 2024 - Updated query to remove when accessKeyId is empty.\n",
        "tags": ["scope:iam", "iaas:aws", "technique:T1078-valid-accounts", "source:cloudtrail",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "source:cloudtrail", "scope:iam", "mitre_platform:iaas", "iaas:aws", "tactic:TA0001-initial-access",
        "technique:T1078-valid-accounts"], "version": 89, "id": "yqe-gyj-js8", "updatedAt":
        1736369594298, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Consent given to application associated with business email compromise attacks
        in Microsoft 365", "createdAt": 1718263067270, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:microsoft-365 service:AzureActiveDirectory
        @evt.name:\"Consent to application.\" @ModifiedProperties.TargetId.ServicePrincipalNames.NewValue:(*caffae8c-0882-4c81-9a27-d1803af53a40*
        OR *ff8d92dc-3d82-41d6-bcbd-b9174d16362* OR *a245e8c0-b53c-4b67-9b45-751d1dff8e6b*
        OR *e9a7fea1-1cc0-4cd9-a31b-9137ca5deedd*)", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "consent_to_application_associated_with_business_email_compromise"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "consent_to_application_associated_with_business_email_compromise
        > 0"}], "message": "## Goal\nDetect when a user consents to an application
        associated with business email compromise.\n\n## Strategy\nMonitor Microsoft
        365 Exchange audit logs to look for the operation `Consent to application.`.
        Attackers who have gained unauthorized access to a victim''s account may add
        applications in order to collect emails or send out further phishing emails.
        In this detection, we try to identify the following applications:\n\n* eM
        Client - a desktop email client with full Microsoft Office 365 synchronization.\n*
        PerfectData Software - exports mailboxes for backup purposes.\n* Newsletter
        Software Supermailer - email newsletter software to send out high volume emails.\n*
        SigParser - email signature contact scraping and parsing.\n\n## Triage and
        response\n1. Identify any additional unusual behaviors:\n    * Previous failed
        logins.\n    * Anomalous geo-location.\n    * VPN usage.\n2. Determine if
        there is a legitimate use case for the new application by contacting the user
        `{{@usr.email}}`.\n3. If `{{@usr.email}}` is not aware of the application:\n    *
        Investigate other activities performed by the user `{{@usr.email}}` using
        the **Cloud SIEM - User Investigation** dashboard.\n    * Begin your organization''s
        incident response process and investigate.\n\n## Changelog\n* 29 July 2024
        - Added additional application ID for SigParser.\n* 13 August 2024 - Added
        additional application to markdown.", "tags": ["technique:T1566-phishing",
        "source:microsoft-365", "tactic:TA0009-collection", "mitre_platform:saas",
        "mitre_platform:office-suite", "scope:microsoft-365", "technique:T1114-email-collection",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0001-initial-access", "technique:T1566-phishing", "mitre_platform:office-suite",
        "mitre_platform:saas", "source:microsoft-365", "tactic:TA0009-collection",
        "mitre_platform:cloud", "scope:microsoft-365", "technique:T1114-email-collection",
        "security:attack"], "version": 87, "id": "def-000-ihv", "updatedAt": 1736369596008,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "ConsoleLogin event correlates privileged
        policy applying to a role", "createdAt": 1660638897239, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "event_count", "name": "potential_brute_force_attack_on_aws_console_login",
        "defaultRuleId": "8d2-d0c-0b6", "correlatedByFields": ["@userIdentity.arn"]},
        {"groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "event_count", "name": "aws_iam_privileged_policy_was_applied_to_a_role",
        "defaultRuleId": "def-000-4z1", "correlatedByFields": ["@userIdentity.arn"]}],
        "options": {"evaluationWindow": 7200, "detectionMethod": "threshold", "maxSignalDuration":
        10800, "keepAlive": 7200, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "Brute force lead to privileged policy applying to a role", "status":
        "critical", "notifications": [], "condition": "potential_brute_force_attack_on_aws_console_login
        > 0 && aws_iam_privileged_policy_was_applied_to_a_role > 0"}], "message":
        "## Goal\nCorrelate a brute force login with a privileged policy being applied
        to a role.\n\n## Strategy\nCorrelate the [Potential brute force attack on
        AWS ConsoleLogin][1] and [cloudtrail AWS IAM AdministratorAccess policy was
        applied to a role][2] signals based on the ARN: {{@userIdentity.arn}}.\n\n##
        Triage and response\n1. Set signal triage state to `Under Review`.\n2. Determine
        if the brute force attack was successful.\n    * If the login was not legitimate:\n        *
        Revert the privileged policy change\n        * Rotate credentials on the brute
        forced account\n        * Enable MFA if it is not already\n    * If the login
        was legitimate:\n        * Triage the signal as a false positive\n\n[1]: https://docs.datadoghq.com/security/default_rules/aws-iam-brute-force-consolelogin/\n[2]:
        https://docs.datadoghq.com/security/default_rules/cloudtrail-aws-iam-apply-privilegedpolicy-to-role/",
        "tags": ["iaas:aws", "scope:aws", "source:aws", "security:attack"], "hasExtendedTitle":
        true, "type": "signal_correlation", "filters": [], "defaultTags": ["security:attack",
        "scope:aws", "source:aws", "iaas:aws"], "version": 118, "id": "vur-0bv-k08",
        "updatedAt": 1736369596030, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Container image vulnerability detected", "createdAt":
        1629705613132, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:twistlock @vulnerability.log_type:vulnerability @vulnerability.severity:critical",
        "groupByFields": ["container_name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "critical_severity_vulnerability"}, {"query":
        "source:twistlock @vulnerability.log_type:vulnerability @vulnerability.severity:high",
        "groupByFields": ["container_name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "high_severity_vulnerability"}, {"query":
        "source:twistlock @vulnerability.log_type:vulnerability @vulnerability.severity:medium",
        "groupByFields": ["container_name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "medium_severity_vulnerability"}, {"query":
        "source:twistlock @vulnerability.log_type:vulnerability @vulnerability.severity:low",
        "groupByFields": ["container_name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "low_severity_vulnerability"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "Critical Severity Vulnerabiluty", "status": "critical", "notifications":
        [], "condition": "critical_severity_vulnerability > 0"}, {"name": "High Severity
        Vulnerabiluty", "status": "high", "notifications": [], "condition": "high_severity_vulnerability
        > 0"}, {"name": "Medium Severity Vulnerabiluty", "status": "medium", "notifications":
        [], "condition": "medium_severity_vulnerability > 0"}, {"name": "Low Severity
        Vulnerabiluty", "status": "low", "notifications": [], "condition": "low_severity_vulnerability
        > 0"}], "message": "## Goal\nDetect vulnerabilities in container images.\n\n##
        Strategy\nThis rule lets you monitor Twistlock logs `(@vulnerability.log_type:vulnerability)`
        to detect vulnerabilities in a container image. \n\n## Triage and response\n1.
        Determine the impact of this vulnerability.\n2. Update the container image
        in the registry with a patched version of the software.\n3. Deploy the new
        image to all containers running the vulnerable image.\n\n## Change Log\n29
        Jun 2022 - Added queries for various vulnerability severity levels.", "tags":
        ["source:twistlock", "mitre_platform:containers"], "hasExtendedTitle": true,
        "type": "log_detection", "filters": [], "defaultTags": ["source:twistlock",
        "mitre_platform:containers"], "version": 87, "id": "822-aa2-555", "updatedAt":
        1736369596179, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Container violated compliance standards", "createdAt": 1629705615462, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:twistlock @vulnerability.log_type:compliance
        @vulnerability.severity:critical", "groupByFields": ["container_name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "critical_severity_vulnerability"},
        {"query": "source:twistlock @vulnerability.log_type:compliance @vulnerability.severity:high",
        "groupByFields": ["container_name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "high_severity_vulnerability"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "Critical Severity Vulnerability", "status": "critical", "notifications":
        [], "condition": "critical_severity_vulnerability > 0"}, {"name": "High Severity
        Vulnerability", "status": "high", "notifications": [], "condition": "high_severity_vulnerability
        > 0"}], "message": "## Goal\nDetect when a container is not running within
        compliance standards.\n\n## Strategy\nThis rule lets you monitor Twistlock
        logs to detect when a `High` or `Critical` severity compliance issue is discovered
        in a running container. \n\n## Triage and response\n1. Determine the impact
        of the compliance finding.\n2. Remediate the compliance finding.\n\n## Change
        Log\n27 Jun 2022 - Updated rule and added findings for critical vulnerabilities.",
        "tags": ["source:twistlock", "mitre_platform:containers"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:twistlock",
        "mitre_platform:containers"], "version": 87, "id": "c6a-b25-2e9", "updatedAt":
        1736369596599, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Credential Stuffing Attack on Azure", "createdAt": 1629705616254, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:azure.activedirectory
        @evt.category:SignInLogs @evt.outcome:failure @properties.status.errorCode:(50126
        OR 50053 OR 53003 OR 50135 OR 50055)", "groupByFields": ["@network.client.ip",
        "@properties.appId"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@usr.id"], "aggregation": "cardinality", "name": "failed_login_multiple_user_accounts_same_ip_address"},
        {"query": "source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:success
        -message:(\"MFA requirement satisfied by claim in the token\" OR \"MFA requirement
        satisfied by strong authentication\" OR \"MFA requirement skipped due to remembered
        device\" OR \"MFA requirement satisfied by claim provided by external provider\"
        OR \"MFA completed in Azure AD\")", "groupByFields": ["@network.client.ip",
        "@properties.appId"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "successful_login_same_ip_address"}, {"query":
        "source:azure.activedirectory @evt.category:SignInLogs @evt.outcome:failure
        @properties.status.errorCode:(50126 OR 50053 OR 53003 OR 50135 OR 50055)",
        "groupByFields": ["@http.useragent", "@properties.appId"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@usr.id"], "aggregation": "cardinality", "name":
        "failed_login_multiple_user_accounts_same_user_agent"}, {"query": "source:azure.activedirectory
        @evt.category:SignInLogs @evt.outcome:success -message:(\"MFA requirement
        satisfied by claim in the token\" OR \"MFA requirement satisfied by strong
        authentication\" OR \"MFA requirement skipped due to remembered device\" OR
        \"MFA requirement satisfied by claim provided by external provider\" OR \"MFA
        completed in Azure AD\")", "groupByFields": ["@http.useragent", "@properties.appId"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "successful_login_same_user_agent"}], "projectedPerQuery": ["@usr.id"],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Successful login after multiple
        failed login attempts from the same network IP address", "status": "medium",
        "notifications": [], "condition": "failed_login_multiple_user_accounts_same_ip_address
        > 4 && successful_login_same_ip_address > 0"}, {"name": "Successful login
        after multiple failed login attempts from the same user agent", "status":
        "medium", "notifications": [], "condition": "failed_login_multiple_user_accounts_same_user_agent
        > 4 && successful_login_same_user_agent > 0"}, {"name": "Multiple failed login
        attempts from the same network IP address", "status": "info", "notifications":
        [], "condition": "failed_login_multiple_user_accounts_same_ip_address > 4"},
        {"name": "Multiple failed login attempts from the same user agent", "status":
        "info", "notifications": [], "condition": "failed_login_multiple_user_accounts_same_user_agent
        > 4"}], "message": "## Goal\n\nDetect and identify the network IP address
        or user agent when multiple user accounts have login attempt activities recorded.\n\n##
        Strategy\n\nMonitor Azure Active Directory and detect when any `@evt.category`
        is equal to `SignInLogs` and at least 5 of the `@evt.outcome` are equal to
        `false` by the same network IP address or user agent.\n\nSecurity Signal returns
        **MEDIUM** if`@evt.outcome` has value of `success` after 5 multiple failed
        logins by the same network IP address or user agent.\n\n## Triage and response\n\n1.
        Inspect the log and determine if this was a valid login attempt.\n2. If the
        user was compromised, rotate user credentials.\n\n## Changelog\n* 14 June
        2022 - Updated triggering cases to align with other credential stuffing rules.
        Also updated other backend options to reduce noise levels.\n* 26 October 2022
        - Updated query.", "tags": ["source:azure", "tactic:TA0006-credential-access",
        "technique:T1110-brute-force", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:azure", "mitre_platform:cloud", "security:attack", "mitre_platform:iaas",
        "technique:T1110-brute-force", "tactic:TA0006-credential-access"], "version":
        87, "id": "ljt-3f4-8ty", "updatedAt": 1736369597703, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Credential access via registry hive
        dumping", "createdAt": 1720453221982, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:sentinelone endpoint:edr_telemetry @evt.name:PROCESSCREATION
        @tgt.process.name:reg.exe (@tgt.process.cmdline:(*save* OR *export*) @tgt.process.cmdline:(*HKLM\\\\security*
        OR *HKLM\\\\sam* OR *HKLM\\\\system* OR *hklm\\\\sam* OR *hklm\\\\security*
        OR *hklm\\\\system*))", "groupByFields": ["@sentinelone.host_name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "reg_cred_dump_hives"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "reg_cred_dump_hives > 0"}], "message": "## Goal\nDetect
        when a registry hive is dumped.\n\n## Strategy\nCommand line utilities like
        `reg.exe` can be used to dump Security and/or SAM hives. Attackers have dumped
        these hives in an attempt to extract credentials.\n\n## Triage and response\n1.
        Identify which hive is being dumped, and if it is authorized or expected.\n2.
        If it''s not authorized, isolate the host from the network.\n3. Follow your
        organization''s internal processes for investigating and remediating compromised
        systems.", "tags": ["mitre_platform:windows", "source:sentinelone", "scope:sentinelone",
        "technique:T1003-os-credential-dumping", "tactic:TA0006-credential-access",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["scope:sentinelone", "source:sentinelone", "technique:T1003-os-credential-dumping",
        "security:attack", "mitre_platform:windows", "tactic:TA0006-credential-access"],
        "version": 87, "id": "def-000-3vo", "updatedAt": 1736369597686, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Credential added to Azure AD application",
        "createdAt": 1659358057731, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:azure.activedirectory @evt.name:(\"Update application \u2013
        Certificates and secrets management \" OR \"Add service principal credentials\"
        OR \"Update application \u2013 Certificates and secrets management\") @usr.id:*@*
        @evt.outcome:success @evt.category:AuditLogs", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "credential_added_azure_ad_application"}, {"query": "source:microsoft-365
        @evt.name:(\"Update application \u2013 Certificates and secrets management
        \" OR \"Add service principal credentials.\" OR \"Update application \u2013
        Certificates and secrets management\") @usr.id:*@* @evt.outcome:Success",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "credential_added_azure_ad_application_o365"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "credential_added_azure_ad_application > 0 || credential_added_azure_ad_application_o365
        > 0"}], "message": "## Goal\n\nDetects when a user adds a secret or certificate
        to an Azure Active Directory Application.\n\n## Strategy\n\nMonitor Azure
        AD Audit logs for the following `@evt.name`:\n\n- `Update application \u2013
        Certificates and secrets management`\n- `Add service principal credentials`\n\nMonitor
        Microsoft 365 Audit logs for the following `@evt.name`:\n\n- `Update application
        \u2013 Certificates and secrets management`\n- `Add service principal credentials.`\n\nAn
        attacker can add a secret or certificate to an application in order to connect
        to Azure AD as the application and perform API operation leveraging the application
        permissions that are assigned to it.\n\n## Triage and response\n\n1. Determine
        if `{{@usr.id}}` should have made a `{{@evt.name}}` API call.\n2. If the API
        call was not made by the user:\n   * Remove the suspicious key.\n   * Invalidate
        all existing refresh tokens. This ensures the attacker is unable to connect
        to your tenant.\n   * Begin your organization''s Incident Response (IR) process.\n3.
        If the API call was made by the user:\n   * Ensure the change was authorized.",
        "tags": ["source:azure", "technique:T1098-account-manipulation", "mitre_platform:saas",
        "scope:azure", "mitre_platform:office-suite", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "tactic:TA0003-persistence",
        "security:attack", "mitre_platform:saas", "technique:T1098-account-manipulation",
        "source:azure", "mitre_platform:office-suite", "scope:azure"], "version":
        87, "id": "edj-z5a-yvu", "updatedAt": 1736369597680, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Credential added to rarely used Azure
        AD application", "createdAt": 1660296773105, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:azure.activedirectory @evt.name:(\"Update
        application \u2013 Certificates and secrets management \" OR \"Add service
        principal credentials\" OR \"Update application \u2013 Certificates and secrets
        management\") @evt.outcome:success @evt.category:AuditLogs", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "metric":
        "@properties.targetResources.displayName", "metrics": ["@properties.targetResources.displayName"],
        "aggregation": "new_value", "name": ""}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 86400, "keepAlive":
        3600, "newValueOptions": {"forgetAfter": 28, "learningDuration": 7, "learningThreshold":
        0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv": true},
        "cases": [{"name": "", "status": "medium", "notifications": []}], "message":
        "## Goal\n\nDetects when a user adds a secret or certificate to an Azure Active
        Directory Application that is not regularly updated.\n\n## Strategy\n\nMonitor
        Azure AD Audit logs for the following `@evt.name`:\n\n- `Update application
        \u2013 Certificates and secrets management`\n- `Add service principal credentials`\n\nMonitor
        Microsoft 365 Audit logs for the following `@evt.name`:\n\n- `Update application
        \u2013 Certificates and secrets management`\n- `Add service principal credentials.`\n\nAn
        attacker can add a secret or certificate to an application in order to connect
        to Azure AD as the application and perform API operation leveraging the application
        permissions that are assigned to it. An attacker may target an application
        that is seldom changed to avoid detection. Using the `New Value` detection
        method, a signal is raised when an application not seen in the previous 7
        days has credentials added.\n\n## Triage and response\n\n1. Determine if `{{@usr.id}}`
        should have made a `{{@evt.name}}` API call.\n2. If the API call was not made
        by the user:\n   * Remove the suspicious key.\n   * Invalidate all existing
        refresh tokens. This ensures the attacker is unable to connect to your tenant.\n   *
        Begin your organization''s Incident Response (IR) process.\n3. If the API
        call was made by the user:\n   * Ensure the change was authorized.\n\n## Changelog\n2
        November 2022 - Updated severity.", "tags": ["source:azure", "technique:T1098-account-manipulation",
        "scope:azure", "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1098-account-manipulation",
        "tactic:TA0003-persistence", "source:azure", "mitre_platform:iaas", "security:attack",
        "scope:azure"], "version": 87, "id": "31u-j0s-sos", "updatedAt": 1736369597695,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Credential stuffing attack", "createdAt":
        1629705616307, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "@evt.category:authentication @evt.outcome:failure", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@usr.id"], "aggregation":
        "cardinality", "name": "unique_users_failing_to_login"}, {"query": "@evt.category:authentication
        @evt.outcome:success", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "successful_login"}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "Successful - Greater than 50",
        "status": "high", "notifications": [], "condition": "unique_users_failing_to_login>50
        && successful_login>=1"}, {"name": "Successful", "status": "medium", "notifications":
        [], "condition": "unique_users_failing_to_login>25 && successful_login>=1"},
        {"name": "Attempt", "status": "info", "notifications": [], "condition": "unique_users_failing_to_login>25"}],
        "message": "## Goal\nDetect Account Take Over (ATO) through credential stuffing
        attack.\n\nA credential stuffing attack is used to gain initial access by
        compromising user accounts.\n\nThe attacker obtains a list of compromised
        usernames and passwords from a previous user database breach, phishing attempt,
        or other means. Then, they use the list of username and passwords to attempt
        to login to accounts on your application.\n\nIt is common for an attacker
        to use multiple IP addresses to target your application in order to distribute
        the attack load for load balancing purposes, to make it more difficult to
        detect, or make it more difficult to block.\n\n## Strategy\n**To determine
        a successful attempt:** Detect a high number of failed logins from at least
        25 unique users and at least one successful login for a user within a period
        of time from the same IP address.\n\n**To determine an unsuccessful attempt:**
        Detect a high number of failed logins from at least ten unique users within
        a period of time from the same IP address.\n\n## Triage and response\n\nUse
        [this Datadog runbook](https://app.datadoghq.com/notebook/credentialstuffingrunbook)
        to assist in your investigation.\n\n1. Determine if it is a legitimate attack
        or a false positive\n2. Determine compromised users\n3. Remediate compromised
        user accounts\n", "tags": ["category:authentication", "tactic:TA0006-credential-access",
        "template:true", "technique:T1110-brute-force", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:attack", "technique:T1110-brute-force",
        "category:authentication", "template:true", "tactic:TA0006-credential-access"],
        "version": 87, "id": "clw-d08-ehj", "updatedAt": 1736369597708, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Credential stuffing attack on Auth0",
        "createdAt": 1629705615602, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:auth0 @evt.name:(failed_login_incorrect_password OR failed_login_invalid_email_or_username)",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@usr.id"], "aggregation": "cardinality", "name": "unique_users_failing_to_login"},
        {"query": "source:auth0 @evt.name:success_login", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "successful_login"}], "options": {"evaluationWindow": 3600, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 21600}, "cases": [{"name":
        "Successful", "status": "high", "notifications": [], "condition": "unique_users_failing_to_login>10
        && successful_login>=1"}, {"name": "Attempt", "status": "info", "notifications":
        [], "condition": "unique_users_failing_to_login>10"}], "message": "## Goal\nDetect
        Account Take Over (ATO) through credential stuffing attack.\n\n## Strategy\n**To
        determine a successful attempt:** Detect a high number of failed logins from
        at least ten unique users and at least one successful login for a user. This
        generates a `HIGH` severity signal.\n\n**To determine an unsuccessful attempt:**
        Detect a high number of failed logins from at least ten unique users. This
        generates an `INFO` severity signal.\n\n## Triage and response\n1. Inspect
        the logs to see if this was a valid login attempt.\n2. See if 2FA was authenticated\n3.
        If the user was compromised, rotate user credentials.\n\n## Changelog\n13
        June 2022 - Updated Keep Alive window and evaluation window to reduce rule
        noise.", "tags": ["tactic:TA0006-credential-access", "source:auth0", "technique:T1110-brute-force",
        "mitre_platform:identity-provider", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:auth0", "security:attack", "technique:T1110-brute-force",
        "tactic:TA0006-credential-access", "mitre_platform:identity-provider"], "version":
        87, "id": "6a7-df6-9aa", "updatedAt": 1736369597833, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Credential stuffing attack on Jumpcloud",
        "createdAt": 1660800241219, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:jumpcloud @evt.name:(user_login_attempt OR login_attempt)
        @evt.outcome:false", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@usr.name"], "aggregation": "cardinality", "name":
        "unique_users_failing_to_login"}, {"query": "source:jumpcloud @evt.name:(user_login_attempt
        OR login_attempt) @evt.outcome:true", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "successful_login"}], "options": {"evaluationWindow": 3600, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 21600}, "cases": [{"name":
        "Successful", "status": "medium", "notifications": [], "condition": "unique_users_failing_to_login
        > 6 && successful_login > 0"}, {"name": "Attempt", "status": "info", "notifications":
        [], "condition": "unique_users_failing_to_login > 6"}], "message": "## Goal\nDetect
        an account take over (ATO) through credential stuffing attack against a Jumpcloud
        account.\n\n## Strategy\n**To determine a successful attempt:** Detect a high
        number of failed logins from at least seven unique users and at least one
        successful login for a user within a period of time from the same IP address.\n\n**To
        determine an unsuccessful attempt:** Detect a high number of failed logins
        from at least seven unique users within a period of time from the same IP
        address.\n\n## Triage and response\n\n1. Determine if it is a legitimate attack
        or a false positive.\n2. Determine compromised users.\n3. Remediate compromised
        user accounts.", "tags": ["source:jumpcloud", "tactic:TA0006-credential-access",
        "technique:T1110-brute-force", "mitre_platform:identity-provider", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "technique:T1110-brute-force", "source:jumpcloud", "tactic:TA0006-credential-access",
        "mitre_platform:identity-provider"], "version": 87, "id": "g6h-rq4-3y9", "updatedAt":
        1736369598315, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Credential stuffing attack on Salesforce", "createdAt": 1629705615364, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:salesforce @evt.name:LoginEvent
        @status:(\"Invalid Password\" OR \"User is Inactive\")", "groupByFields":
        ["@network.client.ip", "@login_url"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@usr.email"], "aggregation": "cardinality", "name": "unique_users_failing_to_login"},
        {"query": "source:salesforce @evt.name:LoginEvent @status:\"Success\"", "groupByFields":
        ["@network.client.ip", "@login_url"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "successful_login"}], "options": {"evaluationWindow":
        900, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "at least 1 unique login success from a single IP",
        "status": "medium", "notifications": [], "condition": "unique_users_failing_to_login
        >= 5 && successful_login>=1"}, {"name": "at least 5 unique users have failed
        to login from a single IP", "status": "low", "notifications": [], "condition":
        "unique_users_failing_to_login >= 5"}], "message": "## Goal\nDetect an account
        take over (ATO) through credential stuffing attack against a Salesforce account.\n\nA
        credential stuffing attack is used to gain initial access by compromising
        user accounts.\n\nThe attacker obtains a list of compromised usernames and
        passwords from a previous user database breach, phishing attempt, or other
        means. Then, they use the list of username and passwords to attempt to login
        to accounts on your application.\n\nIt is common for an attacker to use multiple
        IP addresses to target your application in order to distribute the attack
        load for load balancing purposes, to make it more difficult to detect, or
        make it more difficult to block.\n\n## Strategy\n**To determine a successful
        attempt:** Detect a high number of failed logins from at least ten unique
        users and at least one successful login for a user within a period of time
        from the same IP address.\n\n**To determine an unsuccessful attempt:** Detect
        a high number of failed logins from at least ten unique users within a period
        of time from the same IP address.\n\n## Triage and response\n\n1. Determine
        if it is a legitimate attack or a false positive.\n2. Determine compromised
        users.\n3. Remediate compromised user accounts.\n\n## Changelog\n* 5 January
        2023 - Updated query, severity of cases, and group by values.\n", "tags":
        ["source:salesforce", "tactic:TA0006-credential-access", "scope:salesforce",
        "mitre_platform:saas", "technique:T1110-brute-force", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:salesforce", "scope:salesforce", "mitre_platform:cloud", "mitre_platform:saas",
        "technique:T1110-brute-force", "security:attack", "tactic:TA0006-credential-access"],
        "version": 87, "id": "1gv-r5k-jeb", "updatedAt": 1736369598297, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Crowdstrike Alerts", "createdAt": 1679612745640,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "@event.severity_name:Informational",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@event.severity_name:Low",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@event.severity_name:Medium",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@event.severity_name:High",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@event.severity_name:Critical",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}], "options": {"evaluationWindow": 1800,
        "detectionMethod": "third_party", "maxSignalDuration": 86400, "keepAlive":
        1800, "thirdPartyRuleOptions": {"signalTitleTemplate": "Crowdstrike {{@evt.type}}
        - {{ @event.detect_name }}{{ @event.incident_type }}{{ @evt.name }} alert",
        "defaultStatus": "medium", "rootQueries": [{"query": "source:crowdstrike @evt.type:DetectionSummaryEvent",
        "groupByFields": ["@host"]}, {"query": "source:crowdstrike @evt.type:FirewallMatchEvent",
        "groupByFields": ["@event.host_name"]}, {"query": "source:crowdstrike @evt.type:IdentityProtectionEvent",
        "groupByFields": ["@usr.id"]}, {"query": "source:crowdstrike @evt.type:IdpDetectionSummaryEvent",
        "groupByFields": ["@event.source_account_upn"]}, {"query": "source:crowdstrike
        @evt.type:IncidentSummaryEvent", "groupByFields": ["@host"]}], "defaultNotifications":
        []}, "relatedSignalsFields": ["@network.client.ip", "@host", "@usr.id"]},
        "cases": [{"name": "", "status": "info", "notifications": []}, {"name": "",
        "status": "low", "notifications": []}, {"name": "", "status": "medium", "notifications":
        []}, {"name": "", "status": "high", "notifications": []}, {"name": "", "status":
        "critical", "notifications": []}], "message": "## Goal \nDetect when Crowdstrike
        raises an alert.\n\n## Strategy\nCrowdStrike provides a centralized platform
        for monitoring and managing security-related notifications, alerts, and actions
        across endpoints and cloud workloads. This rule uses the third-party detection
        method to identify the following Crowdstrike events:\n- DetectionSummaryEvent\n-
        FirewallMatchEvent\n- IdentityProtectionEvent\n- IdpDetectionSummaryEvent\n-
        IncidentSummaryEvent\n\n## Triage and response\n1. Investigate the Crowdstrike
        alert to determine if it is malicious or benign.\n2. If the alert is benign,
        consider including the user, host or IP address in a suppression list. See
        [Best practices for creating detection rules with Datadog Cloud SIEM][1] for
        more information.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#customize-security-signal-messages-to-fit-your-environment\n",
        "tags": ["source:crowdstrike", "scope:crowdstrike", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:crowdstrike",
        "security:attack", "source:crowdstrike"], "version": 86, "id": "def-000-g5w",
        "updatedAt": 1736369598691, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "thirdPartyCases": [{"name": "", "status": "info", "notifications":
        [], "query": "@event.severity_name:Informational"}, {"name": "", "status":
        "low", "notifications": [], "query": "@event.severity_name:Low"}, {"name":
        "", "status": "medium", "notifications": [], "query": "@event.severity_name:Medium"},
        {"name": "", "status": "high", "notifications": [], "query": "@event.severity_name:High"},
        {"name": "", "status": "critical", "notifications": [], "query": "@event.severity_name:Critical"}],
        "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Customer Maintenance on VIP", "createdAt": 1706718944557, "isDefault": false,
        "isPartner": true, "isEnabled": true, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "@bottomline.mainframe.activity.resource.code:BNKCSTF
        and @bottomline.mainframe.activity.customer.id:300842 ", "groupByFields":
        ["@bottomline.mainframe.activity.usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        900, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "Customer Maintenance by User", "status": "high",
        "notifications": [], "condition": "a > 0"}], "message": "@{{bottomline.mainframe.activity.usr.id}}
        performed customer maintenance on VIP account", "tags": [], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "version": 56, "id": "ext-001-btm",
        "updatedAt": 1736369598813, "blocking": false, "partnerIntegrationId": "bottomline-recordandreplay",
        "metadata": {"entities": null, "sources": null}, "updateAuthorId": 1615666,
        "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Detected login from two IPs with impossible
        travel time", "createdAt": 1706718944607, "isDefault": false, "isPartner":
        true, "isEnabled": true, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "@bottomline.mainframe.activity.resource.code:Login
        ", "groupByFields": ["@bottomline.mainframe.activity.usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@network.client.geoip", "metrics":
        ["@network.client.geoip"], "aggregation": "geo_data", "name": ""}], "options":
        {"evaluationWindow": 900, "detectionMethod": "impossible_travel", "maxSignalDuration":
        86400, "keepAlive": 3600, "impossibleTravelOptions": {"baselineUserLocations":
        true, "detectIpTransition": false}}, "cases": [{"name": "", "status": "high",
        "notifications": []}], "message": "User logged in from two IPs in short period
        with impossible travel time", "tags": [], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "version": 56, "id": "ext-002-btm", "updatedAt":
        1736369599884, "blocking": false, "partnerIntegrationId": "bottomline-recordandreplay",
        "metadata": {"entities": null, "sources": null}, "updateAuthorId": 1615666,
        "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Domain added to Google Workspace allowlisted
        domains", "createdAt": 1681978621902, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:gsuite service:admin @evt.name:ADD_TRUSTED_DOMAINS",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "google_workspace_add_domain_to_allowlisted_domains"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "google_workspace_add_domain_to_allowlisted_domains > 0"}],
        "message": "## Goal\nDetect when a domain is added to Google Workspace''s
        allowlisted domains.\n\n## Strategy\nThis rule monitors Google Workspace logs
        to determine when a domain was added to Google Workspace''s allowlisted domains.
        An attacker may add a trusted domain to reduce the level of security controls
        to allow for the exfiltration or collection of data.\n\n## Triage and response\n1.
        Reach out to the user or owner of the service account to determine if this
        action is legitimate.\n2. If the action is legitimate, consider including
        the user in a suppression list. See [Best practices for creating detection
        rules with Datadog Cloud SIEM][1] for more information.\n3. Otherwise, use
        the Cloud SIEM - User Investigation dashboard to see if the user: `{{@usr.email}}`
        has taken other actions.\n4. If the results of the triage indicate that an
        attacker has taken the action, begin your company''s incident response process
        and an investigation.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["tactic:TA0004-privilege-escalation", "source:gsuite", "scope:gsuite",
        "technique:T1098-account-manipulation", "mitre_platform:saas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["scope:gsuite", "mitre_platform:cloud", "mitre_platform:saas",
        "technique:T1098-account-manipulation", "source:gsuite", "security:attack",
        "tactic:TA0004-privilege-escalation"], "version": 85, "id": "def-000-o5b",
        "updatedAt": 1736369604473, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "EC2 instance requested a suspicious domain", "createdAt":
        1629705617168, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries": [{"query":
        "@dns.question.name:(*.fit. OR *.work. OR *.webcam. OR *.loan. OR *.cf.) -@route53_edge_location:*",
        "groupByFields": ["instance-id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "suspicious_tld"}, {"query": "@dns.question.name:(*.no-ip.
        OR *.hopto.org OR *.myftp.org OR *.us.to OR *.myvpc.com OR *.dlinkddns.com
        OR *.myftp.biz) -@route53_edge_location:*", "groupByFields": ["instance-id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "suspicious_ddns"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "TLD", "status": "medium", "notifications": [], "condition": "suspicious_tld
        > 0"}, {"name": "Dynamic DNS", "status": "medium", "notifications": [], "condition":
        "suspicious_ddns > 0"}], "message": "## WARNING: This rule is being deprecated
        on 9 March 2023.\n\n## Goal\nDetect when a requested domain has a suspicious
        TLD.\n\n## Strategy\nInspect the Route 53 logs and determine if the TLD of
        the DNS question (`@dns.question.name`) matches one of the top 5 TLDs on [Spamhaus''s
        Most Abused Top Level Domains list][1].\n\n## Triage and response\n1. Determine
        which instance is associated with the DNS request.\n2. Determine whether the
        domain name which was requested (`dns.question.name`) should be permitted.
        If not, conduct an investigation and determine what requested the domain and
        determine if the AWS metadata credentials were accessed by an attacker.\n\n[1]:
        https://www.spamhaus.org/statistics/tlds/\n", "tags": ["source:route53", "iaas:aws",
        "mitre_platform:network", "technique:T1071-application-layer-protocol", "tactic:TA0011-command-and-control",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "security:attack", "mitre_platform:iaas", "iaas:aws", "technique:T1071-application-layer-protocol",
        "mitre_platform:network", "source:route53", "tactic:TA0011-command-and-control"],
        "version": 3, "id": "c07-f8e-051", "updatedAt": 1734518837109, "blocking":
        false, "deprecationDate": 1678320000000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "EC2 instance resolved a suspicious AWS metadata DNS query",
        "createdAt": 1629705614183, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries":
        [{"query": "source:route53 @answers.Rdata:169.254.169.254 -@route53_edge_location:*
        -@dns.question.name:instance-data*", "groupByFields": ["instance-id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "domain_resolve_to_metadata_ip"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "", "status": "high", "notifications": [], "condition": "domain_resolve_to_metadata_ip
        > 0"}], "message": "## WARNING: This rule is being deprecated on 26 March
        2023.\n\n## Goal\nDetect when a requested domain resolves to the AWS Metadata
        IP (169.254.169.254).\n\n## Strategy\nInspect the Route 53 logs and determine
        if the response data for a DNS request matches the AWS Metadata IP (169.254.169.254).
        This could indicate an attacker is attempting to steal your credentials from
        the AWS metadata service.\n\n## Triage and response\n1. Determine which instance
        is associated with the DNS request.\n2. Determine whether the domain name
        which was requested (`dns.question.name`) should be permitted. If not, conduct
        an investigation and determine what requested the domain and determine if
        the AWS metadata credentials were accessed by an attacker.\n\n## Changelog\n*
        19 May 2022 - Updated rule query.\n* 5 June 2022 - Updated rule query.", "tags":
        ["technique:T1552-unsecured-credentials", "source:route53", "iaas:aws", "tactic:TA0006-credential-access",
        "mitre_platform:network", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:attack", "tactic:TA0006-credential-access",
        "technique:T1552-unsecured-credentials", "mitre_platform:iaas", "iaas:aws",
        "mitre_platform:network", "source:route53"], "version": 3, "id": "8c5-34f-fa2",
        "updatedAt": 1734518887385, "blocking": false, "deprecationDate": 1679788800000,
        "metadata": {"entities": null, "sources": null}, "creator": {"handle": "",
        "name": ""}, "updater": {"handle": "", "name": ""}}, {"name": "Email with
        malicious attachment opened by user", "createdAt": 1730191974896, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:abnormal-security
        @service:abnormal-security-threats @message.isRead:true @messsage.attackType:Malware",
        "groupByFields": ["@messages.toAddresses"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "message_with_malicious_attachment"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "message_with_malicious_attachment > 0"}], "message": "##
        Goal\nDetect when an email with a malicious attachment is opened. \n\n## Strategy\nThis
        rule monitors Abnormal logs to detect when a malicious file is opened by a
        user.\n\n## Triage and response\n1. Investigate the user, `{{@messages.toAddresses}}`,
        who was impacted by the email.\n2. If confirmed as a threat, implement measures
        to block or limit the impact of the suspicious activity.\n3. Follow company
        procedures for handling malicious files, including isolating the endpoint,
        running antivirus/antimalware scans, analyzing logs, and updating security
        policies.", "tags": ["technique:T1566-phishing", "mitre_platform:saas", "source:abnormal-security",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "tactic:TA0001-initial-access", "security:attack",
        "mitre_platform:saas", "technique:T1566-phishing", "source:abnormal-security"],
        "version": 19, "id": "def-000-9rc", "updatedAt": 1736369608436, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Email with spam category opened by user",
        "createdAt": 1730191974879, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:abnormal-security @service:abnormal-security-threats @message.isRead:true
        @messsage.attackType:Spam", "groupByFields": ["@messages.toAddresses"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "message_with_spam"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "message_with_spam > 0"}], "message": "## Goal\nDetect when
        a spam email is opened. \n\n## Strategy\nThis rule monitors Abnormal logs
        to detect when a spam email is opened by a user.\n\n## Triage and response\n1.
        Investigate the user, `{{@messages.toAddresses}}`, who was impacted by the
        email.\n2. If confirmed as a threat, implement measures to block or limit
        the impact of the suspicious activity.\n3. Follow company procedures for handling
        malicious files, including isolating the endpoint, running antivirus/antimalware
        scans, analyzing logs, and updating security policies.", "tags": ["technique:T1566-phishing",
        "mitre_platform:saas", "source:abnormal-security", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "tactic:TA0001-initial-access",
        "security:attack", "mitre_platform:saas", "technique:T1566-phishing", "source:abnormal-security"],
        "version": 19, "id": "def-000-u8a", "updatedAt": 1736369608440, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Encrypted administrator password retrieved
        for Windows EC2 instance", "createdAt": 1652794195940, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:cloudtrail @evt.name:GetPasswordData
        @eventSource:ec2.amazonaws.com status:error", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "get_passwordata"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "Error", "status": "low", "notifications": [], "condition": "get_passwordata
        > 0"}], "message": "## Goal\nDetect a user attempting to retrieve the encrypted
        Administrator password for a Windows EC2 instance.\n\n## Strategy\nThis rule
        allows you to monitor CloudTrail and detect if an attacker has attempted to
        retrieve the encrypted Administrator password for a Windows EC2 instance using
        the [`GetPasswordData`][1] API call.\n\n## Triage and response\n1. Determine
        if `{{@userIdentity.session_name}}` should have made a `{{@evt.name}}` API
        call.\n2. If the API call was not made by the user:\n  * Rotate user credentials.\n  *
        Determine what other API calls were made by the user.\n3. If the API call
        was made by the user:\n  * Determine if this user should be accessing this
        EC2 instance.\n  * If Yes, advise the user to speak with the instance owner
        to resolve the error.\n  * If No, see if other API calls were made by the
        user and determine if they warrant further investigation.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html",
        "tags": ["technique:T1555-credentials-from-password-stores", "scope:ec2",
        "iaas:aws", "tactic:TA0006-credential-access", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "tactic:TA0006-credential-access", "technique:T1555-credentials-from-password-stores",
        "source:cloudtrail", "mitre_platform:iaas", "scope:ec2", "iaas:aws"], "version":
        87, "id": "otd-at8-rcy", "updatedAt": 1736369610408, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Exchange Online mail forwarding rule
        enabled", "createdAt": 1630681563200, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 @evt.name:Set-Mailbox -@Parameters.ForwardingSmtpAddress:\"\"
        @Parameters.ForwardingSmtpAddress:* @evt.outcome:True", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "forwarding_rule"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "medium", "notifications": [], "condition": "forwarding_rule
        > 0"}], "message": "## Goal\nDetect when a user sets up a mail forwarding
        rule to another email address. An adversary or insider threat could set a
        forwarding rule to forward all emails to an external email address.\n\n##
        Strategy\nMonitor Microsoft 365 audit logs to look for events with `@evt.name`
        value of `Set-Mailbox`, where a value is set for `@Parameters.ForwardingSmtpAddress`
        and the `@evt.outcome` is `True`.\n\n## Triage and response\n1. Inspect the
        `@Parameters.ForwardingSmtpAddress` for `{{@usr.email}}` to see if it is sending
        email to an external non-company owned domain.\n2. Determine if there is a
        legitimate use case for the mail forwarding rule.\n3. If `{{@usr.email}}`
        is not aware of the mail forwarding rule, investigate all `{{@usr.email}}`
        accounts for anomalous activity. ", "tags": ["source:microsoft-365", "mitre_platform:saas",
        "scope:exchange-server", "mitre_platform:office-suite", "technique:T1137-office-application-startup",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "tactic:TA0003-persistence", "source:microsoft-365", "mitre_platform:saas",
        "security:attack", "technique:T1137-office-application-startup", "mitre_platform:office-suite",
        "scope:exchange-server"], "version": 87, "id": "lw7-2vm-4tl", "updatedAt":
        1736369618697, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Fastly HTTP Requests from Security Scanner", "createdAt": 1629705614728,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:fastly
        @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys* OR *nexpose*
        OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo*
        OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix*
        OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript* OR
        *alert*)", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when a web application
        is being scanned. This identifies attacker IP addresses who are not trying
        to hide their attempt to attack your system. More advanced hackers will use
        an inconspicuous user agent. \n\n## Strategy\nInspect the user agent in the
        HTTP headers to determine if an IP is scanning your application and generate
        an `INFO` signal. \n\n## Triage and response\n1. Determine if this IP is making
        authenticated requests to the application.\n2. If the IP is making authenticated
        requests to the application:\n    * Investigate the HTTP logs and determine
        if the user is attacking your application.\n\nThe HTTP headers in the query
        are from [darkqusar][1]''s [gist][2]. \n\n[1]: https://gist.github.com/darkquasar\n[2]:
        https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n", "tags":
        ["technique:T1190-exploit-public-facing-application", "source:fastly", "mitre_platform:network",
        "scope:fastly", "security:attack", "tactic:TA0001-initial-access"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:network",
        "technique:T1190-exploit-public-facing-application", "source:fastly", "tactic:TA0001-initial-access",
        "security:attack", "scope:fastly"], "version": 87, "id": "216-b0c-f83", "updatedAt":
        1736369619518, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Generic DNS tunnel detected by Zeek", "createdAt": 1713252887668, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:zeek service:generic_dns_tunnels",
        "groupByFields": ["@dns_client"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "zeek_generic_dns_tunnels"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "zeek_generic_dns_tunnels > 0"}], "message": "## Goal\nZeek
        [generic DNS tunnel][1] detected.\n\n## Strategy\nThis rule monitors Zeek
        logs for the generic DNS tunnel detector. The algorithm detects DNS tunnels
        without requiring use of signatures for every DNS tunneling tool. Since the
        algorithm measures information transfer, it is capable of detecting non-malicious
        tunnels that occur all the time. Attackers use DNS tunneling for command and
        control communications, as it is crucial to network operations and security
        monitoring visibility may be limited.\n\n## Triage and response\n1. Assess
        `{{@dns.question.name}}` domain reputation to determine if domain has been
        noted as malicious by vendors.\n2. Check for other signals from the originating
        device as a possible indication that the device has been compromised.\n3.
        If it is determined that the activity is malicious:\n    * Block the domain,
        if it aligns with organization incident response processes.\n    * Begin your
        organization''s incident response process and investigate.\n\n[1]: https://corelight.com/blog/corelight-sensors-detect-the-chachi-rat",
        "tags": ["technique:T1071-application-layer-protocol", "mitre_platform:network",
        "tactic:TA0011-command-and-control", "source:zeek", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0011-command-and-control",
        "security:attack", "mitre_platform:network", "source:zeek", "technique:T1071-application-layer-protocol"],
        "version": 87, "id": "def-000-bxh", "updatedAt": 1736369620608, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub Advanced Security modification",
        "createdAt": 1696403135649, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:(business_advanced_security.disabled
        OR org.advanced_security_disabled_on_all_repos)", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "advanced_security_disabled"}, {"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:(business_advanced_security.disabled_for_new_repos
        OR org.advanced_security_disabled_for_new_repos)", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "advanced_security_disabled_for_new_repos"}, {"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:repo.advanced_security_disabled", "groupByFields":
        ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": "advanced_security_disabled_for_a_repo"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:business.advanced_security_policy_update",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "advanced_security_policy_update"}, {"query":
        "source:(github-telemetry OR github.audit.streaming) @evt.action:org.advanced_security_policy_selected_member_disabled",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "advanced_security_features_disabled_for_repos"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "disabled for all repositories",
        "status": "critical", "notifications": [], "condition": "advanced_security_disabled
        > 0"}, {"name": "disabled for new repositories", "status": "high", "notifications":
        [], "condition": "advanced_security_disabled_for_new_repos > 0"}, {"name":
        "features prevented from being enabled for repositories in the organization",
        "status": "high", "notifications": [], "condition": "advanced_security_features_disabled_for_repos
        > 0"}, {"name": "policy update", "status": "medium", "notifications": [],
        "condition": "advanced_security_policy_update > 0"}, {"name": "disabled for
        a repository", "status": "medium", "notifications": [], "condition": "advanced_security_disabled_for_a_repo
        > 0"}], "message": "## Goal\nDetect when a GitHub Advanced Security setting
        has been disabled.\n\n## Strategy\nThis rule monitors GitHub audit logs for
        when an Advanced Security setting has been disabled. GitHub makes extra security
        features available to customers under an Advanced Security license, including:\n\n*
        Code scanning\n* Secret scanning\n* Dependency review\n\nDisabling these settings
        could lead to a degradation in the organization''s security posture.\n\n##
        Triage and response\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.", "tags":
        ["source:github-telemetry", "source:github", "mitre_platform:saas", "scope:github-telemetry",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        87, "id": "def-000-85z", "updatedAt": 1736369620614, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub Dependabot configuration changed",
        "createdAt": 1696319210349, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:(dependabot_alerts.disable
        OR business_dependabot_alerts.disable)", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "dependabot_alerts_disabled"}, {"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:repository_vulnerability_alerts.disable",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "dependabot_alerts_disabled_for_a_repo"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:dependabot_security_updates.disable",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "dependabot_security_updates_disabled"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:(dependabot_security_updates_new_repos.disable
        OR dependabot_alerts_new_repos.disable OR business_dependabot_alerts_new_repos.disable)",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "dependabot_security_updates_disabled_for_new_repos"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "alerts disabled for all repositories",
        "status": "critical", "notifications": [], "condition": "dependabot_alerts_disabled
        > 0"}, {"name": "security updates disabled for all repositories", "status":
        "medium", "notifications": [], "condition": "dependabot_security_updates_disabled
        > 0"}, {"name": "push protection disabled for all new repositories", "status":
        "low", "notifications": [], "condition": "dependabot_security_updates_disabled_for_new_repos
        > 0"}, {"name": "alerts disabled for a repository", "status": "low", "notifications":
        [], "condition": "dependabot_alerts_disabled_for_a_repo > 0"}], "message":
        "## Goal\n\nDetect when a GitHub Dependabot setting has been disabled.\n\n##
        Strategy\n\nThis rule monitors GitHub audit logs for when a Dependabot setting
        has been disabled. Dependabot will alert developers when a repository is using
        a software dependency with a known vulnerability. Disabling these settings
        could lead to a degradation in the organization''s security posture.\n\n##
        Triage and response\n\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.\n\n- 3 January
        2025 - update detection rule severity from High to Medium and Medium to Low
        on several cases.\n- 3 January 2025 - update naming of rule.\n", "tags": ["source:github-telemetry",
        "source:github", "mitre_platform:saas", "scope:github-telemetry", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "scope:github-telemetry", "security:attack", "mitre_platform:saas",
        "source:github", "tactic:TA0005-defense-evasion", "technique:T1562-impair-defenses",
        "source:github-telemetry"], "version": 82, "id": "def-000-fs2", "updatedAt":
        1736369620705, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub IP allow list", "createdAt": 1696494708141, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:(github-telemetry OR github.audit.streaming)
        @evt.action:ip_allow_list.disable", "groupByFields": ["@github.actor"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "ip_allowlist_disabled"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:ip_allow_list.disable_for_installed_apps",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "ip_allowlist_disabled_for_installed_apps"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:ip_allow_list.enable",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "ip_allowlist_enabled"}, {"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:ip_allow_list.enable_for_installed_apps",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "ip_allowlist_enabled_for_installed_apps"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:(ip_allow_list_entry.create
        OR ip_allow_list_entry.destroy OR ip_allow_list_entry.update)", "groupByFields":
        ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": "ip_allowlist_entries"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "disabled", "status": "low", "notifications": [],
        "condition": "ip_allowlist_disabled > 0"}, {"name": "enabled", "status": "low",
        "notifications": [], "condition": "ip_allowlist_enabled > 0"}, {"name": "disabled
        for installed Github apps", "status": "low", "notifications": [], "condition":
        "ip_allowlist_disabled_for_installed_apps > 0"}, {"name": "enabled for installed
        Github apps", "status": "low", "notifications": [], "condition": "ip_allowlist_enabled_for_installed_apps
        > 0"}, {"name": "entries modified", "status": "info", "notifications": [],
        "condition": "ip_allowlist_entries > 0"}], "message": "## Goal\nDetect when
        a GitHub IP allowlist setting has been modified.\n\n## Strategy\nThis rule
        monitors GitHub audit logs for when an IP allowlist setting has been modified.
        By default, authorized users can access your organization''s resources from
        any IP address. You can restrict access to your organization''s private resources
        by configuring a list that allows or denies access from specific IP addresses.
        Modifying these settings could lead to a degradation in the organization''s
        security posture.\n\n## Triage and response\n1. Determine if the change taken
        by `{{@github.actor}}` is authorized.\n2. If the change was not authorized
        or was unexpected, begin your organization''s incident response process and
        investigate.", "tags": ["source:github-telemetry", "source:github", "mitre_platform:saas",
        "scope:github-telemetry", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        87, "id": "def-000-nf7", "updatedAt": 1736369620728, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub MFA requirement disabled", "createdAt":
        1696494708138, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:(github-telemetry OR github.audit.streaming) @evt.action:(org.disable_two_factor_requirement
        OR business.disable_two_factor_requirement)", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "github_mfa_requirement_disabled"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "github_mfa_requirement_disabled > 0"}], "message": "## Goal\nDetect when
        a GitHub multi-factor authentication (MFA) requirement has been disabled.\n\n##
        Strategy\nThis rule monitors GitHub audit logs for when a GitHub MFA requirement
        has been disabled. The requirement for members to have two-factor authentication
        enabled to access an enterprise/organization was disabled. Attackers may may
        disable or modify MFA mechanisms to enable persistent access to compromised
        accounts.\n\n## Triage and response\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.", "tags":
        ["technique:T1556-modify-authentication-process", "source:github-telemetry",
        "source:github", "mitre_platform:saas", "scope:github-telemetry", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1556-modify-authentication-process", "source:github-telemetry"],
        "version": 87, "id": "def-000-pp9", "updatedAt": 1736369621013, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub OAuth access token compromise",
        "createdAt": 1725925364954, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(github-telemetry OR github.audit.streaming) @programmatic_access_type:(\"OAuth
        access token\" OR \"OAuth access token created before 2021-04-05\") -@network.client.geoip.as.name:\"\"
        -@network.client.geoip.as.domain:(amazon.com OR google.com OR microsoft.com)",
        "groupByFields": ["@hashed_token"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@network.client.geoip.as.name"], "aggregation": "cardinality", "name": "github_asn"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @programmatic_access_type:(\"OAuth
        access token\" OR \"OAuth access token created before 2021-04-05\") -@user_agent:\"\"
        -@network.client.geoip.as.domain:(amazon.com OR google.com OR microsoft.com)",
        "groupByFields": ["@hashed_token"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@user_agent"], "aggregation": "cardinality", "name": "github_user_agent"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "Github activity from ASN", "status": "medium", "notifications":
        [], "condition": "github_asn > 2 && github_user_agent > 2"}], "message": "##
        Goal\n\nDetect when an OAuth access token is used from multiple autonomous
        system numbers (ASNs) and multiple user agents.\n\n## Strategy\n\nThis rule
        monitors GitHub audit logs for anomalous activity related to usage of an OAuth
        access token. By looking at ASNs and user agents, it profiles the expected
        use of that OAuth token and alerts when the activity deviates from more than
        two ASNs or two user agents per user in the defined threshold.\n\n## Triage
        and response\n\n1. Determine if the behavior is unusual for the user:\n   -
        Is the `{{@network.client.geoip.as.name}}` different than expected? And the
        `{{@user_agent}}`?\n   - Speak with the user to verify if the OAuth access
        token behavior is expected.\n2. If the activity is suspicious:\n   - [Block
        the user in GitHub][1] to prevent further access.\n   - Begin your organization''s
        incident response process and investigate.\n\n[1]: https://docs.github.com/en/enterprise-cloud@latest/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization#blocking-a-user-in-the-organization-settings\n\n##
        Changelog\n\n- 25 November 2024 - Updated to exclude common public cloud providers.\n",
        "tags": ["source:github-telemetry", "tactic:TA0006-credential-access", "source:github",
        "mitre_platform:saas", "scope:github-telemetry", "technique:T1528-steal-application-access-token",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["technique:T1528-steal-application-access-token",
        "scope:github-telemetry", "mitre_platform:saas", "source:github", "tactic:TA0006-credential-access",
        "source:github-telemetry", "mitre_platform:cloud", "security:attack"], "version":
        88, "id": "def-000-a7l", "updatedAt": 1736369620998, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub OAuth application access restrictions
        disabled", "createdAt": 1696575670489, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:(github-telemetry OR github.audit.streaming)
        @evt.action:org.disable_oauth_app_restrictions", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "github_oauth_app_access_restrictions_disabled"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "github_oauth_app_access_restrictions_disabled > 0"}], "message": "## Goal\nDetect
        when GitHub OAuth application access restrictions have been disabled.\n\n##
        Strategy\nThis rule monitors GitHub audit logs for when GitHub OAuth application
        access restrictions have been disabled. Organizations can choose which OAuth
        applications have access to their repositories and other resources by enabling
        OAuth app access restrictions. An attacker with unauthorized access could
        authorize a third-party OAuth application allowing them to maintain access
        to a GitHub environment without these restrictions.\n\n## Triage and response\n1.
        Determine if the change taken by `{{@github.actor}}` is authorized.\n2. If
        the change was not authorized or unexpected, begin your organization''s incident
        response process and investigate.", "tags": ["source:github-telemetry", "source:github",
        "mitre_platform:saas", "scope:github-telemetry", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "scope:github-telemetry", "security:attack", "mitre_platform:saas",
        "source:github", "tactic:TA0005-defense-evasion", "technique:T1562-impair-defenses",
        "source:github-telemetry"], "version": 87, "id": "def-000-rou", "updatedAt":
        1736369620986, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub Personal Access Token created by suspicious IP", "createdAt": 1696575670590,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:personal_access_token.request_created
        -@threat_intel.results.category:corp_vpn @threat_intel.results.source.name:spur",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_pat_create_enriched"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "github_pat_create_enriched > 0"}], "message": "## Goal\nDetect
        when a Personal Access Token (PAT) has been created from a suspicious IP.\n\n##
        Strategy\nThis rule monitors GitHub audit logs for when a PAT has been created
        from a suspicious IP. A [phishing campaign][1] reported by Github''s security
        team indicated that attackers may try to create a PAT once they have gained
        unauthorized access to an account to maintain access. Using [Datadog threat
        intelligence][2] the signals raised will have originated from IP addresses
        deemed to be suspicious.\n\n**Note:** By default GitHub does not display the
        source IP address for events in your organization''s audit log. See this [post][3]
        for further information.\n\n## Triage and response\n1. Determine if the behavior
        is unusual for the user:\n    * Is the `@actor_location.country_code` or `@http.useragent`
        different?\n    * If IP addresses are available, is the `@network.client.ip`
        or `@network.client.geoip.as.domain` different than usual?\n    * Speak with
        the user to verify if they added the PAT.\n2. If the activity is suspicious:\n    *
        [Block the user in GitHub][4] to prevent further access.\n    * Begin your
        organization''s incident response process and investigate.\n\n[1]: https://github.blog/2022-09-21-security-alert-new-phishing-campaign-targets-github-users/\n[2]:
        https://www.datadoghq.com/blog/datadog-threat-intelligence/\n[3]: https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/displaying-ip-addresses-in-the-audit-log-for-your-organization\n[4]:
        https://docs.github.com/en/enterprise-cloud@latest/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization#blocking-a-user-in-the-organization-settings",
        "tags": ["source:github-telemetry", "technique:T1098-account-manipulation",
        "source:github", "mitre_platform:saas", "scope:github-telemetry", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:github-telemetry", "mitre_platform:saas", "source:github", "technique:T1098-account-manipulation",
        "source:github-telemetry", "mitre_platform:cloud", "tactic:TA0003-persistence"],
        "version": 87, "id": "def-000-v6r", "updatedAt": 1736369620975, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub SAML/OIDC has been disabled",
        "createdAt": 1696494708438, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:(business.disable_saml
        OR org.disable_saml OR business.disable_oidc)", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "github_disabled_saml_oidc"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "github_disabled_saml_oidc > 0"}], "message": "## Goal\n\nDetect when GitHub
        OIDC/SAML single sign-on (SSO) has been modified.\n\n## Strategy\n\nThis rule
        monitors GitHub audit logs for when OIDC/SAML SSO has been modified. GitHub
        allows for use of a SSO solution to increase security and centralize identity
        and access for the web application that your team uses. Disabling these settings
        could lead to a degradation in the organization''s security posture.\n\n##
        Triage and response\n\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.\n", "tags":
        ["source:github-telemetry", "source:github", "mitre_platform:saas", "scope:github-telemetry",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        87, "id": "def-000-p4l", "updatedAt": 1736369620981, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub SSH certificate authority deleted",
        "createdAt": 1696575670456, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:ssh_certificate_authority.destroy",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_ssh_ca_destroy"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "github_ssh_ca_destroy > 0"}], "message": "## Goal\nDetect
        when a GitHub SSH certificate authority has been deleted.\n\n## Strategy\nThis
        rule monitors GitHub audit logs for when GitHub SSH certificate authority
        has been deleted. With an SSH certificate authority organization, an enterprise
        account can provide SSH certificates that members can use to access its resources
        with Git. Any deletions should be monitored and the change should be verified
        to ensure it is authorized.\n\n## Triage and response\n1. Determine if the
        change taken by `{{@github.actor}}` is authorized.\n2. If the change was not
        authorized or was unexpected, begin your organization''s incident response
        process and investigate.", "tags": ["source:github-telemetry", "source:github",
        "mitre_platform:saas", "scope:github-telemetry", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "scope:github-telemetry", "security:attack", "mitre_platform:saas",
        "source:github", "tactic:TA0005-defense-evasion", "technique:T1562-impair-defenses",
        "source:github-telemetry"], "version": 87, "id": "def-000-eg5", "updatedAt":
        1736369621585, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub SSH certificate requirement disabled", "createdAt": 1696575671581,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:ssh_certificate_requirement.disable",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_ssh_cert_requirement_disabled"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "github_ssh_cert_requirement_disabled > 0"}], "message":
        "## Goal\nDetect when a GitHub SSH certificate requirement has been disabled.\n\n##
        Strategy\nThis rule monitors GitHub audit logs for when GitHub SSH certificate
        requirement has been disabled. Administrators can enforce members to use SSH
        certificates to access an organization''s resources. Disabling this requirement
        could lead to degradation in the security posture of an organization.\n\n##
        Triage and response\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.", "tags":
        ["source:github-telemetry", "source:github", "mitre_platform:saas", "scope:github-telemetry",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        87, "id": "def-000-7d7", "updatedAt": 1736369622101, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub SSH key added by suspicious IP",
        "createdAt": 1696575671583, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:public_key.create
        -@threat_intel.results.category:corp_vpn @threat_intel.results.source.name:spur",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_public_key_create_enriched"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "github_public_key_create_enriched > 0"}], "message": "##
        Goal\nDetect when a SSH key has been added from a suspicious IP.\n\n## Strategy\nThis
        rule monitors GitHub audit logs for when a SSH key has been added from a suspicious
        IP. A [phishing campaign][1] reported by Github''s security team indicated
        that attackers may try to add a SSH key once they have gained unauthorized
        access to an account to maintain access. Using [Datadog threat intelligence][2]
        the signals raised will have originated from IP addresses deemed to be suspicious.\n\n**Note:**
        By default GitHub does not display the source IP address for events in your
        organization''s audit log. See this [post][3] for further information.\n\n##
        Triage and response\n1. Determine if the behavior is unusual for the user:\n    *
        Is the `@actor_location.country_code` or `@http.useragent` different?\n    *
        If IP addresses are available, is the `@network.client.ip` or `@network.client.geoip.as.domain`
        different than usual?\n    * Speak with the user to verify if they added the
        SSH key.\n2. If the activity is suspicious:\n    * [Block the user in GitHub][4]
        to prevent further access.\n    * Begin your organization''s incident response
        process and investigate.\n\n[1]: https://github.blog/2022-09-21-security-alert-new-phishing-campaign-targets-github-users/\n[2]:
        https://www.datadoghq.com/blog/datadog-threat-intelligence/\n[3]: https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/displaying-ip-addresses-in-the-audit-log-for-your-organization\n[4]:
        https://docs.github.com/en/enterprise-cloud@latest/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization#blocking-a-user-in-the-organization-settings",
        "tags": ["source:github-telemetry", "technique:T1098-account-manipulation",
        "source:github", "mitre_platform:saas", "scope:github-telemetry", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:github-telemetry", "mitre_platform:saas", "source:github", "technique:T1098-account-manipulation",
        "source:github-telemetry", "mitre_platform:cloud", "tactic:TA0003-persistence"],
        "version": 87, "id": "def-000-6fb", "updatedAt": 1736369622130, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub a branch protection requirement
        was overridden by a repository administrator", "createdAt": 1696494708152,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:protected_branch.policy_override",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_branch_protection_policy_override"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "github_branch_protection_policy_override > 0"}], "message":
        "## Goal\nDetect when GitHub branch protection has been overidden by a repository
        administrator.\n\n## Strategy\nThis rule monitors GitHub audit logs for when
        GitHub branch protection has been overidden by a repository administrator.
        By default, the restrictions of a branch protection rule do not apply to users
        with administrative permissions to the repository or users with custom roles
        with the \"bypass branch protections\" permission. Overriding this protection
        could lead to degradation in the security posture of an organization.\n\n##
        Triage and response\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.", "tags":
        ["source:github-telemetry", "source:github", "mitre_platform:saas", "scope:github-telemetry",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        87, "id": "def-000-aoc", "updatedAt": 1736369622094, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub anomalous bot git activity",
        "createdAt": 1724859748541, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(github-telemetry OR github.audit.streaming) @actor:*bot*
        @action:git*", "groupByFields": ["@github.actor"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@github.repository"], "aggregation": "cardinality",
        "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name": "", "status":
        "low", "notifications": []}], "message": "## Goal\n\nDetect when anomalous
        Git activity is occurring from a bot account inside the GitHub organization.\n\n##
        Strategy\n\nThis rule monitors GitHub audit logs for when a bot takes a Git-related
        action.\n\n## Triage and response\n\n1. Assess the bot''s behavior:\n\n- Review
        audit logs to determine if the bot''s activity is out of character.\n- Check
        for anomalies in the bot''s access patterns:\n\n- - Is the `@actor_location.country_code`
        unexpected or different from typical locations?\n- - Does the `@http.useragent`
        or `@network.client.ip` differ from usual activity?\n- - Verify whether the
        `@network.client.geoip.as.domain` or IP address aligns with known bot activity.\n\n-
        Contact the bot owner to confirm if the bot should be performing these actions,
        especially from the observed user agent or IP address.\n\n2. If suspicious
        activity is confirmed:\n\n- Immediately block the bot in GitHub to prevent
        further unauthorized actions. [Block the user in GitHub][1]\n- Initiate your
        organization''s incident response process to further investigate the scope
        of the compromise and assess potential damage.\n- Consider reviewing any additional
        logs or access tokens used by the bot to determine if further unauthorized
        actions have occurred.\n\n3. Follow-up actions:\n\n- Reset the bot\u2019s
        authentication credentials and ensure that no unauthorized tokens or credentials
        have been issued.\n- Notify relevant stakeholders, including security teams
        and the bot owner, to provide updates on the investigation.\n\n[1]: https://docs.github.com/en/enterprise-cloud@latest/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization#blocking-a-user-in-the-organization-settings\n",
        "tags": ["source:github-telemetry", "tactic:TA0009-collection", "source:github",
        "technique:T1213-data-from-information-repositories", "mitre_platform:saas",
        "scope:github-telemetry", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:github-telemetry", "mitre_platform:saas", "tactic:TA0009-collection",
        "source:github", "source:github-telemetry", "technique:T1213-data-from-information-repositories",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-68c", "updatedAt":
        1736369622056, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub anomalous bot org activity", "createdAt": 1724859748543, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @actor:*bot* -@action:git* -@action:pull* -@action:issue*",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@github.repository"], "aggregation": "cardinality", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        86400, "keepAlive": 7200}, "cases": [{"name": "", "status": "low", "notifications":
        []}], "message": "## Goal\n\nDetect when anomalous organizational activity
        is occurring from a bot account inside the GitHub organization.\n\n## Strategy\n\nThis
        rule monitors GitHub audit logs for when a bot takes an action outside of
        Git operations and pull requests.\n\n## Triage and response\n\n1. Assess the
        bot''s behavior:\n\n- Review audit logs to determine if the bot''s activity
        is out of character.\n- Check for anomalies in the bot''s access patterns:\n\n-
        - Is the `@actor_location.country_code` unexpected or different from typical
        locations?\n- - Does the `@http.useragent` or `@network.client.ip` differ
        from usual activity?\n- - Verify whether the `@network.client.geoip.as.domain`
        or IP address aligns with known bot activity.\n\n- Contact the bot owner to
        confirm if the bot should be performing these actions, especially from the
        observed user agent or IP address.\n\n2. If suspicious activity is confirmed:\n\n-
        Immediately block the bot in GitHub to prevent further unauthorized actions.
        [Block the user in GitHub][1]\n- Initiate your organization''s incident response
        process to further investigate the scope of the compromise and assess potential
        damage.\n- Consider reviewing any additional logs or access tokens used by
        the bot to determine if further unauthorized actions have occurred.\n\n3.
        Follow-up actions:\n\n- Reset the bot\u2019s authentication credentials and
        ensure that no unauthorized tokens or credentials have been issued.\n- Notify
        relevant stakeholders, including security teams and the bot owner, to provide
        updates on the investigation.\n\n[1]: https://docs.github.com/en/enterprise-cloud@latest/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization#blocking-a-user-in-the-organization-settings\n",
        "tags": ["source:github-telemetry", "tactic:TA0009-collection", "source:github",
        "technique:T1213-data-from-information-repositories", "mitre_platform:saas",
        "scope:github-telemetry", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:github-telemetry", "mitre_platform:saas", "tactic:TA0009-collection",
        "source:github", "source:github-telemetry", "technique:T1213-data-from-information-repositories",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-66c", "updatedAt":
        1736369622290, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub anomalous number of repositories cloned by user", "createdAt": 1696494709270,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:git.clone", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@github.repository"],
        "aggregation": "cardinality", "name": ""}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 86400,
        "keepAlive": 7200}, "cases": [{"name": "", "status": "low", "notifications":
        []}], "message": "## Goal\nDetect when a GitHub member has cloned an anomalous
        number of repositories.\n\n## Strategy\nThis rule monitors GitHub audit logs
        for when a GitHub member has cloned an anomalous number of repositories. An
        attacker with unauthorized access or insider threat may try to clone repositories
        to their system in an effort to collect data for exfiltration or gaining contextual
        awareness of the environment. \n\n**Note:** During the onboarding of new staff
        it is likely that there will be a spike in cloning activity.\n\n## Triage
        and response\n1. Determine if the behavior is unusual for the user:\n    *
        Is the `@actor_location.country_code` or `@http.useragent` different?\n    *
        If IP addresses are available, is the `@network.client.ip` or `@network.client.geoip.as.domain`
        different than usual?\n2. If the activity is suspicious:\n    * [Block the
        user in GitHub][1] to prevent further access.\n    * Begin your organization''s
        incident response process and investigate.\n\n[1]: https://docs.github.com/en/enterprise-cloud@latest/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization#blocking-a-user-in-the-organization-settings",
        "tags": ["source:github-telemetry", "tactic:TA0009-collection", "source:github",
        "technique:T1213-data-from-information-repositories", "mitre_platform:saas",
        "scope:github-telemetry", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:github-telemetry", "mitre_platform:saas", "tactic:TA0009-collection",
        "source:github", "source:github-telemetry", "technique:T1213-data-from-information-repositories",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-6mc", "updatedAt":
        1736369622283, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub audit log streaming endpoint was deleted", "createdAt": 1696319210305,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:audit_log_streaming.destroy", "groupByFields":
        ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": "github_audit_log_stream_destroyed"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "github_audit_log_stream_destroyed > 0"}], "message": "##
        Goal\nDetect when a GitHub audit log stream has been deleted.\n\n## Strategy\nThis
        rule monitors GitHub audit logs for when an audit log stream is deleted. An
        attacker may remove an audit log stream to evade defenses set up by a security
        team.\n\n## Triage and response\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.", "tags":
        ["source:github-telemetry", "source:github", "mitre_platform:saas", "scope:github-telemetry",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        87, "id": "def-000-pwz", "updatedAt": 1736369622295, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub audit log streaming endpoint
        was modified", "createdAt": 1722331455920, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:(github-telemetry OR github.audit.streaming)
        @evt.action:audit_log_streaming.update", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "github_audit_log_stream_modified"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "github_audit_log_stream_modified > 0"}], "message": "## Goal\n\nDetect when
        GitHub audit log streaming settings have been modified.\n\n## Strategy\n\nThis
        rule monitors GitHub audit logs streaming settings when altered. A modification
        in this setting could cause degradation in the security posture of an organization
        as audit logs would cease to flow into centralized storage.\n\n## Triage and
        response\n\n1. Determine if the change taken by `{{@github.actor}}` is authorized.\n2.
        If the change was not authorized or was unexpected, begin your organization''s
        incident response process and investigate.\n", "tags": ["source:github-telemetry",
        "source:github", "mitre_platform:saas", "scope:github-telemetry", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "scope:github-telemetry", "security:attack", "mitre_platform:saas",
        "source:github", "tactic:TA0005-defense-evasion", "technique:T1562-impair-defenses",
        "source:github-telemetry"], "version": 87, "id": "def-000-p9z", "updatedAt":
        1736369622306, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub branch protection disabled on branch", "createdAt": 1696494709312,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:protected_branch.destroy", "groupByFields":
        ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": "github_branch_protection_disabled"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "github_branch_protection_disabled > 0"}], "message": "##
        Goal\nDetect when GitHub branch protection has been disabled on a branch.\n\n##
        Strategy\nThis rule monitors GitHub audit logs for when GitHub branch protection
        has been disabled on a branch. Orgaizations can protect important branches
        by setting branch protection rules, which define whether collaborators can
        delete or force push to the branch and set requirements for any pushes to
        the branch, such as passing status checks or a linear commit history. Disabling
        this protection could lead to degradation in the security posture of an organization.\n\n##
        Triage and response\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.", "tags":
        ["source:github-telemetry", "source:github", "mitre_platform:saas", "scope:github-telemetry",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        87, "id": "def-000-mpx", "updatedAt": 1736369622428, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub enterprise or organization recovery
        codes activity", "createdAt": 1722331447198, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:(github-telemetry OR github.audit.streaming)
        @evt.action:(business.recovery_codes_downloaded OR business.recovery_codes_generated
        OR business.recovery_codes_printed OR business.recovery_codes_viewed)", "groupByFields":
        ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": "github_business_recovery_code_activity"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:(org.recovery_codes_downloaded
        OR org.recovery_codes_generated OR org.recovery_codes_printed OR org.recovery_codes_viewed)",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_organization_recovery_code_activity"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Github business recovery code
        activity", "status": "medium", "notifications": [], "condition": "github_business_recovery_code_activity
        > 0"}, {"name": "Github organization recovery code activity", "status": "medium",
        "notifications": [], "condition": "github_organization_recovery_code_activity
        > 0"}], "message": "## Goal\n\nDetect when a GitHub enterprise or organization
        recovery code has been interacted with by a user.\n\n## Strategy\n\nThis rule
        monitors GitHub audit logs for when a Github recovery code is generated, viewed,
        downloaded, or printed. Attackers may use recovery codes to establish an administrator
        account and allow persistent access to the Github organization.\n\n## Triage
        and response\n\n1. Determine if the action taken by `{{@github.actor}}` is
        expected and/or authorized.\n2. If the change was not authorized or was unexpected,
        begin your organization''s incident response process and investigate.\n",
        "tags": ["source:github-telemetry", "source:github", "mitre_platform:saas",
        "scope:github-telemetry", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        87, "id": "def-000-p9r", "updatedAt": 1736369622541, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub enterprise owner added", "createdAt":
        1696494708139, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:(github-telemetry OR github.audit.streaming) @evt.action:business.add_admin",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "enterprise_owner_added"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "enterprise_owner_added > 0"}], "message": "## Goal\n\nDetect
        when a GitHub enterprise owner has been added.\n\n## Strategy\n\nThis rule
        monitors GitHub audit logs for when a GitHub enterprise owner has been added.
        Enterprise owners have complete control over the enterprise and can take every
        action, including:\n\n- Managing administrators\n- Adding and removing organizations
        to and from the enterprise\n- Removing enterprise members from all organizations
        owned by the enterprise\n- Managing enterprise settings\n- Enforcing policy
        across organizations\n- Managing billing settings\n\nAdding members to this
        highly privileged role should be monitored. An attacker with unauthorized
        access could seek to persist in the environment by adding additional roles.\n\n##
        Triage and response\n\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.\n\n- 3 January
        2025 - update detection rule severity from High to Medium.\n", "tags": ["source:github-telemetry",
        "technique:T1098-account-manipulation", "source:github", "mitre_platform:saas",
        "scope:github-telemetry", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "scope:github-telemetry",
        "mitre_platform:saas", "source:github", "technique:T1098-account-manipulation",
        "source:github-telemetry", "mitre_platform:cloud", "tactic:TA0003-persistence"],
        "version": 92, "id": "def-000-4y6", "updatedAt": 1736369623297, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub organization was removed from
        enterprise", "createdAt": 1696494709291, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:(github-telemetry OR github.audit.streaming)
        @evt.action:business.remove_organization", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "github_organization_removed"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "github_organization_removed > 0"}], "message": "## Goal\nDetect when a GitHub
        enterprise organization has been removed.\n\n## Strategy\nThis rule monitors
        GitHub audit logs for when a GitHub enterprise organization has been removed.
        An enterprise account allows you to manage and enforce policies for all the
        organizations owned by the enterprise. The removal of an organization from
        an enterprise could remove existing security controls, reducing the overall
        security of the organization.\n\n## Triage and response\n1. Determine if the
        change taken by `{{@github.actor}}` is authorized.\n2. If the change was not
        authorized or was unexpected, begin your organization''s incident response
        process and investigate.", "tags": ["source:github-telemetry", "tactic:TA0040-impact",
        "source:github", "technique:T1531-account-access-removal", "mitre_platform:saas",
        "scope:github-telemetry", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:github-telemetry", "technique:T1531-account-access-removal", "mitre_platform:saas",
        "source:github", "source:github-telemetry", "tactic:TA0040-impact", "mitre_platform:cloud"],
        "version": 87, "id": "def-000-hdx", "updatedAt": 1736369623313, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub organization was transferred
        between enterprise accounts", "createdAt": 1697185337315, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:(github-telemetry OR
        github.audit.streaming) @evt.action:org.transfer", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "github_org_transfer"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "high", "notifications": [], "condition": "github_org_transfer
        > 0"}], "message": "## Goal\nDetect when a GitHub organization was transferred
        between enterprise accounts.\n\n## Strategy\nThis rule monitors GitHub audit
        logs for when a GitHub organization was transferred between enterprise accounts.
        Enterprise owners can transfer existing organizations between enterprise accounts.
        You must be an enterprise owner of both enterprise accounts.\n\n## Triage
        and response\n1. Determine if the change taken by `{{@github.actor}}` is authorized.\n2.
        If the change was not authorized or was unexpected, begin your organization''s
        incident response process and investigate.", "tags": ["source:github-telemetry",
        "tactic:TA0009-collection", "source:github", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "scope:github-telemetry", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "scope:github-telemetry", "mitre_platform:saas", "tactic:TA0009-collection",
        "source:github", "source:github-telemetry", "technique:T1213-data-from-information-repositories",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-8o2", "updatedAt":
        1736369623349, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub payment method removed", "createdAt": 1696575670575, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:payment_method.remove", "groupByFields":
        ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "aggregation": "count", "name": "github_payment_method_removed"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "github_payment_method_removed > 0"}], "message": "## Goal\nDetect
        when a GitHub payment method has been removed.\n\n## Strategy\nThis rule monitors
        GitHub audit logs for when a GitHub payment method has been removed.\n\n##
        Triage and response\n1. Determine if the change taken by `{{@github.actor}}`
        is authorized.\n2. If the change was not authorized or unexpected, begin your
        organization''s incident response process and investigate.", "tags": ["source:github-telemetry",
        "technique:T1098-account-manipulation", "source:github", "mitre_platform:saas",
        "scope:github-telemetry", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "scope:github-telemetry",
        "mitre_platform:saas", "source:github", "technique:T1098-account-manipulation",
        "source:github-telemetry", "mitre_platform:cloud", "tactic:TA0003-persistence"],
        "version": 87, "id": "def-000-cp5", "updatedAt": 1736369623581, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub personal access token (PAT) auto
        approve policy modified", "createdAt": 1724769034311, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:(github-telemetry OR github.audit.streaming)
        @evt.action:(auto_approve_personal_access_token_requests.disable OR auto_approve_personal_access_token_requests.enable
        OR forbid_auto_approve_personal_access_token_requests.disable OR forbid_auto_approve_personal_access_token_requests.enable)",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_pat_policy_modified"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Github PAT policy modified",
        "status": "medium", "notifications": [], "condition": "github_pat_policy_modified
        > 0"}], "message": "## Goal\n\nDetect when a GitHub personal access token
        is set to auto approve.\n\n## Strategy\n\nThis rule monitors GitHub audit
        logs for when a GitHub organization changes the auto approval policy on personal
        access tokens. Changes in personal access token (PAT) settings can be a sign
        of persistence from an actor that is generating PATs to maintain access to
        repositories.\n\n## Triage and response\n\n1. Determine if the change taken
        by `{{@github.actor}}` is authorized.\n2. If the change was not authorized
        or was unexpected, begin your organization''s incident response process and
        investigate.\n", "tags": ["source:github-telemetry", "source:github", "mitre_platform:saas",
        "scope:github-telemetry", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        87, "id": "def-000-p5v", "updatedAt": 1736369623577, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub personal access token granted
        and used to clone large amount of repositories", "createdAt": 1722331447134,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:personal_access_token.request_created",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_pat_granted"}, {"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:git.clone", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "github_repositories_cloned"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "Github PAT created and used to clone 10+ repositories",
        "status": "medium", "notifications": [], "condition": "github_pat_granted
        > 0 && github_repositories_cloned >=10"}, {"name": "Github PAT created and
        used to clone 5+ repositories", "status": "low", "notifications": [], "condition":
        "github_pat_granted > 0 && github_repositories_cloned >=5"}], "message": "##
        Goal\n\nDetect when a GitHub personal access token is used to clone repositories.\n\n##
        Strategy\n\nThis rule monitors GitHub audit logs for when a personal access
        token is used to clone a repository. If a user clones five repositories, a
        medium severity alert is generated. If the a user clones ten or more repositories,
        a high severity alert is generated.\n\n## Triage and response\n\n1. Determine
        if the multiple repository clones by `{{@github.actor}}` are an expected action.\n2.
        If the change was not authorized or was unexpected, begin your organization''s
        incident response process and investigate.\n\n- 3 January 2025 - update detection
        rule severity from High to Medium and Medium to Low for the respective cases.\n",
        "tags": ["source:github-telemetry", "source:github", "mitre_platform:saas",
        "scope:github-telemetry", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "scope:github-telemetry",
        "security:attack", "mitre_platform:saas", "source:github", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "source:github-telemetry"], "version":
        88, "id": "def-000-p9l", "updatedAt": 1736369623599, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub private repository changed to
        public visibility", "createdAt": 1724769034092, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:(github-telemetry OR github.audit.streaming)
        @evt.action:repo.access @previous_visibility:private @github.visibility:public",
        "groupByFields": ["@github.repository"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "github_repository_changed_to_public"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "github_repository_changed_to_public",
        "status": "medium", "notifications": [], "condition": "github_repository_changed_to_public
        > 0"}], "message": "## Goal\n\nDetect when a GitHub repository visibility
        is changed to public.\n\n## Strategy\n\nThis rule monitors GitHub audit logs
        for when a GitHub repository that was previously private gets moved to public
        visibility. Private repositories typically contain intellectual property,
        sensitive architecture, or other important data. Private repositories should
        be made public only with approval from the organization.\n\n## Triage and
        response\n\n1. Determine if the change taken by `{{@github.actor}}` is authorized.\n2.
        If the change was not authorized or was unexpected, begin your organization''s
        incident response process and investigate.\n\n- 3 January 2025 - update detection
        rule severity from High to Medium.\n", "tags": ["source:github-telemetry",
        "tactic:TA0009-collection", "source:github", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "scope:github-telemetry", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "scope:github-telemetry", "mitre_platform:saas", "tactic:TA0009-collection",
        "source:github", "source:github-telemetry", "technique:T1213-data-from-information-repositories",
        "mitre_platform:cloud"], "version": 88, "id": "def-000-p6y", "updatedAt":
        1736369623616, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub repository transfer", "createdAt": 1697185337224, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:(github-telemetry OR
        github.audit.streaming) @evt.action:repo.transfer", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "github_repo_transfer"}, {"query": "source:(github-telemetry OR github.audit.streaming)
        @evt.action:repo.transfer_start", "groupByFields": ["@github.actor"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "github_repo_transfer_start"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:repo.transfer_outgoing",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_repo_transfer_outgoing"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "a repository was transferred
        to another repository network", "status": "medium", "notifications": [], "condition":
        "github_repo_transfer_outgoing > 0"}, {"name": "user sent a request to transfer
        a repository to another user or organization", "status": "medium", "notifications":
        [], "condition": "github_repo_transfer_start > 0"}, {"name": "user accepted
        a request to receive a transferred repository", "status": "info", "notifications":
        [], "condition": "github_repo_transfer > 0"}], "message": "## Goal\n\nDetect
        when a GitHub repository transfer occurs.\n\n## Strategy\n\nThis rule monitors
        GitHub audit logs for when a GitHub organization transfer occurs. Repositories
        can be transferred to other users or organization accounts.\n\n## Triage and
        response\n\n1. Determine if the change taken by `{{@github.actor}}` is authorized.\n2.
        If the change was not authorized or was unexpected, begin your organization''s
        incident response process and investigate.\n\n- 3 January 2025 - update detection
        rule severity from High to Medium for the two cases.\n", "tags": ["source:github-telemetry",
        "tactic:TA0009-collection", "source:github", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "scope:github-telemetry", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "scope:github-telemetry", "mitre_platform:saas", "tactic:TA0009-collection",
        "source:github", "source:github-telemetry", "technique:T1213-data-from-information-repositories",
        "mitre_platform:cloud"], "version": 88, "id": "def-000-xc3", "updatedAt":
        1736369623608, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub secret scanning alert generated", "createdAt": 1722331454847, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:secret_scanning_alert.create", "groupByFields":
        ["@github.repository"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_secret_scanning_alert"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "github_secret_scanning_alert > 0"}], "message": "## Goal\n\nDetect
        when a GitHub scan detects a secret stored in a repository.\n\n## Strategy\n\nSecret
        scanning is a security feature that helps detect and prevent the accidental
        inclusion of sensitive information such as API keys, passwords, tokens, and
        other secrets in your repository. When enabled, secret scanning scans commits
        in repositories for known types of secrets and alerts repository administrators
        upon detection.\n\nSecret scanning scans your entire Git history on all branches
        present in your GitHub repository for secrets. GitHub will also periodically
        run a full Git history scan of existing content in public repositories where
        secret scanning is enabled.\n\nIf a scan results in a potential secret, Github
        generates a secret scanning alert to notify repository administrators.\n\n##
        Triage and response\n\n1. Determine if the detected secret is considered sensitive
        for your environment.\n2. If the publishing of the detected secret poses a
        risk to other systems, begin your incident response process and investigate.\n",
        "tags": ["technique:T1552-unsecured-credentials", "source:github-telemetry",
        "tactic:TA0006-credential-access", "source:github", "mitre_platform:saas",
        "scope:github-telemetry", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:github-telemetry", "mitre_platform:saas", "source:github", "tactic:TA0006-credential-access",
        "technique:T1552-unsecured-credentials", "source:github-telemetry", "mitre_platform:cloud"],
        "version": 87, "id": "def-000-p3z", "updatedAt": 1736369623795, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "GitHub secret scanning disabled or bypassed",
        "createdAt": 1696319210335, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:(secret_scanning.disable
        OR business_secret_scanning.disable)", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "secret_scanning_disabled_all_repos"}, {"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:repository_secret_scanning.disable",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "secret_scanning_disabled_for_a_repo"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:(secret_scanning_new_repos.disable
        OR business_secret_scanning.disabled_for_new_repos)", "groupByFields": ["@github.actor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "secret_scanning_disabled_for_new_repos"}, {"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:secret_scanning_push_protection.bypass",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "secret_scanning_bypass"}, {"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:business_secret_scanning_push_protection.disable",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "secret_scanning_push_protection_disabled"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:repository_secret_scanning_push_protection.disable",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "secret_scanning_push_protection_disabled_for_a_repo"},
        {"query": "source:(github-telemetry OR github.audit.streaming) @evt.action:(business_secret_scanning_push_protection.disabled_for_new_repos)",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "secret_scanning_push_protection_disabled_for_new_repos"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "disabled for all repositories",
        "status": "critical", "notifications": [], "condition": "secret_scanning_disabled_all_repos
        > 0"}, {"name": "disabled for all new repositories", "status": "medium", "notifications":
        [], "condition": "secret_scanning_disabled_for_new_repos > 0"}, {"name": "push
        protection disabled", "status": "medium", "notifications": [], "condition":
        "secret_scanning_push_protection_disabled > 0"}, {"name": "push protection
        disabled for all new repositories", "status": "medium", "notifications": [],
        "condition": "secret_scanning_push_protection_disabled_for_new_repos > 0"},
        {"name": "disabled for a repository", "status": "medium", "notifications":
        [], "condition": "secret_scanning_disabled_for_a_repo > 0"}, {"name": "push
        protection disabled for a repository", "status": "medium", "notifications":
        [], "condition": "secret_scanning_push_protection_disabled_for_a_repo > 0"},
        {"name": "user bypassed push protection on a secret detected by github secret
        scanning", "status": "medium", "notifications": [], "condition": "secret_scanning_bypass
        > 0"}], "message": "## Goal\n\nDetect when a GitHub secret scanning setting
        has been disabled.\n\n## Strategy\n\nThis rule monitors GitHub audit logs
        for when a secret scanning setting has been disabled. GitHub scans repositories
        for known types of secrets to prevent fraudulent use of secrets that were
        committed accidentally. Disabling these settings could lead to a degradation
        in the organization''s security posture.\n\n## Triage and response\n\n1. Determine
        if the change taken by `{{@github.actor}}` is authorized.\n2. If the change
        was not authorized or was unexpected, begin your organization''s incident
        response process and investigate.\n\n## Changelog\n\n- 21 February 2024 -
        Updated detection rule name.\n- 4 September 2024 - Updated detection rule
        name.\n- 3 January 2025 - update detection rule severity from High to Medium
        for several cases.\n", "tags": ["source:github-telemetry", "source:github",
        "mitre_platform:saas", "scope:github-telemetry", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "scope:github-telemetry", "security:attack", "mitre_platform:saas",
        "source:github", "tactic:TA0005-defense-evasion", "technique:T1562-impair-defenses",
        "source:github-telemetry"], "version": 92, "id": "def-000-msc", "updatedAt":
        1736369624775, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub unknown user cloned private repository", "createdAt": 1722331454848,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:git.clone -@repository_public:true
        -@github.actor:*", "groupByFields": ["@github.actor"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "github_unknown_user_repo_activity"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "github_unknown_user_repo_activity > 0"}], "message": "##
        Goal\n\nDetect when a unknown actor clones a Github repository.\n\n## Strategy\n\nThis
        rule monitors GitHub audit logs for when a repository clone occurs but the
        actor field is null.\n\n## Triage and response\n\n1. Determine if the clone
        action was taken by IP address associated with the activity is from a known
        corporate device.\n2. If the clone action cannot be attributed to an internal
        user, then begin your organization''s incident response process and investigate.\n",
        "tags": ["source:github-telemetry", "tactic:TA0009-collection", "source:github",
        "technique:T1213-data-from-information-repositories", "mitre_platform:saas",
        "scope:github-telemetry", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:github-telemetry", "mitre_platform:saas", "tactic:TA0009-collection",
        "source:github", "source:github-telemetry", "technique:T1213-data-from-information-repositories",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-p8z", "updatedAt":
        1736369624730, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub user anomalously downloaded data as a ZIP file", "createdAt": 1724769281741,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:(github-telemetry
        OR github.audit.streaming) @evt.action:repo.download_zip -@actor:*bot*", "groupByFields":
        ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields": ["@github.repository"],
        "aggregation": "cardinality", "name": "github_data_downloaded_as_zip"}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        86400, "keepAlive": 7200}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "## Goal\n\nDetect and respond to unusual or unauthorized
        downloads of repository data in ZIP format by a GitHub user.\n\n## Strategy\n\nThis
        detection triggers when a user downloads repository data as a ZIP file under
        circumstances that are inconsistent with normal behavior, suggesting possible
        data exfiltration.\n\n## Triage & Response\n\n1. Identify the user and context
        of the download:\n\n- Review GitHub audit logs for the user involved in the
        ZIP file download.\n- Examine relevant fields such as:\n- - `@actor` \u2013
        Who performed the download.\n- - `@repository` \u2013 Which repository''s
        data was downloaded.\n- - `@timestamp` \u2013 When the download occurred.\n-
        Determine if this is consistent with the user\u2019s regular role or access
        to the repository.\n\n2. Analyze for anomalies:\n\n- Verify the location and
        device used:\n- - Is the `@actor_location.country_code` or `@network.client.ip`
        from an unusual or unexpected location?\n- - Does the `@http.useragent` match
        the user\u2019s typical device/browser?\n\n3. Check access history:\n\n- Review
        previous actions by the same user in the last 30-60 days. Have there been
        any prior similar downloads or other anomalies, such as increased access or
        changes in permissions?\n\n4. Repository sensitivity:\n\n- Assess the sensitivity
        or classification of the data within the repository. Does it contain proprietary,
        sensitive, or confidential information?\n\n5. Incident investigation:\n\n-
        Contact the user to verify if the download was legitimate. Use caution, as
        the account may be compromised. Ensure the communication method is secure.\n-
        If the download appears unauthorized or cannot be verified, temporarily restrict
        the user''s access to prevent further downloads or actions on GitHub. Instructions
        for managing access.\n  Investigate further:\n- Review other actions taken
        by the user to look for additional suspicious behavior, such as pull requests,
        branch cloning, or large file downloads.\n- Check for potential compromise:\n-
        - Look for signs of account takeover, such as changes to the user\u2019s profile,
        email, or login credentials.\n- - Review access logs for any unusual or failed
        login attempts prior to the ZIP download.\n- - Cross-reference with other
        detections: Check if there are related security events, such as anomalous
        login alerts or unauthorized repository access.\n\n6. If unauthorized activity
        is confirmed:\n\n- Revoke user access to the repository and reset credentials
        or tokens used by the user.\n- Audit repository access to ensure no other
        unauthorized users or malicious activity is present.\n- Begin incident response
        plan for further actions.\n", "tags": ["source:github-telemetry", "tactic:TA0009-collection",
        "source:github", "technique:T1213-data-from-information-repositories", "mitre_platform:saas",
        "scope:github-telemetry", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:github-telemetry", "mitre_platform:saas", "tactic:TA0009-collection",
        "source:github", "source:github-telemetry", "technique:T1213-data-from-information-repositories",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-p07", "updatedAt":
        1736369624755, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "GitHub user blocked from accessing organization repositories", "createdAt":
        1696575670786, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:(github-telemetry OR github.audit.streaming) @evt.action:org.block_user",
        "groupByFields": ["@github.actor"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "github_org_block_user"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "github_org_block_user > 0"}], "message": "## Goal\nDetect
        when a GitHub user has been [blocked from accessing organization repositories][1].\n\n##
        Strategy\nThis rule monitors GitHub audit logs for when a GitHub user has
        been blocked from accessing organization repositories. Organization owners
        and moderators can block anyone who is not a member of the organization from
        collaborating on the organization''s repositories.\n\n## Triage and response\n1.
        Determine if the change taken by `{{@github.actor}}` is authorized.\n2. If
        the change was not authorized or was unexpected, begin your organization''s
        incident response process and investigate.\n\n[1]: https://docs.github.com/en/communities/maintaining-your-safety-on-github/blocking-a-user-from-your-organization",
        "tags": ["source:github-telemetry", "source:github", "mitre_platform:saas",
        "technique:T1078-valid-accounts", "scope:github-telemetry", "security:attack",
        "mitre_platform:cloud", "tactic:TA0001-initial-access"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "scope:github-telemetry", "security:attack", "mitre_platform:saas", "source:github",
        "source:github-telemetry", "tactic:TA0001-initial-access", "technique:T1078-valid-accounts"],
        "version": 87, "id": "def-000-q3r", "updatedAt": 1736369625132, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google App Engine service account used
        outside of Google Cloud", "createdAt": 1677182820626, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:gcp* @usr.id:*@appspot.gserviceaccount.com
        -@network.client.geoip.as.domain:google.com -@network.client.geoip.invalidAddress:private
        -@http.useragent:(\"App Engine\" or *gcloud*) -@network.client.ip:gce-internal-ip
        @network.client.is_private_network_ip:false", "groupByFields": ["project_id",
        "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": ["@http.useragent"],
        "aggregation": "cardinality", "name": "service_account_usage"}, {"query":
        "source:gcp* @usr.id:*@appspot.gserviceaccount.com -@network.client.geoip.as.domain:google.com
        -@network.client.geoip.invalidAddress:private -@network.client.ip:gce-internal-ip
        @network.client.is_private_network_ip:false @threat_intel.results.category:tor",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@http.useragent"], "aggregation": "cardinality", "name":
        "service_account_usage_tor_ip"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name":
        "from Tor client", "status": "high", "notifications": [], "condition": "service_account_usage_tor_ip
        > 0"}, {"name": "from non threat-related IP", "status": "low", "notifications":
        [], "condition": "service_account_usage > 0"}], "message": "## Goal\nDetect
        when a [Google App Engine default service account][1] is used outside of Google
        Cloud. \n\n## Strategy\nThis rule monitors Google Cloud Audit Logs to determine
        when a Google App Engine default service account is used from outside a Google
        Cloud environment. The usage of a Google Cloud default service account, such
        as the App Engine service account, from outside the Google Cloud environment,
        could serve as an indicator that the credentials of the service account have
        been compromised.\n\n## Triage and response\n1. Determine if the actions `{{@evt.name}}`
        taken by the App Engine default service account `{{@usr.id}}` are legitimate
        by looking at past activity and the type of API calls occurring.\n2. If the
        action is legitimate, consider including the IP address or ASN in a suppression
        list. See this article on [Best practices for creating detection rules with
        Datadog Cloud SIEM][2] for more information.\n3. Otherwise, use the Cloud
        SIEM - IP Investigation dashboard to see if the IP address: `{{@network.client.ip}}`
        has taken other actions.\n4. If the results of the triage indicate that an
        attacker has taken the action, begin your company''s incident response process
        and investigate.\n\n## Changelog\n* 18 December 2024 - Updated query to replace
        attribute @threat_intel.results.subcategory:tor with @threat_intel.results.category:tor.\n\n[1]:
        https://cloud.google.com/iam/docs/service-account-types#default\n[2]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["tactic:TA0004-privilege-escalation", "source:gcp", "scope:google-cloud-iam",
        "technique:T1078-valid-accounts", "mitre_platform:iaas", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:gcp",
        "mitre_platform:cloud", "security:attack", "scope:google-cloud-iam", "mitre_platform:iaas",
        "tactic:TA0001-initial-access", "tactic:TA0004-privilege-escalation", "technique:T1078-valid-accounts"],
        "version": 87, "id": "def-000-839", "updatedAt": 1736369625111, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud BigQuery - query results
        saved to cloud storage", "createdAt": 1670337207861, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:gcp.bigquery.project @data.protoPayload.metadata.jobChange.job.jobConfig.extractConfig.destinationUris:(gs\\:\\/\\/*
        OR s3\\:\\/\\/* OR azure\\:\\/\\/*)  @data.resource.type:bigquery_project
        @data.protoPayload.metadata.jobChange.job.jobConfig.type:EXPORT @threat_intel.results.category:anonymizer",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "gcp_bigquery_saved_results_to_cloud_storage_anonymizer"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "by an account behind an anonymizing
        proxy", "status": "medium", "notifications": [], "condition": "gcp_bigquery_saved_results_to_cloud_storage_anonymizer
        > 0"}], "message": "## Goal\nDetect when an attempt to export Google Cloud
        BigQuery results to cloud storage occurs.\n\n## Strategy\nThis rule monitors
        Google Cloud Audit Logs to determine when an attempt to export Google Cloud
        BigQuery results to cloud storage has occurred. An attacker who has already
        gained initial access may try to exfiltrate data by saving BigQuery results
        to external cloud storage outside of the compromised organization.\n\n**Notes:**
        \n\n* This rule triggers with a `Medium` severity when this activity originates
        from an anonymizing proxy.\n\n## Triage and response\n1. Reach out to the
        user or owner of the service account to determine if this action is legitimate.\n2.
        If the action is legitimate, consider including the IP address or ASN in a
        suppression list. See this article on [Best practices for creating detection
        rules with Datadog Cloud SIEM][1] for more information.\n3. Otherwise, use
        the Cloud SIEM - IP Investigation dashboard to see if the IP address: {{@network.client.ip}}
        has taken other actions.\n4. If the results of the triage indicate that an
        attacker has taken the action, begin your company''s incident response process
        and investigate.\n\n## Changelog\n* 31 Jaunuary 2023 - Updated rule title.\n\n[1]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "technique:T1537-transfer-data-to-cloud-account", "scope:google-cloud-bigquery",
        "mitre_platform:iaas", "tactic:TA0010-exfiltration", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "tactic:TA0010-exfiltration", "scope:google-cloud-bigquery",
        "mitre_platform:iaas", "security:attack", "technique:T1537-transfer-data-to-cloud-account"],
        "version": 87, "id": "vbn-7w6-qqu", "updatedAt": 1736369625165, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud BigQuery - query results
        saved to new table", "createdAt": 1670337207803, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:gcp.bigquery.project @evt.name:google.cloud.bigquery.v2.JobService.InsertJob
        @data.protoPayload.metadata.jobChange.job.jobConfig.queryConfig.destinationTable:*
        @threat_intel.results.category:(botnet_proxy OR hosting_proxy)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gcp_bigquery_saved_results_to_destination_table_anonymizer"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "by an account behind an anonymizing
        proxy", "status": "low", "notifications": [], "condition": "gcp_bigquery_saved_results_to_destination_table_anonymizer
        > 0"}], "message": "## Goal\nDetect when an attempt to export Google Cloud
        BigQuery results to a new table occurs.\n\n## Strategy\nThis rule monitors
        Google Cloud Audit Logs to determine when an attempt to export Google Cloud
        BigQuery results to a new table has occurred. An attacker who has already
        gained initial access may try to exfiltrate data by saving BigQuery results
        to a new table outside of the compromised organization.\n\n**Notes:** \n\n*
        This rule triggers with a `Low` severity when this activity originates from
        an anonymizing proxy.\n\n## Triage and response\n1. Reach out to the user
        or owner of the service account to determine if this action is legitimate.\n2.
        If the action is legitimate, consider including the IP address or ASN in a
        suppression list. See this article on [Best practices for creating detection
        rules with Datadog Cloud SIEM][1] for more information.\n3. Otherwise, use
        the Cloud SIEM - IP Investigation dashboard to see if the IP address: {{@network.client.ip}}
        has taken other actions.\n4. If the results of the triage indicate that an
        attacker has taken the action, begin your company''s incident response process
        and investigate.\n\n## Changelog\n* 31 Jaunuary 2023 - Updated strategy in
        markdown and rule title.\n* 25 September 2024 - Updated query to replace attribute
        `@threat_intel.results.category:anonymizer`\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "technique:T1537-transfer-data-to-cloud-account", "scope:google-cloud-bigquery",
        "mitre_platform:iaas", "tactic:TA0010-exfiltration", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "tactic:TA0010-exfiltration", "scope:google-cloud-bigquery",
        "mitre_platform:iaas", "security:attack", "technique:T1537-transfer-data-to-cloud-account"],
        "version": 87, "id": "4dn-qab-suj", "updatedAt": 1736369625114, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud BigQuery results saved
        to cloud storage by a previously unseen user", "createdAt": 1675257600570,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:gcp.bigquery.project
        @evt.name:google.cloud.bigquery.v*.JobService.InsertJob @data.protoPayload.metadata.jobChange.job.jobConfig.extractConfig.destinationUris:(gs\\:\\/\\/*
        OR s3\\:\\/\\/* OR azure\\:\\/\\/*)  @data.resource.type:bigquery_project
        @data.protoPayload.metadata.jobChange.job.jobConfig.type:EXPORT", "groupByFields":
        ["project_id"], "hasOptionalGroupByFields": false, "distinctFields": [], "metric":
        "@usr.id", "metrics": ["@usr.id"], "aggregation": "new_value", "name": ""}],
        "options": {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter": 28, "learningDuration":
        7, "learningThreshold": 0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when a previously unseen user attempts to export Google Cloud
        BigQuery results to cloud storage.\n\n## Strategy\nThis rule monitors Google
        Cloud Audit Logs to determine when a previously unseen user attempts to export
        Google Cloud BigQuery results to cloud storage. An attacker who has already
        gained initial access may try to exfiltrate data by saving BigQuery results
        to external cloud storage outside of the compromised organization.\n\n**Notes:**
        \n\n* This rule uses the `New Value` detection method, to determine when a
        previously unseen user performs this action.\n\n## Triage and response\n1.
        Reach out to the user or owner of the service account to determine if this
        action is legitimate.\n2. If the action is legitimate, consider including
        the IP address or ASN in a suppression list. See this article on [Best practices
        for creating detection rules with Datadog Cloud SIEM][1] for more information.\n3.
        Otherwise, use the Cloud SIEM - IP Investigation dashboard to see if the IP
        address: `{{@network.client.ip}}` has taken other actions.\n4. If the results
        of the triage indicate that an attacker has taken the action, begin your company''s
        incident response process and investigate.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "technique:T1537-transfer-data-to-cloud-account", "scope:google-cloud-bigquery",
        "mitre_platform:iaas", "tactic:TA0010-exfiltration", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "tactic:TA0010-exfiltration", "scope:google-cloud-bigquery",
        "mitre_platform:iaas", "security:attack", "technique:T1537-transfer-data-to-cloud-account"],
        "version": 87, "id": "def-000-nns", "updatedAt": 1736369625148, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Compute Engine GPU virtual
        machine instance created", "createdAt": 1677054376259, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:gcp.gce.instance @evt.name:(v1.compute.instances.insert
        OR beta.compute.instances.insert) @data.protoPayload.request.guestAccelerators.acceleratorCount:*
        @threat_intel.results.category:(botnet_proxy OR hosting_proxy)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "google_cloud_compute_gpu_vms_created_anonymizer"},
        {"query": "source:gcp.gce.instance @evt.name:(v1.compute.instances.insert
        OR beta.compute.instances.insert) @data.protoPayload.request.guestAccelerators.acceleratorCount:*",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "google_cloud_compute_gpu_vms_created"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "over 10 by an account behind
        an anonymizing proxy", "status": "high", "notifications": [], "condition":
        "google_cloud_compute_gpu_vms_created_anonymizer > 10"}, {"name": "by an account
        behind an anonymizing proxy", "status": "medium", "notifications": [], "condition":
        "google_cloud_compute_gpu_vms_created_anonymizer > 0"}, {"name": "by an account",
        "status": "info", "notifications": [], "condition": "google_cloud_compute_gpu_vms_created
        > 0"}], "message": "## Goal\nDetect when an attempt to create a GPU-based
        virtual machine (VM) instance in Google Compute Engine occurs.\n\n## Strategy\nThis
        rule monitors Google Cloud Audit Logs to determine when an attempt to create
        a GPU-based VM instance in Google Compute Engine has occurred. An attacker
        who has already gained initial access may try to create GPU-based VM instances
        with goal mining cryptocurrency.\n\n**Notes:** \n\n* This rule triggers with
        a `Medium` severity when the activity originates from an anonymizing proxy.\n*
        This rule triggers with a `High` severity when the activity originates from
        an anonymizing proxy and more than 10 VM instances are created.\n\n## Triage
        and response\n1. Reach out to the user or owner of the service account to
        determine if this action is legitimate.\n2. If the action is legitimate, consider
        including the user in a suppression list. See this article on [Best practices
        for creating detection rules with Datadog Cloud SIEM][1] for more information.\n3.
        Otherwise, use the Cloud SIEM - User Investigation dashboard to see if the
        user `{{@usr.id}}` has taken other actions.\n4. If the results of the triage
        indicate that an attacker has taken the action, begin your company''s incident
        response process and an investigation.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n##
        Changelog\n* 25 September 2024 - Updated query to replace attribute `@threat_intel.results.category:anonymizer`.",
        "tags": ["source:gcp", "scope:google-compute-engine", "tactic:TA0040-impact",
        "technique:T1496-resource-hijacking", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "scope:google-compute-engine",
        "mitre_platform:iaas", "technique:T1496-resource-hijacking", "security:attack",
        "tactic:TA0040-impact"], "version": 87, "id": "def-000-mwl", "updatedAt":
        1736369625115, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Cloud GCE instance startup script added or modified", "createdAt":
        1670337207843, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gcp.gce.instance @evt.name:v1.compute.instances.setMetadata ((@data.protoPayload.metadata.instanceMetadataDelta.addedMetadataKeys:startup-script
        OR @data.protoPayload.metadata.instanceMetadataDelta.modifiedMetadataKeys:startup-script)
        OR (@data.protoPayload.metadata.instanceMetadataDelta.addedMetadataKeys:startup-script-url
        OR @data.protoPayload.metadata.instanceMetadataDelta.modifiedMetadataKeys:startup-script-url))
        @threat_intel.results.category:(botnet_proxy OR hosting_proxy)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gce_instance_startup_script_added_to_metadata_enriched"},
        {"query": "source:gcp.gce.instance @evt.name:v1.compute.instances.setMetadata
        ((@data.protoPayload.metadata.instanceMetadataDelta.addedMetadataKeys:startup-script
        OR @data.protoPayload.metadata.instanceMetadataDelta.modifiedMetadataKeys:startup-script)
        OR (@data.protoPayload.metadata.instanceMetadataDelta.addedMetadataKeys:startup-script-url
        OR @data.protoPayload.metadata.instanceMetadataDelta.modifiedMetadataKeys:startup-script-url))",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "gce_instance_startup_script_added_to_metadata"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "by an account behind an anonymizing
        proxy", "status": "medium", "notifications": [], "condition": "gce_instance_startup_script_added_to_metadata_enriched
        > 0"}, {"name": "by an account", "status": "info", "notifications": [], "condition":
        "gce_instance_startup_script_added_to_metadata > 0"}], "message": "## Goal\nDetect
        when an attempt to add or modify a startup script to the GCE instance metadata
        occurs.\n\n## Strategy\nThis rule monitors Google Cloud Audit Logs to determine
        when an attempt to add or modify a start up script to the GCE instance metadata
        has occurred. A malicious actor who has already gained initial access may
        try to preserve access to GCE instances by adding a custom startup script
        to the instance metadata.\n\n**Note**: This rule triggers with a `Medium`
        severity when this activity originates from an anonymizing proxy.\n\n## Triage
        and response\n1. Reach out to the user or owner of the service account to
        determine if this action is legitimate.\n2. If the action is legitimate, consider
        including the IP address or ASN in a suppression list. See this article on
        [Best practices for creating detection rules with Datadog Cloud SIEM][1] for
        more information.\n3. Otherwise, use the Cloud SIEM - IP Investigation dashboard
        to see if the IP address: `{{@network.client.ip}}` has taken other actions.\n4.
        If the results of the triage indicate that a malicious actor has taken the
        action, begin your company''s Incident Response process and investigate.\n\n[1]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n##
        Changelog\n* 25 September 2024 - Updated query to replace attribute `@threat_intel.results.category:anonymizer`.",
        "tags": ["source:gcp", "scope:google-compute-engine", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "technique:T1098-account-manipulation",
        "scope:google-compute-engine", "tactic:TA0003-persistence", "mitre_platform:iaas",
        "security:attack"], "version": 88, "id": "dry-uqc-aui", "updatedAt": 1736369625357,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud IAM Role updated", "createdAt":
        1671013484325, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gcp.iam.role @evt.name:google.iam.admin.v1.UpdateRole @data.resource.type:iam_role
        @threat_intel.results.category:(botnet_proxy OR hosting_proxy)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gcp_iam_role_updated_enriched"}, {"query":
        "source:gcp.iam.role @evt.name:google.iam.admin.v1.UpdateRole @data.resource.type:iam_role
        @data.protoPayload.serviceData.permissionDelta.addedPermissions:(iam.serviceAccountKeys.create
        OR iam.serviceAccounts.actAs OR iam.serviceAccounts.getAccessToken OR iam.serviceAccounts.setIamPolicy
        OR resourcemanager.organizations.setIamPolicy OR  resourcemanager.folders.setIamPolicy
        OR resourcemanager.projects.setIamPolicy OR storage.setIamPermissions OR secretmanager.secrets.*
        OR compute.*)", "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "gcp_iam_role_updated_high_value_permissions"},
        {"query": "source:gcp.iam.role @evt.name:google.iam.admin.v1.UpdateRole @data.resource.type:iam_role
        @http.useragent:*terraform*", "groupByFields": ["project_id", "@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "gcp_iam_role_updated_terraform"}, {"query": "source:gcp.iam.role
        @evt.name:google.iam.admin.v1.UpdateRole @data.resource.type:iam_role", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gcp_iam_role_updated"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600, "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "with sensitive
        permissions", "status": "medium", "notifications": [], "condition": "gcp_iam_role_updated_high_value_permissions
        > 0"}, {"name": "by an IP associated with an anonymising service", "status":
        "low", "notifications": [], "condition": "gcp_iam_role_updated_enriched >
        0"}, {"name": "by terraform", "status": "low", "notifications": [], "condition":
        "gcp_iam_role_updated_terraform > 0"}, {"name": "by non-anonymised IP address",
        "status": "info", "notifications": [], "condition": "gcp_iam_role_updated
        > 0"}], "message": "## Goal\nDetect when a Google Cloud IAM role is updated.
        \n\n## Strategy\nMonitor Google Cloud IAM activity audit logs to determine
        when the following method is invoked:\n\n* `google.iam.admin.v1.UpdateRole`\n\n##
        Triage and response\n1. Investigate the user {{@usr.id}} who performed the
        role update on {{@data.protoPayload.resourceName}} and ensure the permissions
        in `@data.protoPayload.response.included_permissions` are scoped properly.\n2.
        Review the users associated with the role and ensure they should have the
        permissions attached to the role.\n\n## Changelog\n* 25 September 2024 - Updated
        query to replace attribute `@threat_intel.results.category:anonymizer`.",
        "tags": ["tactic:TA0004-privilege-escalation", "source:gcp", "scope:google-cloud-iam",
        "technique:T1078-valid-accounts", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "mitre_platform:iaas",
        "security:attack", "scope:google-cloud-iam", "tactic:TA0004-privilege-escalation",
        "technique:T1078-valid-accounts"], "version": 87, "id": "yvc-dgl-9nb", "updatedAt":
        1736369626251, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Cloud IAM policy modified", "createdAt": 1629705620024, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gcp.project @evt.name:SetIamPolicy",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 300, "keepAlive":
        300}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect a change to the IAM policy. \n\n##
        Strategy\nThis rule lets you monitor Google Cloud Admin activity audit logs
        to determine when the `SetIamPolicy` method is invoked. \n\n## Triage and
        response\nReview the log and inspect the policy deltas (`@data.protoPayload.serviceData.policyDelta.bindingDeltas`)
        and ensure none of the actions are `REMOVE`.\n", "tags": ["source:gcp", "security:compliance",
        "technique:T1098-account-manipulation", "scope:gcp.project", "mitre_platform:iaas",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:compliance",
        "source:gcp", "tactic:TA0003-persistence", "security:attack", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "scope:gcp.project", "mitre_platform:cloud"], "version":
        87, "id": "b58-97e-9f1", "updatedAt": 1736369626285, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud IAM role created", "createdAt":
        1629705614753, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gcp.iam.role @evt.name:google.iam.admin.v1.CreateRole", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 300, "keepAlive": 300}, "cases": [{"name":
        "", "status": "info", "notifications": [], "condition": "a > 0"}], "message":
        "## Goal\nDetect when a Google Cloud IAM role is created. \n\n## Strategy\nMonitor
        Google Cloud IAM activity audit logs to determine when the following method
        is invoked:\n\n* `google.iam.admin.v1.CreateRole`\n\n## Triage and response\n1.
        Investigate the user {{@usr.id}} who created the IAM role {{@data.protoPayload.resourceName}}
        and ensure the permissions in `@data.protoPayload.response.included_permissions`
        are scoped properly.\n2. Review the users associated with the role and ensure
        they should have the permissions attached to the role.", "tags": ["source:gcp",
        "scope:google-cloud-iam", "technique:T1098-account-manipulation", "mitre_platform:iaas",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:gcp",
        "mitre_platform:cloud", "technique:T1098-account-manipulation", "tactic:TA0003-persistence",
        "mitre_platform:iaas", "security:attack", "scope:google-cloud-iam"], "version":
        87, "id": "d24-0f0-62d", "updatedAt": 1736369626266, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Log Entry deleted", "createdAt":
        1675257600577, "isDefault": true, "isPartner": false, "isEnabled": true, "isBeta":
        false, "isDeleted": false, "isDeprecated": false, "queries": [{"query": "service:logging.googleapis.com
        @evt.name:google.logging.v*.LoggingServiceV*.DeleteLog", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gcp_log_entry_deleted"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "", "status": "medium", "notifications": [], "condition": "gcp_log_entry_deleted
        > 0"}], "message": "deprecated", "tags": ["source:gcp", "technique:T1070-indicator-removal",
        "scope:google-cloud-storage", "tactic:TA0005-defense-evasion", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "security:attack", "technique:T1070-indicator-removal", "tactic:TA0005-defense-evasion",
        "scope:google-cloud-storage"], "version": 86, "id": "def-000-jnb", "updatedAt":
        1736369626567, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Cloud Logging Bucket deleted", "createdAt": 1675257600644, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "service:logging.googleapis.com
        @evt.name:google.logging.v*.ConfigServiceV*.DeleteBucket", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "google_cloud_logging_bucket_deleted"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "", "status": "medium", "notifications": [], "condition": "google_cloud_logging_bucket_deleted
        > 0"}], "message": "## Goal\nDetect when a logging bucket is deleted in Google
        Cloud. An adversary may delete a logging bucket as a means of defense evasion.\n\n##
        Strategy\nMonitor Google Cloud audit logs to determine when the following
        method is invoked:\n- `google.logging.v2.ConfigServiceV2.DeleteBucket`\n\n##
        Triage and response\nDetermine if the Google Cloud user `{{@usr.id}}` should
        be deleting the logging bucket identified in the `@data.protoPayload.resourceName`
        field.\n\n", "tags": ["source:gcp", "technique:T1562-impair-defenses", "scope:google-cloud-storage",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "technique:T1562-impair-defenses",
        "mitre_platform:iaas", "tactic:TA0005-defense-evasion", "security:attack",
        "scope:google-cloud-storage"], "version": 87, "id": "def-000-p34", "updatedAt":
        1736369626561, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Cloud Project external principal added as project owner", "createdAt":
        1670337207822, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gcp.project service:cloudresourcemanager.googleapis.com @evt.name:InsertProjectOwnershipInvite
        @data.protoPayload.request.member:(*gmail.com OR *googlemail.com)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gcp_project_external_user_added_as_project_owner"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "", "status": "high", "notifications": [], "condition": "gcp_project_external_user_added_as_project_owner
        > 0"}], "message": "## Goal\nDetect an attempt to add an external principal
        as a Google Cloud project owner.\n\n## Strategy\nThis rule monitors Google
        Cloud Audit Logs to determine when an attempt to add an external principal
        as a Google Cloud project owner has occurred. An attacker who has already
        gained initial access may try to maintain access by adding an external principal
        to the project as an owner.\n\n**Notes:**\n\n* This rule triggers when a principal
        with an email address with the domain of `gmail.com` or `googlemail.com` is
        added to a project.\n\n## Triage and response\n1. Reach out to the user or
        owner of the service account to determine if this action is legitimate.\n2.
        If the action is legitimate, consider including the user or service account
        in a suppression list. See this article on [Best practices for creating detection
        rules with Datadog Cloud SIEM][1] for more information.\n3. Otherwise, use
        the Cloud SIEM - User Investigation dashboard to see if the user or service
        account `{{@usr.email}}` has taken other actions.\n4. If the results of the
        triage indicate that an attacker has taken the action, begin your company''s
        incident response process and investigate.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "scope:google-cloud-iam", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "technique:T1098-account-manipulation",
        "tactic:TA0003-persistence", "mitre_platform:iaas", "security:attack", "scope:google-cloud-iam"],
        "version": 87, "id": "4xt-j23-jnb", "updatedAt": 1736369626550, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Pub/Sub Subscriber modified",
        "createdAt": 1629705612334, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.pubsub.subscription @evt.name:(google.pubsub.v1.Subscriber.UpdateSubscription
        OR google.pubsub.v1.Subscriber.DeleteSubscription)", "groupByFields": ["@usr.id",
        "@data.protoPayload.resourceName"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 300, "keepAlive":
        300}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect changes to Google Cloud Pub/Sub subscriptions,
        which can stop audit logs from being sent to Datadog.\n\n## Strategy\nMonitor
        Google Cloud admin activity audit logs to determine when any of the following
        methods are invoked:\n\n* `google.pubsub.v1.Subscriber.UpdateSubscription`\n*
        `google.pubsub.v1.Subscriber.DeleteSubscription`\n\n## Triage and response\nReview
        the subscription and ensure it is properly configured.\n", "tags": ["source:gcp",
        "security:compliance", "scope:gcp.pubsub.subscription", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:compliance", "source:gcp", "mitre_platform:cloud",
        "security:attack", "tactic:TA0005-defense-evasion", "technique:T1562-impair-defenses",
        "mitre_platform:iaas", "scope:gcp.pubsub.subscription"], "version": 87, "id":
        "a7b-dbc-bdd", "updatedAt": 1736369626552, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Pub/Sub topic deleted",
        "createdAt": 1629705614554, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.pubsub.topic @evt.name:google.pubsub.v1.Publisher.DeleteTopic",
        "groupByFields": ["@usr.id", "@data.protoPayload.resourceName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        300, "keepAlive": 300}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect deletion of Google
        Cloud Pub/Sub subscriptions, which can stop audit logs from being sent to
        Datadog.\n\n## Strategy\nMonitor Google Cloud admin activity audit logs to
        determine when the following method is invoked:\n\n* `google.pubsub.v1.Publisher.DeleteTopic`\n\n##
        Triage and response\nReview the subscription and ensure it is properly configured.\n",
        "tags": ["source:gcp", "security:compliance", "scope:gcp.pubsub.topic", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:compliance", "source:gcp", "scope:gcp.pubsub.topic",
        "mitre_platform:cloud", "security:attack", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "mitre_platform:iaas"], "version": 87,
        "id": "f68-e1e-db8", "updatedAt": 1736369626577, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud SQL database modified",
        "createdAt": 1629705615021, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.cloudsql.database @evt.name:(cloudsql.instances.create
        OR cloudsql.instances.create OR cloudsql.users.create OR cloudsql.users.update)",
        "groupByFields": ["project_id", "database_id", "@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        300, "keepAlive": 300}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when a Google Cloud
        SQL database has been modified.\n\n## Strategy\nThis rule lets you monitor
        Google Cloud SQL admin activity audit logs to determine when one of the following
        methods is invoked:\n\n* `cloudsql.instances.create`\n* `cloudsql.instances.create`\n*
        `cloudsql.users.update`\n\n## Triage and response\n1. Review the Google Cloud
        SQL database and ensure it is configured properly with the correct permissions.\n",
        "tags": ["technique:T1565-data-manipulation", "source:gcp", "security:compliance",
        "tactic:TA0040-impact", "mitre_platform:iaas", "scope:gcp.cloudsql.database",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "scope:gcp.cloudsql.database",
        "mitre_platform:cloud", "security:compliance", "technique:T1565-data-manipulation",
        "mitre_platform:iaas", "tactic:TA0040-impact"], "version": 88, "id": "60f-89d-fee",
        "updatedAt": 1736369626577, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Google Cloud SQL instance data exported to cloud storage",
        "createdAt": 1675672406134, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.cloudsql.database @evt.name:cloudsql.instances.export
        @data.protoPayload.request.body.exportContext.uri:(gs\\:\\/\\/*)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "google_cloud_sql_data_exported_to_cloud_storage"},
        {"query": "source:gcp.cloudsql.database @evt.name:cloudsql.instances.export
        @data.protoPayload.request.body.exportContext.uri:(gs\\:\\/\\/*) @threat_intel.results.category:(botnet_proxy
        OR hosting_proxy)", "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "google_cloud_sql_data_exported_to_cloud_storage_anonymizer"}],
        "options": {"evaluationWindow": 600, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "by an account behind an anonymizing
        proxy", "status": "medium", "notifications": [], "condition": "google_cloud_sql_data_exported_to_cloud_storage_anonymizer
        > 0"}, {"name": "by an account", "status": "info", "notifications": [], "condition":
        "google_cloud_sql_data_exported_to_cloud_storage > 0"}], "message": "## Goal\nDetect
        when an attempt to export Cloud SQL instance data to cloud storage occurs.\n\n##
        Strategy\nThis rule monitors Google Cloud Audit Logs to determine when an
        attempt to export Cloud SQL instance data to cloud storage has occurred. A
        malicious actor who has already gained initial access may try to exfiltrate
        data by exporting Cloud SQL data to external cloud storage outside of the
        compromised organization.\n\n**Notes:** \n\n* This rule triggers with a `Medium`
        severity when this activity originates from an anonymizing proxy.\n\n## Triage
        and response\n1. Reach out to the user or owner of the service account to
        determine if this action is legitimate.\n2. If the action is legitimate, consider
        including the IP address or ASN in a suppression list. See this article on
        [Best practices for creating detection rules with Datadog Cloud SIEM][1] for
        more information.\n3. Otherwise, use the Cloud SIEM - IP Investigation dashboard
        to see if the IP address: `{{@network.client.ip}}` has taken other actions.\n4.
        If the results of the triage indicate that a malicious actor has taken the
        action, begin your company''s Incident Response process and investigate.\n\n[1]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n##
        Changelog\n* 25 September 2024 - Updated query to replace attribute `@threat_intel.results.category:anonymizer`.",
        "tags": ["scope:google-cloudsql", "source:gcp", "technique:T1537-transfer-data-to-cloud-account",
        "mitre_platform:iaas", "tactic:TA0010-exfiltration", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "tactic:TA0010-exfiltration", "scope:google-cloudsql",
        "mitre_platform:iaas", "security:attack", "technique:T1537-transfer-data-to-cloud-account"],
        "version": 87, "id": "def-000-ptr", "updatedAt": 1736369627493, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud SQL instance data exported
        to cloud storage by a previously unseen user", "createdAt": 1675672406142,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:gcp.cloudsql.database
        @evt.name:cloudsql.instances.export @data.protoPayload.request.body.exportContext.uri:(gs\\:\\/\\/*)",
        "groupByFields": ["project_id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "metric": "@usr.id", "metrics": ["@usr.id"], "aggregation": "new_value",
        "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod": "new_value",
        "maxSignalDuration": 86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter":
        28, "learningDuration": 7, "learningThreshold": 0, "learningMethod": "duration"},
        "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "", "status": "medium",
        "notifications": []}], "message": "## Goal\nDetect when a previously unseen
        user attempts to export Cloud SQL instance data to cloud storage.\n\n## Strategy\nThis
        rule monitors Google Cloud Audit Logs to determine when a previously unseen
        user attempts to export Cloud SQL instance data to cloud storage. An attacker
        who has already gained initial access may try to export Cloud SQL data to
        cloud storage outside of the compromised organization.\n\n**Notes:** \n\n*
        This rule uses the `New Value` detection method, to determine when a previously
        unseen user performs this action.\n\n## Triage and response\n1. Reach out
        to the user or owner of the service account to determine if this action is
        legitimate.\n2. If the action is legitimate, consider including the IP address
        or ASN in a suppression list. See this article on [Best practices for creating
        detection rules with Datadog Cloud SIEM][1] for more information.\n3. Otherwise,
        use the Cloud SIEM - IP Investigation dashboard to see if the IP address:
        `{{@network.client.ip}}` has taken other actions.\n4. If the results of the
        triage indicate that an attacker has taken the action, begin your company''s
        incident response process and investigate.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["scope:google-cloudsql", "source:gcp", "technique:T1537-transfer-data-to-cloud-account",
        "mitre_platform:iaas", "tactic:TA0010-exfiltration", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "tactic:TA0010-exfiltration", "scope:google-cloudsql",
        "mitre_platform:iaas", "security:attack", "technique:T1537-transfer-data-to-cloud-account"],
        "version": 87, "id": "def-000-75j", "updatedAt": 1736369627634, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Service Account Impersonation
        activity using access token generation", "createdAt": 1662477383034, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gcp.service.account
        service:iamcredentials.googleapis.com @evt.name:GenerateAccessToken @data.protoPayload.authorizationInfo.granted:true",
        "groupByFields": ["@network.client.ip", "@http.useragent"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "generate_access_token_success"},
        {"query": "source:gcp.service.account service:iamcredentials.googleapis.com
        @evt.name:GenerateAccessToken @evt.outcome:PERMISSION_DENIED", "groupByFields":
        ["@network.client.ip", "@http.useragent"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "generate_access_token_failed"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 300}, "cases": [{"name": "Successful", "status": "medium",
        "notifications": [], "condition": "generate_access_token_failed > 0 && generate_access_token_success
        > 0"}, {"name": "Attempted", "status": "low", "notifications": [], "condition":
        "generate_access_token_failed > 0"}], "message": "## Goal\nDetect Google Cloud
        service account impersonation activity through the use of access tokens.\n\n##
        Strategy\nMonitor Google Cloud Admin Activity audit logs for event `@evt.name:GenerateAccessToken`:\n*
        Successful Attempts: `@data.protoPayload.authorizationInfo.granted:true`\n*
        Failed Attempts: `@evt.outcome:PERMISSION_DENIED`\n\n## Triage & Response\n1.
        Investigate if the user `{{@usr.id}}` from IP address:`{{@network.client.ip}}`
        intended to perform this activity.\n2. If unauthorized:\n   * Revoke access
        of compromised user and service account.\n   * Investigate other activities
        performed by the user `{{@usr.id}}` using the Cloud SIEM - User Investigation
        dashboard.\n   * Investigate other activities performed by the IP `{{@network.client.ip}}`
        using the Cloud SIEM - IP Investigation dashboard.", "tags": ["tactic:TA0004-privilege-escalation",
        "source:gcp", "scope:google-cloud-iam", "technique:T1078-valid-accounts",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:gcp",
        "mitre_platform:cloud", "mitre_platform:iaas", "security:attack", "scope:google-cloud-iam",
        "tactic:TA0004-privilege-escalation", "technique:T1078-valid-accounts"], "version":
        87, "id": "h56-k5y-xp3", "updatedAt": 1736369627641, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}], "meta": {"page": {"total_count": 560, "total_filtered_count":
        100}}}'
    headers:
      Content-Type:
      - application/json
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Content-Type:
      - application/json
    method: GET
    uri: https://us5.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=3&page%5Bsize%5D=100
  response:
    body:
      string: '{"data": [{"name": "Google Cloud Service Account Impersonation using
        GCPloit Exploitation Framework", "createdAt": 1657136696859, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gcp.cloud.function
        @evt.name:google.cloud.functions.v1.CloudFunctionsService.CreateFunction @data.protoPayload.request.function.timeout:539s",
        "groupByFields": ["@function.name"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@usr.id"], "aggregation": "cardinality", "name": "function_creation"}, {"query":
        "@evt.name:google.cloud.functions.v1.CloudFunctionsService.GetIamPolicy",
        "groupByFields": ["@function.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "get_iam_policy"}, {"query": "@evt.name:google.cloud.functions.v1.CloudFunctionsService.SetIamPolicy",
        "groupByFields": ["@function.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "set_iam_policy"}], "options": {"evaluationWindow":
        60, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        300}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "function_creation > 0 &&  get_iam_policy > 0 && set_iam_policy >0"}], "message":
        "## Goal\nDetect possible Google Cloud Service Account impersonation activity
        using the [gcploit][1] exploitation framework.\n\n## Strategy\nMonitor Google
        Cloud Function Logs `source:gcp.cloud.function` and detect if the following
        sequence of events has occurred within a one minute window:\n* Function is
        created - `google.cloud.functions.v1.CloudFunctionsService.CreateFunction`
        with a timeout of 539s (`@data.protoPayload.request.function.timeout:539s`)\n*
        Function''s IAM access control policy is enumerated - `google.cloud.functions.v1.CloudFunctionsService.GetIamPolicy`\n*
        Function''s IAM access control policy is set - `google.cloud.functions.v1.CloudFunctionsService.SetIamPolicy`\n\n##
        Triage & Response\n1. Investigate if the function:`{{@function.name}}` was
        intentionally created by user `{{@usr.id}}`.\n2. If unauthorized:\n   * Revoke
        access of compromised credentials.\n   * Remove unauthorized cloud functions.\n   *
        Investigate other activities performed by the user `{{@usr.id}}` using the
        Cloud SIEM - User Investigation dashboard.\n\n[1]: https://github.com/dxa4481/gcploit",
        "tags": ["tactic:TA0004-privilege-escalation", "source:gcp", "technique:T1078-valid-accounts",
        "scope:gcp-cloud-functions", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "scope:gcp-cloud-functions", "mitre_platform:iaas",
        "security:attack", "tactic:TA0004-privilege-escalation", "technique:T1078-valid-accounts"],
        "version": 87, "id": "8x3-97g-35a", "updatedAt": 1736369627664, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Service Account accessing
        anomalous number of Google Cloud APIs", "createdAt": 1629705612731, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gcp* @data.logName:*%2Factivity
        @usr.id:*.iam.gserviceaccount.com", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@evt.name"], "aggregation": "cardinality", "name":
        ""}], "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 1800, "keepAlive": 1800}, "cases": [{"name": "", "status":
        "info", "notifications": []}], "message": "## Goal\nDetect when a Google Cloud
        service account is compromised.\n\n## Strategy \nInspect the Google Cloud
        admin activity logs (`@data.logName:*%2Factivity`) and filter for only Google
        Cloud service accounts (`@usr.id:*.iam.gserviceaccount.com`). Count the unique
        number of Google Cloud API calls (`@evt.name`) which are being made for each
        service account (`@usr.id`). The anomaly detection baselines each service
        account and then generates a security signal when a service account deviates
        from their baseline. \n\nTo read more about Google Cloud audit logs, read
        the [blog post][1].\n\n## Triage and response\nInvestigate the logs and determine
        whether or not the Google Cloud service account is compromised.\n\n## Changelog\n*
        17 October 2022 - Updated tags.\n\n[1]: https://www.datadoghq.com/blog/monitoring-gcp-audit-logs/",
        "tags": ["source:gcp", "scope:google-cloud-iam", "technique:T1580-cloud-infrastructure-discovery",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "technique:T1580-cloud-infrastructure-discovery",
        "mitre_platform:iaas", "tactic:TA0007-discovery", "security:attack", "scope:google-cloud-iam"],
        "version": 87, "id": "pgl-8ie-264", "updatedAt": 1736369627962, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Service Account created",
        "createdAt": 1629705615612, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccount",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 300, "keepAlive":
        300}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a new service account is created.\n\n##
        Strategy\nThis rule lets you monitor Google Cloud admin activity audit logs
        to determine when a service account is created. \n\n## Triage and response\nContact
        the user who created the service account and ensure that the account is needed
        and that the role is scoped properly.\n", "tags": ["source:gcp", "security:compliance",
        "technique:T1136-create-account", "mitre_platform:iaas", "scope:gcp.service.account",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:compliance",
        "source:gcp", "scope:gcp.service.account", "mitre_platform:cloud", "security:attack",
        "mitre_platform:iaas", "technique:T1136-create-account", "tactic:TA0003-persistence"],
        "version": 87, "id": "c19-1d0-3b1", "updatedAt": 1736369627941, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Service Account key created",
        "createdAt": 1629705618645, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.service.account @evt.name:google.iam.admin.v1.CreateServiceAccountKey",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 300, "keepAlive":
        300}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a new service account key is created.  An
        attacker could use this key as a backdoor to your account. \n\n## Strategy\nThis
        rule lets you monitor Google Cloud Admin activity audit logs to detect the
        creation of a service account key. \n\n## Triage and response\nContact the
        user who created the service account key to ensure they''re managing the key
        securely.\n\n## Changelog\n31 January 2023 - Updated tags.", "tags": ["source:gcp",
        "technique:T1098-account-manipulation", "mitre_platform:iaas", "scope:gcp.service.account",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:gcp",
        "mitre_platform:cloud", "technique:T1098-account-manipulation", "tactic:TA0003-persistence",
        "mitre_platform:iaas", "security:attack", "scope:gcp.service.account"], "version":
        88, "id": "c17-28f-69c", "updatedAt": 1736369627946, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Storage Bucket contents
        downloaded without authentication", "createdAt": 1629705616891, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gcp.gcs.bucket
        -@usr.id:* @evt.name:storage.objects.get status:info", "groupByFields": ["project_id",
        "bucket_name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "get_object"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 300, "keepAlive": 300}, "cases": [{"name":
        "get_object", "status": "info", "notifications": [], "condition": "get_object
        > 0"}], "message": "## Goal\nDetect unauthenticated access to an object in
        a GCS bucket (`bucket_name`).\n\n## Strategy \nMonitor GCS bucket (`bucket_name`)
        for get requests(`@evt.name:storage.objects.get`) made by unauthenticated
        users (`@usr.id`).\n\n## Triage and response\nInvestigate the logs and determine
        whether or not the accessed bucket: {{bucket_name}} should be accessible to
        unauthenticated users.\n\n## Changelog\n* 27 October 2022 - updated tags.",
        "tags": ["source:gcp", "tactic:TA0009-collection", "technique:T1530-data-from-cloud-storage",
        "scope:google-cloud-storage", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "technique:T1530-data-from-cloud-storage", "tactic:TA0009-collection",
        "mitre_platform:cloud", "mitre_platform:iaas", "security:attack", "scope:google-cloud-storage"],
        "version": 87, "id": "30a-b8b-80f", "updatedAt": 1736369627963, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Storage Bucket enumerated",
        "createdAt": 1629705615861, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.gcs.bucket @evt.name:storage.buckets.list @usr.id:*gserviceaccount.com",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a service account lists out GCS
        Buckets.\n\n## Strategy\nThis rule lets you monitor GCS bucket admin activity
        audit logs to determine when a service account invokes the following method:\n\n*
        `storage.buckets.list`\n\n## Triage and response\nDetermine whether this service
        account should be making list bucket calls.\n* If the account was compromised,
        secure the account and investigate how it was compromised and if the account
        made other unauthorized calls.\n* If the owner of the service account intended
        to make the `ListBuckets` API call, consider whether this API call is needed.
        It could cause a security issue for the application to know the name of the
        bucket it needs to access. If it''s not needed, modify this rule''s filter
        to stop generating signals for this specific service account.\n", "tags":
        ["source:gcp", "technique:T1619-cloud-storage-object-discovery", "scope:google-cloud-storage",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "technique:T1619-cloud-storage-object-discovery",
        "mitre_platform:iaas", "tactic:TA0007-discovery", "security:attack", "scope:google-cloud-storage"],
        "version": 87, "id": "a6b-6c9-419", "updatedAt": 1736369627945, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Storage Bucket modified",
        "createdAt": 1629705613746, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.gcs.bucket @evt.name:storage.buckets.update", "groupByFields":
        ["project_id", "bucket_name", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 300, "keepAlive":
        300}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when an administrative change to a
        GCS Bucket has been made. This could change the retention policy or bucket
        lock. For more information, see the [GCS Bucket Lock docs][1].\n\n## Strategy\nThis
        rule lets you monitor GCS bucket admin activity audit logs to determine if
        a bucket has been updated with the following method:\n\n* `storage.buckets.update`\n\n##
        Triage and response\nReview the bucket to ensure that it is properly configured.\n\n[1]:
        https://cloud.google.com/storage/docs/bucket-lock\n", "tags": ["source:gcp",
        "security:compliance", "technique:T1578-modify-cloud-compute-infrastructure",
        "scope:google-cloud-storage", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "security:compliance",
        "mitre_platform:iaas", "tactic:TA0005-defense-evasion", "scope:google-cloud-storage",
        "technique:T1578-modify-cloud-compute-infrastructure"], "version": 88, "id":
        "6c5-db7-1b4", "updatedAt": 1736369627960, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud Storage Bucket permissions
        modified", "createdAt": 1629705616184, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:gcp.gcs.bucket @evt.name:storage.setIamPermissions
        -@evt.outcome:ERROR", "groupByFields": ["project_id", "bucket_name", "@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 300, "keepAlive": 300}, "cases": [{"name": "", "status":
        "info", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when permissions have changed on a GCS Bucket.\n\n## Strategy\nMonitor GCS
        bucket admin activity audit logs to determine the following method is invoked:\n\n*
        `storage.setIamPermissions`\n\n## Triage and response\nReview the bucket permissions
        and ensure they are not overly permissive.\n\n## Changelog\n5 September 2022
        - Updated rule query.", "tags": ["tactic:TA0004-privilege-escalation", "source:gcp",
        "security:compliance", "technique:T1098-account-manipulation", "technique:T1562-impair-defenses",
        "scope:google-cloud-storage", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1562-impair-defenses", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "tactic:TA0004-privilege-escalation", "scope:google-cloud-storage",
        "mitre_platform:cloud", "tactic:TA0005-defense-evasion", "source:gcp", "security:compliance"],
        "version": 88, "id": "a7f-017-9cc", "updatedAt": 1736369629098, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud exposed service account
        key", "createdAt": 1713960782006, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.* @usr.id:gcp-compromised-key-response@system.gserviceaccount.com
        @evt.name:google.iam.admin.v1.DisableServiceAccountKey", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "google_cloud_exposed_service_account_key"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "critical", "notifications":
        [], "condition": "google_cloud_exposed_service_account_key > 0"}], "message":
        "## Goal\nDetect when Google Cloud disables a key for being exposed.\n\n##
        Strategy\nThis rule monitors Cloud Audit Logs and detects when the principal
        [gcp-compromised-key-response@system.gserviceaccount.com][1] disabled a key.
        If Google Cloud detects an exposed key, it automatically disables the key.\n\n##
        Triage and response\n1. An abuse event is created in the [Abuse Event logs][2].\n2.
        Investigate any other actions carried out by the compromised identity `{{@data.protoPayload.request.name}}`
        using the Cloud SIEM investigator.\n\n[1]: https://cloud.google.com/resource-manager/docs/organization-policy/restricting-service-accounts#disable-exposed-keys\n[2]:
        https://cloud.google.com/logging/docs/api/platform-logs#abuse_event", "tags":
        ["source:gcp", "scope:google-cloud-iam", "technique:T1552-unsecured-credentials",
        "tactic:TA0006-credential-access", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "mitre_platform:iaas",
        "security:attack", "tactic:TA0006-credential-access", "technique:T1552-unsecured-credentials",
        "scope:google-cloud-iam"], "version": 88, "id": "def-000-al8", "updatedAt":
        1736369629096, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Cloud logging sink modified", "createdAt": 1629705615006, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gcp.logging.sink
        @evt.name:(google.logging.v2.ConfigServiceV2.UpdateSink OR google.logging.v2.ConfigServiceV2.DeleteSink)",
        "groupByFields": ["@usr.id", "@data.protoPayload.resourceName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        300, "keepAlive": 300}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect changes to Google
        Cloud logging sinks, which can stop audit logs from being sent to Datadog.\n\n##
        Strategy\nMonitor Google Cloud admin activity audit logs to determine when
        any of the following methods are invoked:\n\n* `google.logging.v2.ConfigServiceV2.UpdateSink`\n*
        `google.logging.v2.ConfigServiceV2.DeleteSink`\n\n## Triage and response\nReview
        the sink and ensure the sink is properly configured.\n\n## Changelog\n7 February
        2023 - Updated query.\n", "tags": ["source:gcp", "technique:T1562-impair-defenses",
        "scope:gcp.project", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud",
        "technique:T1562-impair-defenses", "scope:gcp.project", "mitre_platform:iaas",
        "tactic:TA0005-defense-evasion", "security:attack"], "version": 87, "id":
        "e74-752-b34", "updatedAt": 1736369629096, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Cloud unauthorized service account
        activity", "createdAt": 1629705615834, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:gcp.* @data.protoPayload.status.code:7 @usr.id:(*gserviceaccount.com
        OR *google.com)", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@evt.name"], "aggregation": "cardinality", "name":
        "failed_attempt"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 300, "keepAlive": 300}, "cases": [{"name":
        "greater than 999 failed attempts", "status": "high", "notifications": [],
        "condition": "failed_attempt > 999"}, {"name": "greater than 100 failed attempts",
        "status": "medium", "notifications": [], "condition": "failed_attempt > 100"},
        {"name": "greater than 10 failed attempts", "status": "low", "notifications":
        [], "condition": "failed_attempt > 10"}], "message": "## Goal\nDetect when
        there is unauthorized activity by a service account in GCP.\n\n## Strategy\nMonitor
        Google Cloud logs and detect when a service account makes an API request and
        the request returns the status code equal to `7` within the log attribute
        `@data.protoPayload.status.code`. The status code `7` indicates the service
        account did not have permission to make the API call.\n\n## Triage and response\n1.
        Investigate the service account:`{{@usr.id}}` that made the unauthorized calls
        and confirm if there is a misconfiguration in IAM permissions or if an attacker
        compromised the service account.\n2. If unauthorized, revoke access of compromised
        service account and rotate credentials.\n\n## Changelog\n22 June 2022 - Updated
        query, rule case and triage.", "tags": ["source:gcp", "security:compliance",
        "scope:google-cloud-iam", "technique:T1078-valid-accounts", "mitre_platform:iaas",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:compliance", "source:gcp", "mitre_platform:cloud", "security:attack",
        "scope:google-cloud-iam", "mitre_platform:iaas", "tactic:TA0001-initial-access",
        "technique:T1078-valid-accounts"], "version": 88, "id": "8fc-9c9-c02", "updatedAt":
        1736369629113, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Cloud unauthorized user activity", "createdAt": 1629705619827, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gcp.* @data.protoPayload.status.code:7
        -@usr.id:(*gserviceaccount.com OR *google.com)", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@evt.name"], "aggregation":
        "cardinality", "name": "failed_attempt"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 300, "keepAlive":
        300}, "cases": [{"name": "greater than 999 failed attempts", "status": "high",
        "notifications": [], "condition": "failed_attempt > 999"}, {"name": "greater
        than 100 failed attempts", "status": "medium", "notifications": [], "condition":
        "failed_attempt > 100"}, {"name": "greater than 10 failed attempts", "status":
        "low", "notifications": [], "condition": "failed_attempt > 10"}], "message":
        "## Goal\nDetect when unauthorized activity by a user is detected in Google
        Cloud.\n\n## Strategy\nMonitor Google Cloud logs and detect when a user account
        makes an API request and the request returns the status code equal to `7`
        within the log attribute `@data.protoPayload.status.code`. The status code
        `7` indicates the user account did not have permission to make the API call.\n\n##
        Triage and response\n1. Investigate the user:`{{@usr.id}}` that made the unauthorized
        calls and confirm if there is a misconfiguration in IAM permissions or if
        an attacker compromised the user account.\n2. If unauthorized, revoke access
        of compromised user account and rotate credentials.\n\n## Changelog\n22 June
        2022 - Updated query, rule case and triage.", "tags": ["source:gcp", "security:compliance",
        "scope:google-cloud-iam", "technique:T1078-valid-accounts", "mitre_platform:iaas",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:compliance", "source:gcp", "mitre_platform:cloud", "security:attack",
        "scope:google-cloud-iam", "mitre_platform:iaas", "tactic:TA0001-initial-access",
        "technique:T1078-valid-accounts"], "version": 88, "id": "dcf-339-120", "updatedAt":
        1736369629391, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Compute Engine firewall egress rule opened to the world", "createdAt":
        1680532340156, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gcp.gce.firewall.rule @evt.name:v*.compute.firewalls.insert @data.protoPayload.request.direction:EGRESS
        @data.protoPayload.request.destinationRanges:\"0.0.0.0/0\" -(@threat_intel.results.category:(attack
        OR tor OR botnet_proxy OR hosting_proxy) OR @threat_intel.results.intention:malicious)",
        "groupByFields": ["@usr.id", "@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "firewall_rule_by_threat_uninformed_ip"},
        {"query": "source:gcp.gce.firewall.rule @evt.name:v*.compute.firewalls.insert
        @data.protoPayload.request.direction:EGRESS @data.protoPayload.request.destinationRanges:\"0.0.0.0/0\"
        @threat_intel.results.category:tor", "groupByFields": ["@usr.id", "@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "firewall_rule_by_suspicious_ip"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "by a Tor IP", "status": "high", "notifications":
        [], "condition": "firewall_rule_by_suspicious_ip > 0"}, {"name": "by a threat-uninformed
        IP", "status": "medium", "notifications": [], "condition": "firewall_rule_by_threat_uninformed_ip
        > 0"}], "message": "## Goal\nDetect when a Google Compute Engine firewall
        egress rule is opened to the world. \n\n## Strategy\nThis rule monitors Google
        Cloud Audit Logs to determine when a `v*.compute.firewalls.insert` API call
        is made with the traffic direction as egress (`@data.protoPayload.request.direction:EGRESS`)
        and the destination range as all IP addresses (`@data.protoPayload.request.destinationRanges:0.0.0.0/0`).\n\nAn
        excessively open firewall rule like this could be a sign of an ongoing cryptomining
        attack.\n\n## Triage and response\n1. Determine if `{{@usr.id}}` from IP address
        `{{@network.client.ip}}` should have made the `{{@evt.name}}` API call.\n2.
        If the API call was not made by the user:\n  * Rotate the user credentials.\n  *
        Determine what other API calls were made by the user.\n  * Investigate VPC
        flow logs and OS system logs to determine if unauthorized access occurred.\n3.
        If the API call was made legitimately by the user:\n  * Advise the user to
        modify the IP range to the company private network or bastion host.\n\n##
        Changelog\n* 17 August 2023 - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n* 25 September 2024 - Updated
        query to replace attribute `@threat_intel.results.category:anonymizer`.",
        "tags": ["source:gcp", "scope:gcp.gce.firewall.rule", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "technique:T1562-impair-defenses",
        "mitre_platform:iaas", "scope:gcp.gce.firewall.rule", "tactic:TA0005-defense-evasion",
        "security:attack"], "version": 87, "id": "def-000-gsr", "updatedAt": 1736369629404,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Compute Engine firewall rule
        modified", "createdAt": 1629705618961, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:gcp.gce.firewall.rule @evt.name:(v1.compute.firewalls.delete
        OR v1.compute.firewalls.insert OR v1.compute.firewalls.patch)", "groupByFields":
        ["project_id", "@data.protoPayload.resourceOriginalState.name", "@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "info", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when a firewall rule is created, modified or deleted. \n\n## Strategy\nMonitor
        Google Compute Engine activity audit logs to determine when any of the following
        methods are invoked:\n\n* `v1.compute.firewalls.delete`\n* `v1.compute.firewalls.insert`\n*
        `v1.compute.firewalls.patch` \n\n## Triage and response\n1. Review the log
        and role and ensure the permissions are scoped properly.\n2. Review the users
        associated with the role and ensure they should have the permissions attached
        to the role.\n", "tags": ["source:gcp", "scope:gcp.gce.firewall.rule", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "technique:T1562-impair-defenses",
        "mitre_platform:iaas", "scope:gcp.gce.firewall.rule", "tactic:TA0005-defense-evasion",
        "security:attack"], "version": 87, "id": "522-190-266", "updatedAt": 1736369629384,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Compute Engine image created",
        "createdAt": 1680532340224, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.gce.image @evt.name:v*.compute.images.insert @network.client.is_private_network_ip:false",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "image_created_by_threat_uninformed_ip"},
        {"query": "source:gcp.gce.image @evt.name:v*.compute.images.insert (@threat_intel.results.category:(attack
        OR anonymizer OR tor) OR @threat_intel.results.intention:malicious)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "image_created_by_suspicious_ip"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "by a suspicious IP", "status":
        "high", "notifications": [], "condition": "image_created_by_suspicious_ip
        > 0"}, {"name": "by a threat-uninformed IP", "status": "medium", "notifications":
        [], "condition": "image_created_by_threat_uninformed_ip > 0"}], "message":
        "## Goal\nDetect when a Google Compute Engine image is created. \n\n## Strategy\nMonitor
        Google Cloud Audit Logs to determine when the following method is invoked
        from an external IP adddress:\n\n* `v*.compute.images.insert`\n\n## Triage
        and response\n1. Investigate the user (`{{@usr.id}}`) and IP address (`{{@network.client.ip}}`)
        where the image creation activity originated from and determine whether they
        are authorised to perform this activity.\n2. If the action is legitimate,
        consider including the user in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][1] for more information.\n3.
        Otherwise, use the Cloud SIEM - User Investigation dashboard to see if the
        user `{{@usr.id}}` has taken other actions.\n4. If the results of the triage
        indicate that an attacker has taken the action, begin your company''s incident
        response process and an investigation.\n\n## Changelog\n* 17 August 2023 -
        Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "scope:google-compute-engine", "tactic:TA0040-impact",
        "technique:T1496-resource-hijacking", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "scope:google-compute-engine",
        "mitre_platform:iaas", "technique:T1496-resource-hijacking", "security:attack",
        "tactic:TA0040-impact"], "version": 87, "id": "def-000-1qw", "updatedAt":
        1736369629386, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Compute Engine instance metadata SSH key added or modified", "createdAt":
        1670337207802, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gcp.gce.instance @evt.name:v1.compute.instances.setMetadata (@data.protoPayload.metadata.instanceMetadataDelta.modifiedMetadataKeys:ssh-keys
        OR @data.protoPayload.metadata.instanceMetadataDelta.addedMetadataKeys:ssh-keys)
        @threat_intel.results.category:(botnet_proxy OR hosting_proxy)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gce_instance_ssh_key_added_to_metadata_enriched"},
        {"query": "source:gcp.gce.instance @evt.name:v1.compute.instances.setMetadata
        (@data.protoPayload.metadata.instanceMetadataDelta.modifiedMetadataKeys:ssh-keys
        OR @data.protoPayload.metadata.instanceMetadataDelta.addedMetadataKeys:ssh-keys)",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "gce_instance_ssh_key_added_to_metadata"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "by an account behind an anonymizing
        proxy", "status": "medium", "notifications": [], "condition": "gce_instance_ssh_key_added_to_metadata_enriched
        > 0"}, {"name": "by an account", "status": "info", "notifications": [], "condition":
        "gce_instance_ssh_key_added_to_metadata > 0"}], "message": "## Goal\nDetect
        when an attempt to add or modify a SSH key to GCE instance metadata occurs.\n\n##
        Strategy\nThis rule monitors Google Cloud Audit Logs to determine when an
        attempt to add or modify a SSH key in the GCE instance metadata has occurred.
        A malicious actor who has already gained initial access may try to preserve
        access to GCE instances by adding their SSH key to the instance metadata.\n\n**Notes:**
        \n\n* This rule triggers with a `Medium` severity when this activity originates
        from an anonymizing proxy.\n\n## Triage and response\n1. Reach out to the
        user or owner of the service account to determine if this action is legitimate.\n2.
        If the action is legitimate, consider including the IP address or ASN in a
        suppression list. See this article on [Best practices for creating detection
        rules with Datadog Cloud SIEM][1] for more information.\n3. Otherwise, use
        the Cloud SIEM - IP Investigation dashboard to see if the IP address: `{{@network.client.ip}}`
        has taken other actions.\n4. If the results of the triage indicate that a
        malicious actor has taken the action, begin your company''s Incident Response
        process and investigate.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n\n##
        Changelog\n* 25 September 2024 - Updated query to replace attribute `@threat_intel.results.category:anonymizer`.",
        "tags": ["source:gcp", "scope:google-compute-engine", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "technique:T1098-account-manipulation",
        "scope:google-compute-engine", "tactic:TA0003-persistence", "mitre_platform:iaas",
        "security:attack"], "version": 88, "id": "k9n-l4e-i45", "updatedAt": 1736369629403,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Compute Engine instances created
        in multiple zones by user", "createdAt": 1681744284426, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:gcp.gce.instance @evt.name:(v1.compute.instances.insert
        OR beta.compute.instances.insert) -@http.useragent:(\"GCE Managed Instance
        Group\" OR \"GCE Managed Instance Group for GKE\")", "groupByFields": ["project_id",
        "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": ["zone"],
        "aggregation": "cardinality", "name": "gce_instance_creation"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "over 100 instances", "status":
        "critical", "notifications": [], "condition": "gce_instance_creation > 100"},
        {"name": "over 50 instances", "status": "high", "notifications": [], "condition":
        "gce_instance_creation > 50"}, {"name": "over 10 instances", "status": "medium",
        "notifications": [], "condition": "gce_instance_creation > 10"}, {"name":
        "over 5 instances", "status": "low", "notifications": [], "condition": "gce_instance_creation
        > 5"}], "message": "## Goal\n\nDetect when multiple Google Compute Engine
        instances are created in multiple distinct zones by an individual user or
        service account. This could be an indication of cryptomining activity.\n\n##
        Strategy\n\nMonitor Google Cloud Audit logs and detect when a single user
        or service account evokes the `v1.compute.instances.insert` or `beta.compute.instances.insert`
        API call in multiple distinct zones.\n\n## Triage and response\n\n1. Determine
        if the user `{{@usr.id}}` and IP address `{{@network.client.ip}}` should be
        performing the observed event: `{{@evt.name}}`.\n2. If the action is legitimate,
        consider including the user in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][1] for more information.\n3.
        Otherwise, use the Cloud SIEM - User Investigation dashboard to see if the
        user `{{@usr.id}}` has taken other actions.\n4. If the results of the triage
        indicate that an attacker has taken the action, begin your company''s incident
        response process and an investigation.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise\n",
        "tags": ["source:gcp", "scope:google-compute-engine", "tactic:TA0040-impact",
        "technique:T1496-resource-hijacking", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "scope:google-compute-engine",
        "mitre_platform:iaas", "technique:T1496-resource-hijacking", "security:attack",
        "tactic:TA0040-impact"], "version": 87, "id": "def-000-phy", "updatedAt":
        1736369629418, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Compute Engine network created", "createdAt": 1682301645691, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gcp.gce.network
        @evt.name:(beta.compute.networks.insert OR v*.compute.networks.insert)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "network_created_by_threat_uninformed_ip"},
        {"query": "source:gcp.gce.network @evt.name:(beta.compute.networks.insert
        OR v*.compute.networks.insert) (@threat_intel.results.category:(attack OR
        botnet_proxy OR hosting_proxy OR tor) OR @threat_intel.results.intention:malicious)",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "network_created_by_suspicious_ip"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "by a suspicious IP", "status":
        "medium", "notifications": [], "condition": "network_created_by_suspicious_ip
        > 0"}, {"name": "by a threat-uninformed IP", "status": "low", "notifications":
        [], "condition": "network_created_by_threat_uninformed_ip > 0"}], "message":
        "## Goal\nDetect when a Google Compute Engine network is created. \n\n## Strategy\nThis
        rule lets you monitor Google Compute Engine activity audit logs to determine
        when the following method is invoked to create a new Compute Engine network:\n\n*
        `beta.compute.networks.insert`\n* `v*.compute.networks.insert`\n\nAn attacker
        could create a compute network with the intention of enabling cryptomining
        and bypassing networking limitations.\n\n## Triage and response\nReview the
        Compute Engine network.\n\n## Changelog\n* 17 August 2023 - Updated query
        to replace attribute `@threat_intel.results.subcategory:tor` with `@threat_intel.results.category:tor`.\n*
        30 September 2024 - Updated query to replace attribute `@threat_intel.results.subcategory:anonymizer`.",
        "tags": ["source:gcp", "scope:gcp.gce.network", "technique:T1578-modify-cloud-compute-infrastructure",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "mitre_platform:iaas",
        "tactic:TA0005-defense-evasion", "security:attack", "technique:T1578-modify-cloud-compute-infrastructure",
        "scope:gcp.gce.network"], "version": 88, "id": "def-000-6fd", "updatedAt":
        1736369630569, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Compute Engine network route created or modified", "createdAt": 1629705615670,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:gcp.gce.route
        @evt.name:(beta.compute.routes.insert OR beta.compute.routes.patch)", "groupByFields":
        ["project_id", "@data.protoPayload.resourceName", "@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        300, "keepAlive": 300}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when a firewall rule
        is created or modified. \n\n## Strategy\nThis rule lets you monitor GCE activity
        audit logs to determine if a firewall is being adjusted by showing you when
        any of the following methods are invoked:\n\n* `beta.compute.routes.insert`\n*
        `beta.compute.routes.patch`\n\n## Triage and response\nVerify that the GCE
        network route is configured properly and that the user intended to modify
        the firewall.\n", "tags": ["scope:gcp.gce.route", "source:gcp", "technique:T1578-modify-cloud-compute-infrastructure",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:gcp", "mitre_platform:cloud", "scope:gcp.gce.route",
        "mitre_platform:iaas", "tactic:TA0005-defense-evasion", "security:attack",
        "technique:T1578-modify-cloud-compute-infrastructure"], "version": 88, "id":
        "3b3-32c-73c", "updatedAt": 1736369630554, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Compute Engine project metadata
        SSH key added or modified", "createdAt": 1670337207832, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:gcp.gce.project @evt.name:v1.compute.projects.setCommonInstanceMetadata
        (@data.protoPayload.metadata.projectMetadataDelta.modifiedMetadataKeys:ssh-keys
        OR @data.protoPayload.metadata.instanceMetadataDelta.addedMetadataKeys:ssh-keys)
        @threat_intel.results.category:(botnet_proxy OR hosting_proxy)", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gce_project_ssh_key_added_to_project_metadata_enriched"},
        {"query": "source:gcp.gce.project @evt.name:v1.compute.projects.setCommonInstanceMetadata
        (@data.protoPayload.metadata.projectMetadataDelta.modifiedMetadataKeys:ssh-keys
        OR @data.protoPayload.metadata.instanceMetadataDelta.addedMetadataKeys:ssh-keys)",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "gce_project_ssh_key_added_to_project_metadata"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "by an account behind an anonymizing
        proxy", "status": "medium", "notifications": [], "condition": "gce_project_ssh_key_added_to_project_metadata_enriched
        > 0"}, {"name": "by an account", "status": "info", "notifications": [], "condition":
        "gce_project_ssh_key_added_to_project_metadata > 0"}], "message": "## Goal\nDetect
        when an attempt to add or modify a SSH key to GCE project metadata occurs.\n\n##
        Strategy\nThis rule monitors Google Cloud Audit Logs to determine when an
        attempt to add or modify a SSH key in the GCE project metadata has occurred.
        A malicious actor who has already gained initial access may try to preserve
        access or laterally move to other GCE instances by adding their SSH key to
        the project metadata.\n\n**Notes:** \n\n* This rule triggers with a `Medium`
        severity when this activity originates from an anonymizing proxy.\n\n## Triage
        and response\n1. Reach out to the user or owner of the service account to
        determine if this action is legitimate.\n2. If the action is legitimate, consider
        including the IP address or ASN in a suppression list. See this article on
        [Best practices for creating detection rules with Datadog Cloud SIEM][1] for
        more information.\n3. Otherwise, use the Cloud SIEM - IP Investigation dashboard
        to see if the IP address: `{{@network.client.ip}}` has taken other actions.\n4.
        If the results of the triage indicate that a malicious actor has taken the
        action, begin your company''s Incident Response process and investigate.\n\n##
        Changelog\n* 9 February 2023 - Updated rule title and triage and response
        section.\n* 25 September 2024 - Updated query to replace attribute `@threat_intel.results.category:anonymizer`.\n\n[1]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "scope:google-compute-engine", "technique:T1098-account-manipulation",
        "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:gcp", "mitre_platform:cloud", "technique:T1098-account-manipulation",
        "scope:google-compute-engine", "tactic:TA0003-persistence", "mitre_platform:iaas",
        "security:attack"], "version": 88, "id": "xyy-l4x-zf2", "updatedAt": 1736369630553,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Compute Engine service account
        used outside of Google Cloud", "createdAt": 1675101915391, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:gcp* @usr.id:*-compute@developer*
        -@network.client.geoip.as.domain:google.com -@network.client.geoip.invalidAddress:private
        -@http.useragent:(*GCE* or *gcloud*) -@network.client.ip:gce-internal-ip @network.client.is_private_network_ip:false",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@http.useragent"], "aggregation": "cardinality", "name":
        "service_account_usage"}, {"query": "source:gcp* @usr.id:*-compute@developer*
        -@network.client.geoip.as.domain:google.com -@network.client.geoip.invalidAddress:private
        -@http.useragent:(*GCE* or *gcloud*) -@network.client.ip:gce-internal-ip @network.client.is_private_network_ip:false
        @threat_intel.results.category:tor", "groupByFields": ["project_id", "@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@http.useragent"],
        "aggregation": "cardinality", "name": "service_account_usage_tor_ip"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 7200}, "cases": [{"name": "from Tor client", "status":
        "high", "notifications": [], "condition": "service_account_usage_tor_ip >
        0"}, {"name": "from non threat-related IP", "status": "low", "notifications":
        [], "condition": "service_account_usage > 0"}], "message": "## Goal\nDetect
        when a [Google Compute Engine default service account][1] is used outside
        of Google Cloud. \n\n## Strategy\nThis rule monitors Google Cloud Audit Logs
        to determine when a Google Compute Engine default service account is used
        from outside a Google Cloud environment. The usage of a Google Cloud default
        service account, such as the Compute Engine service account, from outside
        the Google Cloud environment, could serve as an indicator that the credentials
        of the service account have been compromised.\n\n## Triage and response\n1.
        Determine if the actions `{{@evt.name}}` taken by the Compute Engine default
        service account `{{@usr.id}}` are legitimate by looking at past activity and
        the type of API calls occurring.\n2. If the action is legitimate, consider
        including the IP address or ASN in a suppression list. See this article on
        [Best practices for creating detection rules with Datadog Cloud SIEM][2] for
        more information.\n3. Otherwise, use the Cloud SIEM - IP Investigation dashboard
        to see if the IP address: `{{@network.client.ip}}` has taken other actions.\n4.
        If the results of the triage indicate that an attacker has taken the action,
        begin your company''s incident response process and investigate.\n\n## Changelog\n*
        17 August 2023 - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://cloud.google.com/iam/docs/service-account-types#default\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["tactic:TA0004-privilege-escalation", "source:gcp", "scope:google-compute-engine",
        "technique:T1078-valid-accounts", "mitre_platform:iaas", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:google-compute-engine",
        "source:gcp", "mitre_platform:cloud", "security:attack", "mitre_platform:iaas",
        "tactic:TA0001-initial-access", "tactic:TA0004-privilege-escalation", "technique:T1078-valid-accounts"],
        "version": 87, "id": "def-000-xsj", "updatedAt": 1736369630573, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Security Command Center", "createdAt":
        1701763056187, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "@evt.severity:LOW", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "none", "name": ""}, {"query": "@evt.severity:MEDIUM",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@evt.severity:HIGH", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}, {"query": "@evt.severity:CRITICAL", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod":
        "third_party", "maxSignalDuration": 86400, "keepAlive": 1800, "thirdPartyRuleOptions":
        {"signalTitleTemplate": "Google Security Command Center: {{ @evt.name }}",
        "defaultStatus": "low", "rootQueries": [{"query": "source:google.security.command.center
        @evt.category:THREAT @finding_state:ACTIVE -@mute_state:MUTED", "groupByFields":
        ["@resource_name", "@evt.name"]}, {"query": "source:google.security.command.center
        @evt.category:THREAT @finding_state:ACTIVE -@mute_state:MUTED", "groupByFields":
        []}], "defaultNotifications": []}, "relatedSignalsFields": ["@usr.email"]},
        "cases": [{"name": "", "status": "low", "notifications": []}, {"name": "",
        "status": "medium", "notifications": []}, {"name": "", "status": "high", "notifications":
        []}, {"name": "", "status": "critical", "notifications": []}], "message":
        "## Goal\nDetect when [Google Security Command Center][1] raises an active
        threat finding.\n\n## Strategy\nGoogle Security Command Center helps you strengthen
        your security posture by evaluating your security and data attack surface;
        providing asset inventory and discovery; identifying misconfigurations, vulnerabilities
        and threats; and helping you mitigate and remediate risks.\n\nThis detection
        rule filters for [threat findings][2] which have not been muted. Findings
        in the Threat class identify a potential active attack or other unwanted or
        malicious activity.\n\n## Triage and response\n1. Investigate the finding
        to determine if it is malicious or benign.\n2. If the finding is deemed malicious,
        follow the [investigation and remediation guidance][3] provided by Google
        and also any internal incident response processes.\n3. If the finding is a
        false positive, you can reduce false positives by:\n    * [Muting findings
        in Security Command Center][4]\n    * [Disabling detectors][5]\n    * [Adding
        assets to allowlists][6]\n\n[1]: https://cloud.google.com/security-command-center/docs\n[2]:
        https://cloud.google.com/security-command-center/docs/finding-classes#threat_class\n[3]:
        https://cloud.google.com/security-command-center/docs/how-to-investigate-threats\n[4]:
        https://cloud.google.com/security-command-center/docs/how-to-mute-findings\n[5]:
        https://cloud.google.com/sdk/gcloud/reference/alpha/scc/settings/services/modules/disable\n[6]:
        https://cloud.google.com/security-command-center/docs/how-to-use-security-health-analytics#allowlist-assets",
        "tags": ["technique:T1059-command-and-scripting-interpreter", "tactic:TA0002-execution",
        "technique:T1098-account-manipulation", "technique:T1610-deploy-container",
        "source:google.security.command.center", "technique:T1651-cloud-administration-command",
        "scope:google.security.command.center", "security:attack", "technique:T1609-container-administration-command",
        "tactic:TA0003-persistence"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:google.security.command.center", "technique:T1651-cloud-administration-command",
        "technique:T1609-container-administration-command", "technique:T1059-command-and-scripting-interpreter",
        "technique:T1098-account-manipulation", "security:attack", "tactic:TA0002-execution",
        "scope:google.security.command.center", "technique:T1610-deploy-container",
        "tactic:TA0003-persistence"], "version": 86, "id": "def-000-4ym", "updatedAt":
        1736369630892, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "thirdPartyCases": [{"name": "", "status": "low", "notifications":
        [], "query": "@evt.severity:LOW"}, {"name": "", "status": "medium", "notifications":
        [], "query": "@evt.severity:MEDIUM"}, {"name": "", "status": "high", "notifications":
        [], "query": "@evt.severity:HIGH"}, {"name": "", "status": "critical", "notifications":
        [], "query": "@evt.severity:CRITICAL"}], "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Security Command Center finding
        muted", "createdAt": 1715257263621, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "service:securitycenter.googleapis.com @evt.name:(google.cloud.securitycenter.v2.SecurityCenter.CreateMuteConfig
        OR google.cloud.securitycenter.v2.SecurityCenter.BulkMuteFindings)", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "create_mute_config"}], "options": {"evaluationWindow": 900,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 3600},
        "cases": [{"name": "create_mute_config", "status": "medium", "notifications":
        [], "condition": "create_mute_config > 0"}], "message": "## Goal\nDetect when
        a [Google Security Command Center][1] muteconfigs rule was created.\n\n##
        Strategy\nGoogle Security Command Center helps you strengthen your security
        posture by evaluating your security and data attack surface; providing asset
        inventory and discovery; identifying misconfigurations, vulnerabilities and
        threats; and helping you mitigate and remediate risks.\n\nThis detection rule
        detects when a user creates a [rule to mute future findings or mute multiple
        existing findings][2]. This could indicate an attacker attempting to hide
        malicious activity.\n\n## Triage and response\n1. Investigate the finding
        to determine if the action was expected.\n2. If the finding is deemed malicious,
        follow the [investigation and remediation guidance][3] provided by Google
        and also any internal incident response processes.\n\n[1]: https://cloud.google.com/security-command-center/docs\n[2]:
        https://cloud.google.com/security-command-center/docs/how-to-mute-findings\n[3]:
        https://cloud.google.com/security-command-center/docs/how-to-investigate-threats",
        "tags": ["source:google.security.command.center", "technique:T1578-modify-cloud-compute-infrastructure",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "scope:google.security.command.center",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["source:google.security.command.center",
        "mitre_platform:cloud", "scope:google.security.command.center", "mitre_platform:iaas",
        "tactic:TA0005-defense-evasion", "security:attack", "technique:T1578-modify-cloud-compute-infrastructure"],
        "version": 87, "id": "def-000-ojd", "updatedAt": 1736369630866, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace Alert Center", "createdAt":
        1664438510380, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "@metadata.severity:LOW", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@metadata.severity:MEDIUM", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@metadata.severity:HIGH", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "third_party", "maxSignalDuration":
        86400, "keepAlive": 1800, "thirdPartyRuleOptions": {"signalTitleTemplate":
        "Google Workspace Alert Center: {{ @evt.category }} - {{ @evt.name }}", "defaultStatus":
        "high", "rootQueries": [{"query": "source:google.workspace.alert.center @evt.category:(\"State
        sponsored attack\" OR \"Data Loss Prevention\" OR \"Google identity\" OR \"Domain
        wide takeout\" OR \"Sensitive Admin Action\" OR \"AppMaker Editor\" OR \"Mobile
        device management\" OR \"State Sponsored Attack\" OR \"Google Operations\")",
        "groupByFields": ["@usr.email"]}, {"query": "source:google.workspace.alert.center
        @evt.category:\"Gmail phishing\"", "groupByFields": ["@data.maliciousEntity.emailAddress"]},
        {"query": "source:google.workspace.alert.center @evt.category:(\"User Changes\"
        OR \"Security Center rules\")", "groupByFields": ["@evt.category"]}, {"query":
        "source:google.workspace.alert.center @evt.category:(\"Apps outage\")", "groupByFields":
        ["@data.incidentTrackingId"]}, {"query": "source:google.workspace.alert.center",
        "groupByFields": []}], "defaultNotifications": []}}, "cases": [{"name": "",
        "status": "low", "notifications": []}, {"name": "", "status": "medium", "notifications":
        []}, {"name": "", "status": "high", "notifications": []}], "message": "##
        Goal\nDetect when [Google Workspace Alert Center][1] raises an alert.\n\n##
        Strategy\nGoogle Workspace Alert Center provides a comprehensive view of security
        related notifications, alerts, and actions across Google Workspace.\n\nSee
        [View alert details][2] for information about each type of alert.\n\n## Triage
        and response\n1. Investigate the Google Workspace alert to determine if it
        is malicious or benign.\n2. If the finding is deemed malicious, follow the
        [remediation guidance][3] provided by Google and also any internal incident
        response processes.\n3. If the finding is a false positive, you can reduce
        false positives by:\n    * [Providing feedback on alerts][4]\n    * [Using
        rules to turn alerts on or off][5]\n\n[1]: https://support.google.com/a/answer/9105393?hl=en\n[2]:
        https://support.google.com/a/answer/9104586#zippy=\n[3]: https://support.google.com/a/answer/11123535?hl=en&ref_topic=9105077\n[4]:
        https://support.google.com/a/answer/9104881?hl=en&ref_topic=9105077\n[5]:
        https://support.google.com/a/answer/9288156?hl=en&ref_topic=9105077", "tags":
        ["scope:gsuite", "source:google.workspace.alert.center", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "source:google.workspace.alert.center", "scope:gsuite"],
        "version": 86, "id": "d8d-awv-jsf", "updatedAt": 1736369630861, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "thirdPartyCases":
        [{"name": "", "status": "low", "notifications": [], "query": "@metadata.severity:LOW"},
        {"name": "", "status": "medium", "notifications": [], "query": "@metadata.severity:MEDIUM"},
        {"name": "", "status": "high", "notifications": [], "query": "@metadata.severity:HIGH"}],
        "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Google Workspace Tor client detected", "createdAt": 1681888819359, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gsuite service:admin
        @threat_intel.results.category:tor", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "google_workspace_tor_admin"},
        {"query": "source:gsuite @threat_intel.results.category:tor", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "google_workspace_tor"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "in administrative console", "status": "high", "notifications":
        [], "condition": "google_workspace_tor_admin > 0"}, {"name": "in non-administrative
        service", "status": "medium", "notifications": [], "condition": "google_workspace_tor
        > 0"}], "message": "## Goal\nDetect when Tor client activity is seen in Google
        Workspace.\n\n## Strategy\nThis rule monitors Google Workspace logs to determine
        when an activity originated from a Tor client. Datadog enriches all ingested
        logs with [expert-curated threat intelligence][1] in real time. An attacker
        may use a Tor client to anonymize their true origin. \n\n## Triage and response\n1.
        Determine if the actions taken by the identity `{{@usr.email}}` are legitimate
        by looking at past activity and the type of API calls occurring. \n2. If the
        results of the triage indicate that an attacker has taken the action, begin
        your company''s incident response process and an investigation.\n\n## Changelog\n*
        17 August 2023 - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog",
        "tags": ["technique:T1090-proxy", "source:gsuite", "scope:gsuite", "technique:T1133-external-remote-services",
        "mitre_platform:saas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1133-external-remote-services",
        "mitre_platform:cloud", "mitre_platform:saas", "security:attack", "technique:T1090-proxy",
        "source:gsuite", "tactic:TA0001-initial-access", "scope:gsuite"], "version":
        87, "id": "def-000-4hw", "updatedAt": 1736369630879, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace accessed by Google",
        "createdAt": 1654118198345, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gsuite service:access_transparency", "groupByFields": [],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "workspace_accessed_by_google"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "workspace_accessed_by_google > 0"}], "message": "## Goal\nCreate a signal
        when Google accesses your Google Workspace tenant using administrative tools.
        \n\n## Strategy\nMonitor Google Workspace logs to detect `ACCESS` events,
        which are part of Google''s [Access Transparency][1] logs.\n\n## Triage and
        response\n1. Determine the scope of Google''s access activity, which can be
        found in the `ACCESS` event in the Google Workspace event log.\n2. Review
        which Google Workspace user (`@event.parameters.OWNER_EMAIL`) and resources
        (`@event.parameters.RESOURCE_NAME`) were accessed by Google.\n3. Investigate
        the resource(s) being accessed to determine if there is a legitimate reason
        it should be reviewed by Google.\n\n[1]: https://support.google.com/a/answer/9230474?hl=en",
        "tags": ["source:gsuite", "scope:gsuite", "technique:T1199-trusted-relationship",
        "mitre_platform:saas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["scope:gsuite", "technique:T1199-trusted-relationship",
        "mitre_platform:cloud", "mitre_platform:saas", "source:gsuite", "tactic:TA0001-initial-access",
        "security:attack"], "version": 87, "id": "b2e-a9g-30x", "updatedAt": 1736369630880,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace admin role created",
        "createdAt": 1654261300134, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gsuite @evt.name:CREATE_ROLE", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "admin_role_created"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "low", "notifications": [], "condition": "admin_role_created
        > 0"}], "message": "## Goal\nCreate a signal when Google Workspace detects
        a new Google Workspace administrative role.\n\n## Strategy\nMonitor Google
        Workspace logs to detect `CREATE_ROLE` events.\n\n## Triage and response\n1.
        Determine if there is a legitimate reason for the new administrator role (`@event.parameters.ROLE_NAME`).\n2.
        If there is not a legitimate reason, investigate activity from around the
        Google Workspace administrator (`{{@usr.email}}`) and IP that created the
        role (`{{@network.client.ip}}`).\n\n## Changelog\n* 17 October 2022 - Updated
        tags.", "tags": ["source:gsuite", "scope:gsuite", "technique:T1098-account-manipulation",
        "mitre_platform:saas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:gsuite", "mitre_platform:cloud", "mitre_platform:saas", "technique:T1098-account-manipulation",
        "tactic:TA0003-persistence", "source:gsuite", "security:attack"], "version":
        87, "id": "ab5-5lm-x2n", "updatedAt": 1736369630864, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace administrator has disabled
        2-step verification for organizational unit", "createdAt": 1682062703261,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:gsuite
        service:admin @evt.name:(ALLOW_STRONG_AUTHENTICATION OR ENFORCE_STRONG_AUTHENTICATION)
        @event.parameters.NEW_VALUE:false", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "google_workspace_disabled_2sv"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "google_workspace_disabled_2sv > 0"}], "message": "## Goal\nDetect
        when a Google Workspace administrator disables [2-step verification][1] (2SV)
        for an organizational unit.\n\n## Strategy\nMonitor Google Workspace logs
        to detect when an administrator disables 2SV for an organizational unit. An
        attacker who has already gained initial access may disable 2SV to degrade
        organizational security controls.\n\n## Triage and response\n1. Check for
        other signals and logs generated by the impacted user `{{@usr.email}}`, and
        look for deviations in the following properties:\n    - Application\n    -
        Device\n    - Geolocation\n    - IP address\n2. Reach out to the user `{{@usr.email}}`
        to confirm if they recognize the activity.    \n3. If the activity is not
        legitimate, block the user from signing in and begin your Incident Response
        process.\n\n[1]: https://support.google.com/a/answer/175197?hl=en&sjid=9379503525844318549-EU&visit_id=638187893511308166-3630995424&ref_topic=2759193&rd=1",
        "tags": ["source:gsuite", "scope:gsuite", "technique:T1556-modify-authentication-process",
        "mitre_platform:saas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:gsuite", "mitre_platform:cloud", "mitre_platform:saas", "technique:T1556-modify-authentication-process",
        "tactic:TA0003-persistence", "source:gsuite", "security:attack"], "version":
        87, "id": "def-000-it0", "updatedAt": 1736369632051, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace administrator initiated
        a data transfer request", "createdAt": 1682062703265, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:gsuite @evt.name:CREATE_DATA_TRANSFER_REQUEST",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "google_workspace_data_transfer_request"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "google_workspace_data_transfer_request > 0"}], "message":
        "## Goal\nDetect when a Google Workspace administrator initiates a data transfer
        request.\n\n## Strategy\nMonitor Google Workspace logs to detect when a Google
        Workspace administrator initiates a request to transfer the ownership of a
        user''s data to a destination user within the same organization. This request
        is typically made when a user has left an organization and their data is transferred
        to another user. However, the service could be leveraged by an attacker to
        transfer data to an attacker-controlled account for exfiltration.\n\n## Triage
        and response\n1. Determine if there is a legitimate reason for the data transfer
        request.\n2. If there is not a legitimate reason, investigate activity from
        around the Google Workspace administrator (`{{@usr.email}}`) and IP address
        that initiated the request (`{{@network.client.ip}}`).", "tags": ["source:gsuite",
        "scope:gsuite", "technique:T1537-transfer-data-to-cloud-account", "mitre_platform:saas",
        "tactic:TA0010-exfiltration", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:gsuite", "mitre_platform:cloud", "tactic:TA0010-exfiltration", "mitre_platform:saas",
        "source:gsuite", "security:attack", "technique:T1537-transfer-data-to-cloud-account"],
        "version": 87, "id": "def-000-hw5", "updatedAt": 1736369632037, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace user assigned administrative
        role", "createdAt": 1686575563417, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:gsuite @evt.name:ASSIGN_ROLE (@event.parameters.ROLE_NAME:*_ADMIN_ROLE
        OR @usr.role:*_ADMIN_ROLE)", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "admin_role_assigned"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "admin_role_assigned > 0"}], "message": "## Goal\nDetect
        when a user is added to an administrator role on Google Workspace.\n\n## Strategy\nMonitor
        Google Workspace logs to detect `ASSIGN_ROLE` events where `@usr.role` has
        the suffix `_ADMIN_ROLE`. \n\n## Triage and response\n1. Verify with the Google
        admin (`{{@usr.email}}`) if the Google Workspace user (`{{@event.parameters.USER_EMAIL}}`)
        should legitimately be given the admin role.\n2. If the user (`{{@event.parameters.USER_EMAIL}}`)
        was not legitimately added, investigate activity from the IP address (`{{@network.client.ip}}`)
        that made the role addition.\n3. Review activity around the Google Workspace
        admin who made the change (`{{@usr.email}}`) and the newly added admin (`{{@event.parameters.USER_EMAIL}}`).",
        "tags": ["source:gsuite", "scope:gsuite", "technique:T1098-account-manipulation",
        "mitre_platform:saas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:gsuite", "mitre_platform:cloud", "mitre_platform:saas", "technique:T1098-account-manipulation",
        "tactic:TA0003-persistence", "source:gsuite", "security:attack"], "version":
        87, "id": "def-000-v89", "updatedAt": 1736369632057, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace user assigned super
        administrative role", "createdAt": 1654012941858, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:gsuite @evt.name:ASSIGN_ROLE (@event.parameters.ROLE_NAME:_SEED_ADMIN_ROLE
        OR @usr.role:_SEED_ADMIN_ROLE)", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "super_admin_role_assigned"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "super_admin_role_assigned > 0"}], "message": "## Goal\nDetect
        when a user is added to the Super administrator role on Google Workspace.\n\n##
        Strategy\nMonitor Google Workspace logs to detect `ASSIGN_ROLE` events where
        `@usr.role` is `_SEED_ADMIN_ROLE` (Super administrator).\n\n## Triage and
        response\n1. Verify with the Google admin (`{{@usr.email}}`) if the Google
        Workspace user (`{{@event.parameters.USER_EMAIL}}`) should legitimately be
        given the super admin role.\n2. If the user (`{{@event.parameters.USER_EMAIL}}`)
        was not legitimately added, investigate activity from the IP address (`{{@network.client.ip}}`)
        that made the role addition.\n3. Review activity around the Google Workspace
        admin who made the change (`{{@usr.email}}`) and the newly added super admin
        (`{{@event.parameters.USER_EMAIL}}`).\n", "tags": ["source:gsuite", "scope:gsuite",
        "technique:T1098-account-manipulation", "mitre_platform:saas", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:gsuite",
        "mitre_platform:cloud", "mitre_platform:saas", "technique:T1098-account-manipulation",
        "tactic:TA0003-persistence", "source:gsuite", "security:attack"], "version":
        87, "id": "d3m-cxg-12m", "updatedAt": 1736369632051, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace user disabled 2-step
        verification", "createdAt": 1682580733123, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:gsuite service:user_accounts @evt.name:2sv_disable",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "google_workspace_user_disabled_2sv"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "google_workspace_user_disabled_2sv > 0"}], "message": "##
        Goal\nDetect when a Google Workspace user disables [2-step verification][1]
        (2SV).\n\n## Strategy\nMonitor Google Workspace logs to detect when a user
        disables 2SV. An attacker who has already gained initial access may disable
        2SV to degrade organizational security controls.\n\n## Triage and response\n1.
        Check for other signals and logs generated by the impacted user `{{@usr.email}}`,
        and look for deviations in the following properties:\n    - Application\n    -
        Device\n    - Geolocation\n    - IP address\n2. Reach out to the user `{{@usr.email}}`
        to confirm if they recognize the activity.    \n3. If the activity is not
        legitimate, block the user from signing in and begin your Incident Response
        process.\n\n[1]: https://support.google.com/accounts/answer/1064203?hl=en&co=GENIE.Platform%3DDesktop",
        "tags": ["source:gsuite", "scope:gsuite", "technique:T1556-modify-authentication-process",
        "mitre_platform:saas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:gsuite", "mitre_platform:cloud", "mitre_platform:saas", "technique:T1556-modify-authentication-process",
        "tactic:TA0003-persistence", "source:gsuite", "security:attack"], "version":
        87, "id": "def-000-5em", "updatedAt": 1736369632356, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace user edited account
        recovery information", "createdAt": 1682062703290, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:gsuite @evt.name:(recovery_email_edit
        OR recovery_phone_edit OR recovery_secret_qa_edit) @threat_intel.results.category:anonymizer",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "google_workspace_recovery_enriched"},
        {"query": "source:gsuite @evt.name:(recovery_email_edit OR recovery_phone_edit
        OR recovery_secret_qa_edit) @threat_intel.results.category:tor", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "google_workspace_recovery_tor"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "via a Tor client", "status": "high", "notifications":
        [], "condition": "google_workspace_recovery_tor > 0"}, {"name": "via a anonymized
        proxy address", "status": "low", "notifications": [], "condition": "google_workspace_recovery_enriched
        > 0"}], "message": "## Goal\nDetect when a Google Workspace user edits account
        [recovery information][1].\n\n## Strategy\nMonitor Google Workspace logs to
        detect when a user edits account recovery information. An attacker who has
        already gained initial access may update the user''s recovery information
        to maintain access to the account.\n\n**Notes:** \n\n- This rule triggers
        with a `Low` severity when this activity originates from an anonymizing proxy.\n-
        This rule triggers with a `High` severity when this activity originates from
        a Tor client.\n\n## Triage and response\n1. Check for other signals and logs
        generated by the impacted user `{{@usr.email}}`, and look for deviations in
        the following properties:\n    - Application\n    - Device\n    - Geolocation\n    -
        IP address\n2. Reach out to the user `{{@usr.email}}` to confirm if they recognize
        the activity.    \n3. If the activity is not legitimate, block the user from
        signing in and begin your Incident Response process.\n\n## Changelog\n* 17
        August 2023 - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://support.google.com/a/answer/3033063?hl=en&ref_topic=4388358&sjid=5874450613560815052-EU",
        "tags": ["source:gsuite", "scope:gsuite", "technique:T1098-account-manipulation",
        "mitre_platform:saas", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:gsuite", "mitre_platform:cloud", "mitre_platform:saas", "technique:T1098-account-manipulation",
        "tactic:TA0003-persistence", "source:gsuite", "security:attack"], "version":
        87, "id": "def-000-cl5", "updatedAt": 1736369632368, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Google Workspace user forwarding email
        out of non Google Workspace domain", "createdAt": 1654016076620, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:gsuite @evt.name:email_forwarding_out_of_domain",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "non_workspace_domain"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "non_workspace_domain > 0"}], "message": "## Goal\nCreate a signal when Google
        Workspace detects a user setting up mail forwarding to a non-Google Workspace
        domain.\n\n## Strategy\nMonitor Google Workspace logs to detect when `email_forwarding_out_of_domain`
        events.\n\n## Triage and response\n1. Determine if the email address defined
        in `@event.parameters.email_forwarding_destination_address` is legitimate.\n2.
        If the forwarding destination address is not legitimate, review all activity
        for `{{@usr.email}}` and all activity around the following IP: `{{@network.client.ip}}`.",
        "tags": ["source:gsuite", "scope:gsuite", "tactic:TA0009-collection", "mitre_platform:saas",
        "mitre_platform:office-suite", "technique:T1114-email-collection", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "tactic:TA0009-collection", "security:attack", "source:gsuite", "technique:T1114-email-collection",
        "mitre_platform:office-suite", "scope:gsuite"], "version": 87, "id": "zb7-axd-ee5",
        "updatedAt": 1736369632351, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Google Workspace user has unenrolled from Advanced Protection",
        "createdAt": 1682062703292, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gsuite @evt.name:titanium_unenroll", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "google_workspace_unenroll_advanced_protection"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "google_workspace_unenroll_advanced_protection > 0"}], "message": "## Goal\nDetect
        when a Google Workspace user unenrolls from Google''s [Advanced Protection][1].\n\n##
        Strategy\nMonitor Google Workspace logs to detect when a user unenrolls from
        Google''s Advanced Protection. An attacker who has already gained initial
        access may unenroll from Advanced Protection to degrade security controls.\n\n##
        Triage and response\n1. Check for other signals and logs generated by the
        impacted user `{{@usr.email}}`, and look for deviations in the following properties:\n    -
        Application\n    - Device\n    - Geolocation\n    - IP address\n2. Reach out
        to the user `{{@usr.email}}` to confirm if they recognize the activity.    \n3.
        If the activity is not legitimate, block the user from signing in and begin
        your Incident Response process.\n\n[1]: https://landing.google.com/advancedprotection/",
        "tags": ["source:gsuite", "scope:gsuite", "mitre_platform:saas", "technique:T1562-impair-defenses",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:gsuite", "mitre_platform:cloud", "technique:T1562-impair-defenses",
        "mitre_platform:saas", "source:gsuite", "tactic:TA0005-defense-evasion", "security:attack"],
        "version": 87, "id": "def-000-2kn", "updatedAt": 1736369632385, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "IIS HTTP requests from security scanner",
        "createdAt": 1629705612652, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:iis @http.useragent:(*burp* OR *burpcollaborator.net* OR
        *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel*
        OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR
        *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR
        *eval* OR *javascript* OR *alert*)", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "info", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when a web application is being scanned. This will identify attacker IP addresses
        who are not trying to hide their attempt to attack your system. More advanced
        hackers will use an inconspicuous user agent. \n\n## Strategy\nInspect the
        user agent in the HTTP headers to determine if an IP is scanning your application
        and generate an `INFO` signal. \n\n## Triage and response\n1. Determine if
        this IP is making authenticated requests to the application.\n2. If the IP
        is making authenticated requests to the application:\n    * Investigate the
        HTTP logs and determine if the user is attacking your application.\n\nThe
        HTTP headers in the query are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]:
        https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n", "tags":
        ["source:iis", "scope:iis", "technique:T1190-exploit-public-facing-application",
        "mitre_platform:network", "security:attack", "tactic:TA0001-initial-access"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:network", "technique:T1190-exploit-public-facing-application",
        "source:iis", "tactic:TA0001-initial-access", "security:attack", "scope:iis"],
        "version": 87, "id": "76c-cbb-28a", "updatedAt": 1736369636014, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Impossible Travel Auth0 login", "createdAt":
        1651736887569, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:auth0 @evt.category:authentication @evt.name:success_login -@threat_intel.results.category:corp_vpn",
        "groupByFields": ["@usr.name", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@network.client.geoip", "metrics": ["@network.client.geoip"],
        "aggregation": "geo_data", "name": "auth0_impossible_travel"}], "options":
        {"evaluationWindow": 0, "detectionMethod": "impossible_travel", "maxSignalDuration":
        86400, "keepAlive": 21600, "impossibleTravelOptions": {"baselineUserLocations":
        true, "detectIpTransition": false}}, "cases": [{"name": "", "status": "low",
        "notifications": []}], "message": "## Goal\nDetect an Impossible Travel event
        when two successful authentication events occur in a short time frame.\n\n##
        Strategy\nThe Impossible Travel detection type''s algorithm compares the GeoIP
        data of the last log and the current log to determine if the user `{{@usr.name}}`
        traveled more than 500km at over 1,000km/hr.\n\n## Triage and response\n1.
        Determine if the user `{{@usr.name}}` should have authenticated from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`.\n2.
        If `{{@user.name}}` should not authenticated from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`, then
        consider isolating the account and reset credentials.\n3. Audit any instance
        actions that may have occurred after the illegitimate login.\n\n**NOTE** VPNs
        and other anonymous IPs are filtered out of this signal\n\n## Changelog\n*
        10 October 2022 - Updated query.\n* 20 November 2023 - Updated group by values
        to include `@usr.id`.\n* 30 September 2024 - Updated query to replace attribute
        `@threat_intel.results.subcategory:anonymizer`.", "tags": ["technique:T1078-valid-accounts",
        "source:auth0", "mitre_platform:identity-provider", "scope:auth0", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:auth0",
        "mitre_platform:cloud", "mitre_platform:identity-provider", "tactic:TA0001-initial-access",
        "source:auth0", "security:attack", "technique:T1078-valid-accounts"], "version":
        87, "id": "dex-13e-z6w", "updatedAt": 1736369635992, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Impossible travel event leads to permission
        enumeration", "createdAt": 1660638897253, "isDefault": true, "isPartner":
        false, "isEnabled": true, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "event_count", "name": "user_travel_was_impossible_in_cloudtrail_iam_log",
        "defaultRuleId": "fc6-4t7-vx9", "correlatedByFields": ["network.client.ip",
        "@userIdentity.arn"]}, {"groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "event_count", "name": "a_user_received_multiple_access_denied_errors",
        "defaultRuleId": "1b1-37a-74c", "correlatedByFields": ["network.client.ip",
        "@userIdentity.arn"]}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 7200, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "info", "notifications": [], "condition": "user_travel_was_impossible_in_cloudtrail_iam_log
        > 0 && a_user_received_multiple_access_denied_errors > 0"}], "message": "##
        Goal\nCorrelate an impossible travel login with permission enumeration of
        a user.\n\n## Strategy\nCorrelate the [User travel was impossible in AWS CloudTrail
        IAM log][1] and [A user received multiple AccessDenied errors][2] signals
        based on the ARN: {{@userIdentity.arn}}.\n\n## Triage and response\n1. Set
        signal triage state to `Under Review`.\n2. Determine if the impossible travel
        login was is legitimate.\n    * If the login was not legitimate:\n        *
        Investigate the user using the `User Investigation Dashboard`\n        * Rotate
        credentials on the account\n        * Enable MFA if it is not already enabled\n    *
        If the login was legitimate:\n        * Triage the signal as a false positive\n\n[1]:
        https://docs.datadoghq.com/security/default_rules/aws-cloudtrail-user-impossible-travel-with-baseline-user-locations\n[2]:
        https://docs.datadoghq.com/security/default_rules/aws-cloudtrail-access-denied-multiple-events",
        "tags": ["iaas:aws", "scope:aws", "source:aws", "security:attack"], "hasExtendedTitle":
        true, "type": "signal_correlation", "filters": [], "version": 1, "id": "pph-a76-cco",
        "updatedAt": 1670887759459, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "creator": {"handle": "", "name": ""}, "updater": {"handle":
        "", "name": ""}}, {"name": "Impossible travel event observed from 1Password
        user", "createdAt": 1687967178382, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:1password @evt.type:1password-sign-in-attempts
        @usr.id:*", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@network.client.geoip", "metrics": ["@network.client.geoip"],
        "aggregation": "geo_data", "name": "impossible_travel_user"}], "options":
        {"evaluationWindow": 0, "detectionMethod": "impossible_travel", "maxSignalDuration":
        86400, "keepAlive": 21600, "impossibleTravelOptions": {"baselineUserLocations":
        true, "detectIpTransition": false}}, "cases": [{"name": "", "status": "medium",
        "notifications": []}], "message": "## Goal\nDetect an Impossible Travel event
        from a 1Password user.\n\n## Strategy\nThe Impossible Travel detection type\u2019s
        algorithm compares the GeoIP data of the last log and the current log to determine
        if the user (`@usr.email`) traveled more than 500km at over 1,000km/h.\n\n##
        Triage and response\n1. Determine if `{{@usr.email}}` should be connecting
        from `{{@impossible_travel.triggering_locations.first_location.city}}`,`{{@impossible_travel.triggering_locations.first_location.country}}`
        and `{{@impossible_travel.triggering_locations.second_location.city}}`, `{{@impossible_travel.triggering_locations.second_location.country}}`
        in a short period of time.\n2. If the user should not be connecting from `{{@impossible_travel.triggering_locations.first_location.city}}`,
        `{{@impossible_travel.triggering_locations.first_location.country}}` or `{{@impossible_travel.triggering_locations.second_location.city}}`,
        `{{@impossible_travel.triggering_locations.second_location.country}}`, then
        consider isolating the account and resetting their credentials.\n3. Use the
        Cloud SIEM - User Investigation dashboard to audit any user actions that may
        have occurred after the illegitimate login.", "tags": ["mitre_platform:saas",
        "technique:T1078-valid-accounts", "source:1password", "scope:onepassword",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:onepassword", "source:1password", "mitre_platform:cloud", "mitre_platform:saas",
        "tactic:TA0001-initial-access", "security:attack", "technique:T1078-valid-accounts"],
        "version": 87, "id": "def-000-6lp", "updatedAt": 1736369636698, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Impossible travel scenario observed
        in Cloudflare logs", "createdAt": 1687167166815, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudflare (@Email:* OR @usr.email:*)
        -@network.client.geoip.as.name:\"*Cloudflare*\"", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@network.client.geoip",
        "metrics": ["@network.client.geoip"], "aggregation": "geo_data", "name": "impossible_travel_user"}],
        "options": {"evaluationWindow": 0, "detectionMethod": "impossible_travel",
        "maxSignalDuration": 86400, "keepAlive": 21600, "impossibleTravelOptions":
        {"baselineUserLocations": true, "detectIpTransition": false}}, "cases": [{"name":
        "", "status": "medium", "notifications": []}], "message": "## Goal\nDetect
        an Impossible Travel event within Cloudflare logs.\n\n## Strategy\nThe Impossible
        Travel detection type\u2019s algorithm compares the GeoIP data of the last
        log and the current log to determine if the user (`@usr.email`) traveled more
        than 500km at over 1,000km/h.\n\n## Triage and response\n1. Determine if `{{@usr.email}}`
        should be connecting from `{{@impossible_travel.triggering_locations.first_location.city}}`,
        `{{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}}`,
        `{{@impossible_travel.triggering_locations.second_location.country}}` in a
        short period of time.\n2. If the user should not be connecting from `{{@impossible_travel.triggering_locations.first_location.city}}`,
        `{{@impossible_travel.triggering_locations.first_location.country}}` or `{{@impossible_travel.triggering_locations.second_location.city}}`,
        `{{@impossible_travel.triggering_locations.second_location.country}}`, then
        consider isolating the account and resetting their credentials.\n3. Use the
        Cloud SIEM - User Investigation dashboard to audit any user actions that may
        have occurred after the illegitimate login.", "tags": ["scope:cloudflare",
        "mitre_platform:saas", "technique:T1078-valid-accounts", "source:cloudflare",
        "tactic:TA0001-initial-access", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:cloudflare", "mitre_platform:cloud", "mitre_platform:saas", "security:attack",
        "tactic:TA0001-initial-access", "scope:cloudflare", "technique:T1078-valid-accounts"],
        "version": 87, "id": "def-000-cws", "updatedAt": 1736369636717, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Invitation sent to account to join AWS
        organization", "createdAt": 1732003623083, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @evt.name:InviteAccountToOrganization
        @eventSource:organizations.amazonaws.com", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "invite_sent_to_join_aws_org"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 3600},
        "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "invite_sent_to_join_aws_org > 0"}], "message": "## Goal\nDetect when there
        is an attempt to invite an AWS account to an AWS organization.\n\n## Strategy\nThis
        rule allows you to monitor CloudTrail and detect if an attacker has attempted
        to invite an AWS account to an AWS organization. An attacker may attempt add
        an attacker controlled AWS account to a compromised AWS organization to evade
        the existing defenses of the organization.\n\nThis [operation][1] can be called
        only from the organization''s management account.\n\n## Triage and response\n1.
        Determine if `{{@userIdentity.arn}}` should have made a `{{@evt.name}}` API
        call.\n    * Refer to `@requestParameters.target.id` to retrieve the account
        invited. This maybe in the form of an AWS account ID or email address.\n    *
        Attempt to confirm the action either with the identity making the change or
        search for a ticket associated with the change.\n    * Investigate other activities
        performed by the identity `{{@userIdentity.arn}}` using the Cloud SIEM - User
        Investigation dashboard.\n2. If the API call does not appear to be legitimate,
        begin your organization''s incident response process and investigate.\n    *
        Follow [AWS recommendations][2] for containing the potentially compromised
        identity, if appropriate.\n    * [Remove the potentially malicious account][3]
        from your AWS organization.\n\n[1]: https://docs.aws.amazon.com/organizations/latest/APIReference/API_InviteAccountToOrganization.html\n[2]:
        https://docs.aws.amazon.com/whitepapers/latest/aws-security-incident-response-guide/technique-access-containment.html\n[3]:
        https://docs.aws.amazon.com/organizations/latest/APIReference/API_RemoveAccountFromOrganization.html",
        "tags": ["scope:iam", "iaas:aws", "source:cloudtrail", "technique:T1535-unused-or-unsupported-cloud-regions",
        "tactic:TA0005-defense-evasion", "security:attack"], "hasExtendedTitle": true,
        "type": "log_detection", "filters": [], "defaultTags": ["technique:T1535-unused-or-unsupported-cloud-regions",
        "scope:iam", "source:cloudtrail", "security:attack", "tactic:TA0005-defense-evasion",
        "iaas:aws"], "version": 19, "id": "def-000-pew", "updatedAt": 1736369640625,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Jamf Protect alerts", "createdAt": 1704960693839,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "@input.match.severity:0",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@input.match.severity:1",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@input.match.severity:2",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@input.match.severity:3",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}], "options": {"evaluationWindow": 1800,
        "detectionMethod": "third_party", "maxSignalDuration": 86400, "keepAlive":
        1800, "thirdPartyRuleOptions": {"signalTitleTemplate": "Jamf Protect alerted
        on a {{@input.match.facts.name}} for host: {{@host}}", "defaultStatus": "low",
        "rootQueries": [{"query": "source:jamfprotect service:alerts", "groupByFields":
        ["@host", "@input.match.facts.name"]}], "defaultNotifications": []}}, "cases":
        [{"name": "", "status": "info", "notifications": []}, {"name": "", "status":
        "low", "notifications": []}, {"name": "", "status": "medium", "notifications":
        []}, {"name": "", "status": "high", "notifications": []}], "message": "##
        Goal\nDetect when a [Jamf Protect alert][1] has been raised.\n\n## Strategy\nAlerts
        are how Jamf Protect analytics, threat prevention database matches, and removable
        storage control events are reported.\n\n## Triage and response\n1. Investigate
        the threat event to determine if it is malicious or benign.\n2. If the alert
        is benign, consider including the user, host, or IP address in a suppression
        list. See [Best practices for creating detection rules with Datadog Cloud
        SIEM][2].\n\n[1]: https://learn.jamf.com/bundle/jamf-protect-documentation/page/Alerts.html\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#customize-security-signal-messages-to-fit-your-environment",
        "tags": ["source:jamfprotect", "security:attack"], "hasExtendedTitle": true,
        "type": "log_detection", "filters": [], "defaultTags": ["source:jamfprotect",
        "security:attack"], "version": 86, "id": "def-000-ot4", "updatedAt": 1736369641485,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "thirdPartyCases":
        [{"name": "", "status": "info", "notifications": [], "query": "@input.match.severity:0"},
        {"name": "", "status": "low", "notifications": [], "query": "@input.match.severity:1"},
        {"name": "", "status": "medium", "notifications": [], "query": "@input.match.severity:2"},
        {"name": "", "status": "high", "notifications": [], "query": "@input.match.severity:3"}],
        "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Jamf Protect threat events", "createdAt": 1704960693858, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "@event.severity:2 ", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}, {"query": "@event.severity:4 ", "groupByFields": [],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "none",
        "name": ""}, {"query": "@event.severity:6 ", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@event.severity:8 ", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "none", "name": ""}, {"query": "@event.severity:10
        ", "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}], "options": {"evaluationWindow": 1800,
        "detectionMethod": "third_party", "maxSignalDuration": 86400, "keepAlive":
        1800, "thirdPartyRuleOptions": {"signalTitleTemplate": "Jamf Protect {{@event.action}}
        {{@evt.category}} for host: {{@host}}", "defaultStatus": "low", "rootQueries":
        [{"query": "source:jamfprotect service:threatevents ", "groupByFields": ["@host"]}],
        "defaultNotifications": []}}, "cases": [{"name": "", "status": "info", "notifications":
        []}, {"name": "", "status": "low", "notifications": []}, {"name": "", "status":
        "medium", "notifications": []}, {"name": "", "status": "high", "notifications":
        []}, {"name": "", "status": "critical", "notifications": []}], "message":
        "## Goal\nDetect when a [Jamf Protect threat event][1] has been raised.\n\n##
        Strategy\nThe Threat Event Stream is a feature of Jamf Protect and Jamf Threat
        Defense, which detects and remediates endpoint threats, including malicious
        network communications, device vulnerabilities, malware, and risky apps.\n\n##
        Triage and response\n1. Investigate the threat event to determine if it is
        malicious or benign.\n2. If the alert is benign, consider including the user,
        host, or IP address in a suppression list. See [Best practices for creating
        detection rules with Datadog Cloud SIEM][2].\n\n[1]: https://developer.jamf.com/developer-guide/docs/data-streams#:~:text=The%20Threat%20Event%20Stream%20is,vulnerabilities%2C%20malware%20and%20risky%20apps.\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#customize-security-signal-messages-to-fit-your-environment",
        "tags": ["source:jamfprotect", "security:attack"], "hasExtendedTitle": true,
        "type": "log_detection", "filters": [], "defaultTags": ["source:jamfprotect",
        "security:attack"], "version": 86, "id": "def-000-fru", "updatedAt": 1736369641437,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "thirdPartyCases":
        [{"name": "", "status": "info", "notifications": [], "query": "@event.severity:2
        "}, {"name": "", "status": "low", "notifications": [], "query": "@event.severity:4
        "}, {"name": "", "status": "medium", "notifications": [], "query": "@event.severity:6
        "}, {"name": "", "status": "high", "notifications": [], "query": "@event.severity:8
        "}, {"name": "", "status": "critical", "notifications": [], "query": "@event.severity:10
        "}], "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Jumpcloud admin granted system privileges", "createdAt": 1648842405169, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:jumpcloud @evt.name:system_admin_grant",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "system_admin_grant"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "system_admin_grant > 0"}], "message": "## Goal\n\nDetect when a JumpCloud
        user grants administrative privileges on a user endpoint. This is not indicative
        of malicious activity, but detecting this event is valuable for auditing.\n\n##
        Strategy\n\nThis rule monitors JumpCloud audit logs to detect when a user
        triggers the `@evt.name` of `system_admin_grant`.\n\n## Triage and response\n\n1.
        Reach out to the admin making the change (`{{@usr.email}}`) to confirm that
        the user `(@usr.name`) should have administrative privileges on the specified
        resource (`@resource.name`).\n2. If the change was not authorized, reverify
        there are no other signals from the jumpcloud admin: {{@usr.email}} and the
        system (`@resource.name`).\n", "tags": ["source:jumpcloud", "technique:T1098-account-manipulation",
        "scope:jumpcloud", "mitre_platform:identity-provider", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "technique:T1098-account-manipulation", "mitre_platform:identity-provider",
        "tactic:TA0003-persistence", "security:attack", "scope:jumpcloud", "source:jumpcloud"],
        "version": 87, "id": "a28-5a3-d0x", "updatedAt": 1736369641439, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Jumpcloud admin login without MFA",
        "createdAt": 1648842405102, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:jumpcloud @evt.name:admin_login_attempt @mfa:false @evt.outcome:true",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "admin_login_no_mfa"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "admin_login_no_mfa > 0"}], "message": "## Goal\nDetect when a JumpCloud administrator
        authenticates without multi-factor authentication (MFA) enabled. This is not
        indicative of malicious activity, however as a best practice, administrator
        accounts should have MFA enabled.\n\n## Strategy\nThis rule monitors JumpCloud
        audit logs to detect when an admin user successfully authenticates to JumpCloud
        and the log indicates that `@mfa` is `false`.\n\n## Triage and response\n1.
        Reach out to the {{@usr.name}} to determine if the login was legitimate.\n2.
        If the login was legitimate, request that the user enables MFA.\n3. If the
        login wasn\u2019t legitimate, rotate the credentials, enable MFA and triage
        an actions uncovered from step 1.\n4. Review all user accounts to ensure MFA
        is enabled.\n", "tags": ["security:compliance", "source:jumpcloud", "requirement:Monitoring",
        "scope:jumpcloud", "framework:cis-aws", "technique:T1078-valid-accounts",
        "mitre_platform:identity-provider", "control:4.2", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "tactic:TA0001-initial-access",
        "source:jumpcloud", "mitre_platform:cloud", "technique:T1078-valid-accounts",
        "requirement:Monitoring", "security:compliance", "mitre_platform:identity-provider",
        "framework:cis-aws", "scope:jumpcloud", "control:4.2"], "version": 87, "id":
        "b23-5ac-d0g", "updatedAt": 1736369641423, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Jumpcloud admin triggered impossible
        travel scenario", "createdAt": 1648842405074, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:jumpcloud @usr.type:admin", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "metric":
        "@network.client.geoip", "metrics": ["@network.client.geoip"], "aggregation":
        "geo_data", "name": "impossible_travel_admin"}], "options": {"evaluationWindow":
        0, "detectionMethod": "impossible_travel", "maxSignalDuration": 86400, "keepAlive":
        21600, "impossibleTravelOptions": {"baselineUserLocations": true, "detectIpTransition":
        false}}, "cases": [{"name": "", "status": "high", "notifications": []}], "message":
        "## Goal\nDetect an Impossible Travel event with a JumpCloud administrator.\n\n##
        Strategy\nThe Impossible Travel detection type\u2019s algorithm compares the
        GeoIP data of the last log and the current log to determine if the user (`@usr.name`)
        traveled more than 500km at over 1,000km/h.\n\n## Triage and response\n1.
        Determine if `{{@usr.name}}` should be connecting from `{{@impossible_travel.triggering_locations.first_location.city}}`,
        `{{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}}`,
        `{{@impossible_travel.triggering_locations.second_location.country}}` in a
        short period of time.\n2. If the user should not be connecting from `{{@impossible_travel.triggering_locations.first_location.city}}`,
        `{{@impossible_travel.triggering_locations.first_location.country}}` or `{{@impossible_travel.triggering_locations.second_location.city}}`,
        `{{@impossible_travel.triggering_locations.second_location.country}}`, then
        consider isolating the account and resetting the credentials.\n3. Use the
        Cloud SIEM - User Investigation dashboard to audit any user actions that may
        have occurred after the illegitimate login.", "tags": ["source:jumpcloud",
        "scope:jumpcloud", "technique:T1078-valid-accounts", "mitre_platform:identity-provider",
        "tactic:TA0001-initial-access", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "mitre_platform:identity-provider", "security:attack",
        "tactic:TA0001-initial-access", "scope:jumpcloud", "source:jumpcloud", "technique:T1078-valid-accounts"],
        "version": 87, "id": "y9g-1vn-tcd", "updatedAt": 1736369641455, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Jumpcloud administrator role assigned",
        "createdAt": 1660795756539, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:jumpcloud @evt.name:user_admin_granted", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "admin_role_grant"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "admin_role_grant > 0"}], "message": "## Goal\nDetect when administrative
        privileges are provisioned to a JumpCloud user.\n\n## Strategy\nThis rule
        lets you monitor the following JumpCloud event to detect when administrative
        privileges are provisioned:\n\n* `user_admin_granted`\n\n## Triage and response\n1.
        Contact the JumpCloud administrator: `{{@usr.email}}` to confirm that the
        users or devices should have administrative privileges.\n2. If the change
        was **not** authorized, verify there are no other signals from the JumpCloud
        administrator: `{{@usr.email}}`.", "tags": ["tactic:TA0004-privilege-escalation",
        "source:jumpcloud", "technique:T1098-account-manipulation", "mitre_platform:identity-provider",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "technique:T1098-account-manipulation", "mitre_platform:identity-provider",
        "tactic:TA0003-persistence", "security:attack", "source:jumpcloud", "tactic:TA0004-privilege-escalation"],
        "version": 87, "id": "ngh-qas-7b3", "updatedAt": 1736369641463, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Jumpcloud brute force attack on user",
        "createdAt": 1732181596233, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:jumpcloud @evt.name:user_login_attempt @evt.outcome:false",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "failed_login"}, {"query": "source:jumpcloud
        @evt.name:user_login_attempt @evt.outcome:true", "groupByFields": ["@usr.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "successful_login"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "Successful", "status": "medium", "notifications": [], "condition": "failed_login
        > 5 THEN successful_login >= 1"}], "message": "## Goal\n\nDetect a brute force
        attack on a user.\n\n## Strategy\n\nTo identify a successful attempt: Detect
        when the same user fails to log in five times, and then successfully logs
        in. This generates a `MEDIUM` severity signal.\n\nTo identify an unsuccessful
        attempt: Detect when the same user fails to log in five times. This generates
        an `INFO` severity signal.\n\n## Triage and response\n\n1. Inspect the logs
        to see if this was a valid login attempt.\n2. Verify if 2FA was authenticated.\n3.
        If the user was compromised, rotate user credentials.\n", "tags": ["source:jumpcloud",
        "tactic:TA0006-credential-access", "technique:T1110-brute-force", "mitre_platform:identity-provider",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "technique:T1110-brute-force", "source:jumpcloud", "tactic:TA0006-credential-access",
        "mitre_platform:identity-provider"], "version": 19, "id": "def-001-88v", "updatedAt":
        1736369641630, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Jumpcloud password manager local export", "createdAt": 1733847561484, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:jumpcloud @evt.name:passwordmanager_items_export
        @evt.outcome:true", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "password_manager_export"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "password_manager_export > 0"}], "message": "## Goal\n\nDetect
        when a Jumpcloud password manager export is initiated for download.\n\n##
        Strategy\n\nThis rule monitors Jumpcloud events for when a password manager
        export is downloaded. This export action could involve downloading a significant
        amount of password data. Unauthorized exports could indicate a potential data
        breach, insider threat, or misuse of administrative privileges.\n\nPotential
        risks associated with these export actions include:\n\n- Unauthorized access
        to and exfiltration of sensitive company data and secrets.\n- Insider threats
        downloading and sharing confidential data.\n\n## Triage and response\n\n1.
        Determine if the export download is expected by:\n\n   - Contacting the user
        or admin `{{@usr.email}}` who initiated the export to verify the legitimacy
        of the request.\n   - Reviewing the context and scope of the export, including:\n     -
        The type of data exported.\n     - The time and date of the export and the
        business justification for the action.\n   - Checking Jumpcloud logs for other
        unusual or suspicious activity by the user, such as mass downloads, file sharing,
        or privilege escalation.\n\n2. If the export is unauthorized or unexpected:\n   -
        Begin your organization''s incident response process and investigate further.\n   -
        Analyze the exported data for sensitive information, and determine the scope
        of exposure.\n   - Monitor for any further attempts to export data or download
        sensitive information across the workspace.\n", "tags": ["technique:T1567-exfiltration-over-web-service",
        "source:jumpcloud", "mitre_platform:identity-provider", "tactic:TA0010-exfiltration",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "tactic:TA0010-exfiltration",
        "security:attack", "technique:T1567-exfiltration-over-web-service", "source:jumpcloud",
        "mitre_platform:identity-provider"], "version": 20, "id": "def-000-s99", "updatedAt":
        1736369641653, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Jumpcloud policy created", "createdAt": 1660804283801, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:jumpcloud @evt.name:policy_create",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "policy_creation"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "policy_creation > 0"}], "message": "## Goal\nDetect when a JumpCloud policy
        is created. \n\n## Strategy\nThis rule lets you monitor the following JumpCloud
        event to detect when a policy is created:\n\n* `@evt.name:policy_create`\n\n##
        Triage and response\n1. Contact the JumpCloud administrator `{{@usr.email}}`
        to confirm if the policy creation was intended.\n2. If the change was **not**
        authorized, verify there are no other signals from the administrator:`{{@usr.email}}`.",
        "tags": ["technique:T1484-domain-or-tenant-policy-modification", "source:jumpcloud",
        "technique:T1098-account-manipulation", "mitre_platform:identity-provider",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "mitre_platform:identity-provider", "technique:T1098-account-manipulation",
        "technique:T1484-domain-or-tenant-policy-modification", "tactic:TA0003-persistence",
        "security:attack", "source:jumpcloud"], "version": 87, "id": "mex-to8-3fa",
        "updatedAt": 1736369641638, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Jumpcloud policy modified", "createdAt": 1660804283801,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:jumpcloud
        @evt.name:policy_update", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "policy_update"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "policy_update > 0"}], "message": "## Goal\nDetect when a
        JumpCloud policy is modified. \n\n## Strategy\nThis rule lets you monitor
        the following JumpCloud event to detect when a policy is modified:\n\n* `@evt.name:policy_update`\n\n##
        Triage and response\n1. Contact the JumpCloud administrator `{{@usr.email}}`
        to confirm if the policy modification(s) was intended.\n2. If the change was
        **not** authorized, verify there are no other signals from the administrator:`{{@usr.email}}`.",
        "tags": ["technique:T1484-domain-or-tenant-policy-modification", "source:jumpcloud",
        "technique:T1098-account-manipulation", "mitre_platform:identity-provider",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "mitre_platform:identity-provider", "technique:T1098-account-manipulation",
        "technique:T1484-domain-or-tenant-policy-modification", "tactic:TA0003-persistence",
        "security:attack", "source:jumpcloud"], "version": 87, "id": "dil-xy4-9ag",
        "updatedAt": 1736369642172, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Kubernetes Pod Created in Kube Namespace", "createdAt":
        1629705614299, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "(source:kubernetes.audit OR (source:azure.containerservice @evt.category:(kube-audit
        OR kube-audit-admin))) @objectRef.resource:pods @http.method:create @objectRef.namespace:(\"kube-system\"
        OR \"kube-public\") @http.status_code:[200 TO 299]", "groupByFields": ["@usr.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "standardized_attributes"}, {"query": "@apiVersion:audit.k8s.io* @objectRef.resource:pods
        @verb:create @objectRef.namespace:(\"kube-system\" OR \"kube-public\") @responseStatus.code:[200
        TO 299]", "groupByFields": ["@user.username"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "non_standardized_attributes"},
        {"query": "source:gcp.k8s.cluster @data.protoPayload.request.kind:Pod @http.method:create
        service:k8s.io @data.protoPayload.response.metadata.namespace:(kube-system
        OR kube-public) -@data.protoPayload.response.code:*", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "gke_pod_created_in_kube_namespace"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "standardized", "status": "info", "notifications":
        [], "condition": "standardized_attributes > 0 || gke_pod_created_in_kube_namespace
        > 0"}, {"name": "non-standardized", "status": "info", "notifications": [],
        "condition": "non_standardized_attributes > 0"}], "message": "## Goal\nDetect
        when a user is creating a pod in one of the Kubernetes default namespaces.\n\n##
        Strategy\nThis rule monitors when a create (`@http.method:create`) action
        occurs for a pod (`@objectRef.resource:pods`) within either of the `kube-system`
        or `kube-public` namespaces.\n\nThe only users creating pods in the `kube-system`
        namespace should be cluster administrators. Furthermore, it is best practice
        to not run any cluster critical infrastructure in the `kube-system` namespace.\n\nThe
        `kube-public` namespace is intended for Kubernetes objects which should be
        readable by unauthenticated users. Thus, a pod should likely not be created
        in the `kube-public` namespace.\n\n## Triage and response\nDetermine if the
        user should be creating this new pod in one of the default namespaces.\n\n##
        Changelog\n* 7 May 2024 - Updated detection query to include logs from Azure
        Kubernetes Service.\n* 16 July 2024 - Updated detection query to include logs
        from Google Kubernetes Engine.\n", "tags": ["tactic:TA0004-privilege-escalation",
        "technique:T1068-exploitation-for-privilege-escalation", "source:kubernetes",
        "technique:T1578-modify-cloud-compute-infrastructure", "mitre_platform:containers",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "mitre_platform:iaas", "source:kubernetes",
        "mitre_platform:containers", "tactic:TA0004-privilege-escalation", "technique:T1578-modify-cloud-compute-infrastructure",
        "mitre_platform:cloud", "tactic:TA0005-defense-evasion", "technique:T1068-exploitation-for-privilege-escalation"],
        "version": 88, "id": "27a-db7-89d", "updatedAt": 1736369645185, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Kubernetes Pod Created with hostNetwork",
        "createdAt": 1629705616631, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "(source:kubernetes.audit OR (source:azure.containerservice @evt.category:(kube-audit
        OR kube-audit-admin))) @objectRef.resource:pods @http.method:create @requestObject.spec.hostNetwork:true
        @http.status_code:[200 TO 299]", "groupByFields": ["@requestObject.metadata.generateName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "standardized_attributes"}, {"query": "@apiVersion:audit.k8s.io* @objectRef.resource:pods
        @verb:create @requestObject.spec.hostNetwork:true @responseStatus.code:[200
        TO 299]", "groupByFields": ["@requestObject.metadata.generateName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "non_standardized_attributes"},
        {"query": "source:gcp.k8s.cluster @data.protoPayload.request.kind:Pod @http.method:create
        service:k8s.io @data.protoPayload.request.spec.hostNetwork:true -@data.protoPayload.response.code:*",
        "groupByFields": ["@data.protoPayload.request.metadata.generateName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "gke_pod_created_with_host_network"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "standardized", "status": "info",
        "notifications": [], "condition": "standardized_attributes > 0 || gke_pod_created_with_host_network
        > 0"}, {"name": "non-standardized", "status": "info", "notifications": [],
        "condition": "non_standardized_attributes > 0"}], "message": "## Goal\nDetect
        when a pod is attached to the host network.\n\n## Strategy\nThis rule monitors
        when a create (`@http.method:create`) action occurs for a pod (`@objectRef.resource:pods`)
        with the host network `@requestObject.spec.hostNetwork:true` attached.\n\nAttaching
        the `hostNetwork` permits a pod to access the node''s network adapter allowing
        a pod to listen to all network traffic for all pods on the node and communicate
        with other pods on the network namespace.\n\n## Triage and response\nDetermine
        if the pod needs `hostNetwork` access.\n\n## Changelog\n* 7 May 2024 - Updated
        detection query to include logs from Azure Kubernetes Service.\n* 22 July
        2024 - Updated detection query to include logs from Google Kubernetes Engine.\n",
        "tags": ["tactic:TA0004-privilege-escalation", "technique:T1068-exploitation-for-privilege-escalation",
        "source:kubernetes", "technique:T1578-modify-cloud-compute-infrastructure",
        "mitre_platform:containers", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "mitre_platform:iaas",
        "source:kubernetes", "mitre_platform:containers", "tactic:TA0004-privilege-escalation",
        "technique:T1578-modify-cloud-compute-infrastructure", "mitre_platform:cloud",
        "tactic:TA0005-defense-evasion", "technique:T1068-exploitation-for-privilege-escalation"],
        "version": 88, "id": "72d-b43-42f", "updatedAt": 1736369645167, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Kubernetes Service Account Created in
        Kube Namespace", "createdAt": 1629705612702, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "(source:kubernetes.audit OR (source:azure.containerservice
        @evt.category:(kube-audit OR kube-audit-admin))) -@objectRef.subresource:token
        @objectRef.resource:serviceaccounts @http.method:create @http.status_code:[200
        TO 299] @objectRef.namespace:(\"kube-system\" OR \"kube-public\") -@usr.name:(system\\:*
        OR eks\\:*)", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "standardized_attributes"},
        {"query": "@apiVersion:audit.k8s.io* @objectRef.resource:serviceaccounts @verb:create
        @http.status_code:[200 TO 299] -@objectRef.subresource:token @objectRef.namespace:(\"kube-system\"
        OR \"kube-public\") @responseStatus.code:[200 TO 299]  -@usr.id:(system\\:*
        OR eks\\:*)", "groupByFields": ["@user.username"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "non_standardized_attributes"},
        {"query": "source:gcp.k8s.cluster @http.method:create @data.protoPayload.response.metadata.namespace:(kube-system
        OR kube-public) @evt.name:io.k8s.core.v1.serviceaccounts.create -@usr.id:(system\\:*)
        -@data.protoPayload.response.code:*", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "gke_service_account_created_in_kube_namespace"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "standardized", "status": "info", "notifications": [], "condition":
        "standardized_attributes > 0 || gke_service_account_created_in_kube_namespace
        > 0"}, {"name": "non-standardized", "status": "info", "notifications": [],
        "condition": "non_standardized_attributes > 0"}], "message": "## Goal\nDetect
        when a user is creating a service account in one of the Kubernetes default
        namespaces.\n\n## Strategy\nThis rule monitors when a create (`@http.method:create`)
        action occurs for a service account (`@objectRef.resource:serviceaccounts`)
        within either of the `kube-system` or `kube-public` namespaces.\n\nThe only
        users creating service accounts in the `kube-system` namespace should be cluster
        administrators. Furthermore, it is best practice to not run any cluster critical
        infrastructure in the `kube-system` namespace.\n\nThe `kube-public` namespace
        is intended for kubernetes objects which should be readable by unauthenticated
        users. Thus, a service account should likely not be created in the `kube-public`
        namespace.\n\n## Triage and response\nDetermine if the user should be creating
        this new service account in one of the default namespaces.\n\n## Changelog\n*
        21 September 2022 - Tuned rule to remove system and EKS service account creations,
        increased severity, added decrease on environment flag.\n* 17 October 2022
        - Updated tags.\n* 7 May 2024 - Updated detection query to include logs from
        Azure Kubernetes Service.\n* 17 July 2024 - Updated detection query to include
        logs from Google Kubernetes Engine.\n* 19 November 2024 - Updated detection
        query to exclude token creation.\n", "tags": ["source:kubernetes", "technique:T1136-create-account",
        "mitre_platform:containers", "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:kubernetes", "mitre_platform:cloud",
        "technique:T1136-create-account", "tactic:TA0003-persistence", "mitre_platform:iaas",
        "mitre_platform:containers", "security:attack"], "version": 87, "id": "ca4-360-b9c",
        "updatedAt": 1736369645175, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Kubernetes Service Created with NodePort", "createdAt":
        1629705618291, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "(source:kubernetes.audit OR (source:azure.containerservice @evt.category:(kube-audit
        OR kube-audit-admin))) @objectRef.resource:services @http.method:create @requestObject.spec.type:NodePort
        @http.status_code:[200 TO 299]", "groupByFields": ["@objectRef.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "standardized_attributes"},
        {"query": "@apiVersion:audit.k8s.io* @objectRef.resource:services @verb:create
        @requestObject.spec.type:NodePort @responseStatus.code:[200 TO 299]", "groupByFields":
        ["@objectRef.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "non_standardized_attributes"}, {"query":
        "source:gcp.k8s.cluster  @evt.name:io.k8s.core.v1.services.create @http.method:create
        @data.protoPayload.request.spec.type:NodePort -@data.protoPayload.response.code:*",
        "groupByFields": ["@data.protoPayload.response.metadata.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "gke_service_created_with_nodeport"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "standardized", "status": "info",
        "notifications": [], "condition": "standardized_attributes > 0 || gke_service_created_with_nodeport
        > 0"}, {"name": "non-standardized", "status": "info", "notifications": [],
        "condition": "non_standardized_attributes > 0"}], "message": "## Goal\nDetect
        when a service''s port is attached to the node''s IP.\n\n## Strategy\nThis
        rule monitors when a create (`@http.method:create`) action occurs for a service
        (`@objectRef.resource:services`) attaching the service''s port to the node''s
        IP `@requestObject.spec.type:NodePort`.\n\nExposing the service''s port to
        the the node''s IP allows other hosts on the network namespace to access this
        service.\n\n## Triage and response\nDetermine if the service needs to expose
        it''s network connection with `NodePort` access.\n\n## Changelog\n* 7 May
        2024 - Updated detection query to include logs from Azure Kubernetes Service.\n*
        16 July 2024 - Updated detection query to include logs from Google Kubernetes
        Engine.\n", "tags": ["source:kubernetes", "technique:T1190-exploit-public-facing-application",
        "technique:T1578-modify-cloud-compute-infrastructure", "mitre_platform:containers",
        "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:iaas", "technique:T1190-exploit-public-facing-application",
        "source:kubernetes", "mitre_platform:containers", "tactic:TA0001-initial-access",
        "technique:T1578-modify-cloud-compute-infrastructure", "mitre_platform:cloud",
        "tactic:TA0005-defense-evasion"], "version": 88, "id": "6b4-f87-bcd", "updatedAt":
        1736369645159, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Kubernetes principal attempted to enumerate their permissions", "createdAt":
        1649700188058, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "(source:kubernetes.audit OR (source:azure.containerservice @evt.category:(kube-audit
        OR kube-audit-admin))) @requestObject.kind:SelfSubjectRulesReview @http.method:create
        -@usr.id:system\\:serviceaccount\\:*\\:datadog-kube-state-metrics", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "enumeration_attempt"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "enumeration_attempt > 0"}], "message": "## Goal\nIdentify when a user is
        attempting to enumerate their permissions.\n\n## Strategy\nThis rule identifies
        when a user attempts to enumerate their permissions, for example, through
        the use of `kubectl auth can-i --list`. This can be an indicator of an attacker
        having compromised a Kubernetes service account or user and attempting to
        determine what permissions it has.\n\n## Triage and response\n1. Determine
        if enumerating the permissions of the user: `{{@usr.id}}` is suspicious. For
        example, a service account assigned to a web application and enumerating its
        privileges is highly suspicious, while a group assigned to operations engineers
        is likely to represent legitimate activity.\n2. Use the Cloud SIEM `User Investigation`
        dashboard to review any user actions that may have occurred after the potentially
        malicious action.\n\n## Changelog\n* 7 May 2024 - Updated detection query
        to include logs from Azure Kubernetes Service.", "tags": ["source:kubernetes",
        "mitre_platform:containers", "tactic:TA0007-discovery", "mitre_platform:iaas",
        "security:attack", "technique:T1613-container-and-resource-discovery", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1613-container-and-resource-discovery", "source:kubernetes",
        "mitre_platform:cloud", "mitre_platform:iaas", "tactic:TA0007-discovery",
        "mitre_platform:containers", "security:attack"], "version": 88, "id": "68a-f97-42f",
        "updatedAt": 1736369645172, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Large amount of downloads on Google Drive", "createdAt":
        1629705617613, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gsuite service:drive -@usr.email:\"\" @evt.name:download -@event.parameters.originating_app_id:*",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@event.parameters.doc_id"], "aggregation": "cardinality", "name": ""}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 1800, "keepAlive": 1800}, "cases": [{"name": "", "status":
        "low", "notifications": []}], "message": "## Goal\nDetect when an attempt
        to download a large number of Google Drive files occurs.\n\n## Strategy\nThis
        rule monitors Google Workspace logs to determine when an anomalous number
        of Google Drive files have been downloaded by a user. An attacker may try
        to exfiltrate data by downloading files and other sensitive information from
        the platform.\n\nTo reduce false positives the detection looks at download
        requests that did not originate from an application. \n\n## Triage and response\n1.
        Check for other signals and logs generated by the impacted user `{{@usr.email}}`,
        and look for deviations in the following properties:\n    - Application\n    -
        Device\n    - Geolocation\n    - IP address\n2. Reach out to the user `{{@usr.email}}`
        to confirm if they recognize the activity.    \n3. If the activity is not
        legitimate, block the user from signing in and begin your Incident Response
        process.", "tags": ["source:gsuite", "scope:gsuite", "tactic:TA0009-collection",
        "technique:T1213-data-from-information-repositories", "mitre_platform:saas",
        "mitre_platform:office-suite", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "mitre_platform:saas", "tactic:TA0009-collection",
        "security:attack", "source:gsuite", "mitre_platform:office-suite", "technique:T1213-data-from-information-repositories",
        "scope:gsuite"], "version": 87, "id": "o6k-nqg-bn1", "updatedAt": 1736369646318,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "LastPass activity from a Tor client
        IP address", "createdAt": 1730389621564, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:lastpass service:reporting-events @threat_intel.results.category:tor
        ", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "lastpass_activity_from_tor_client_ip"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "lastpass_activity_from_tor_client_ip > 0"}], "message":
        "## Goal\n\nDetect LastPass activity observed from a Tor exit node.\n\n##
        Strategy\n\nMonitor LastPass event logs and IP address associated with it
        to determine whether activity is observed from a Tor client. Datadog enriches
        all ingested logs with [expert-curated threat intelligence][1] in real-time.\n\n##
        Triage and response\n\n1. Determine if the user: `{{@usr.name}}` from IP address:
        `{{@network.client.ip}}` should have performed activity: `{{@evt.name}}`.\n2.
        Investigate the user''s recent activity and login history to identify potential
        anomalies.\n3. If the activity is deemed suspicious, consider escalating the
        incident to the security team for further investigation and potential remediation.\n\n[1]:
        https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog\n",
        "tags": ["technique:T1090-proxy", "source:lastpass", "technique:T1133-external-remote-services",
        "mitre_platform:saas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "tactic:TA0001-initial-access", "security:attack", "technique:T1090-proxy",
        "source:lastpass", "technique:T1133-external-remote-services"], "version":
        88, "id": "def-000-7x4", "updatedAt": 1736369646496, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "LastPass activity from a potentially
        malicious IP address", "createdAt": 1730389621563, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:lastpass service:reporting-events @threat_intel.indicators_matched:IP
        @threat_intel.results.intention:(suspicious OR malicious)", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "lastpass_activity_from_threat_enriched_ip"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "lastpass_activity_from_threat_enriched_ip > 0"}], "message":
        "## Goal\n\nDetect LastPass activity observed from a threat enriched IP.\n\n##
        Strategy\n\nMonitor LastPass event logs from an IP address with associated
        threat intelligence. Datadog enriches all ingested logs with [expert-curated
        threat intelligence][1] in real-time.\n\n## Triage and response\n\n1. Determine
        if the user: `{{@usr.name}}` from IP address: `{{@network.client.ip}}` should
        have performed activity: `{{@evt.name}}`.\n2. Investigate the user''s recent
        activity and login history to identify potential anomalies.\n3. If the activity
        is deemed suspicious, consider escalating the incident to the security team
        for further investigation and potential remediation.\n\n[1]: https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog\n",
        "tags": ["source:lastpass", "mitre_platform:saas", "technique:T1078-valid-accounts",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "security:attack", "source:lastpass", "mitre_platform:saas"], "version": 88,
        "id": "def-000-7r5", "updatedAt": 1736369646486, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "LastPass brute force attempt", "createdAt":
        1730389618338, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:lastpass service:reporting-events @Data:\"LastPass via Website\" @evt.name:\"Failed
        login attempt\" ", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "lastpass_failed_logins"},
        {"query": "source:lastpass service:reporting-events @Data:\"LastPass via Website\"
        @evt.name:\"Log in\" ", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "lastpass_successful_logins"}],
        "options": {"evaluationWindow": 7200, "detectionMethod": "threshold", "maxSignalDuration":
        43200, "keepAlive": 21600}, "cases": [{"name": "Potential successful brute-force",
        "status": "medium", "notifications": [], "condition": "lastpass_failed_logins
        >= 5 && lastpass_successful_logins > 0"}, {"name": "Potential unauthorized
        access attempt", "status": "info", "notifications": [], "condition": "lastpass_failed_logins
        > 10"}], "message": "## Goal\n\nDetect a high number of failed login attempts
        for the user: `{{@usr.name}}` followed by a successful login.\n\n## Strategy\n\nMonitor
        LastPass logs for a significant rise in failed login attempts along with successful
        logins for a user. This may indicate potential unauthorized access attempts
        or brute force attacks.\n\n## Triage and response\n\n1.  Investigate the source
        of the failed login attempts to determine whether they are legitimate users
        experiencing issues or potential attackers.\n2.  Analyze the patterns of failed
        login attempts for the user: `{{@usr.name}}`, including IP addresses and timestamps,
        to identify any common characteristics.\n3.  Implement additional security
        measures, such as account lockouts or deactivations, multi-factor authentication
        enforcement, and notifications to users about suspicious login attempts.\n",
        "tags": ["source:lastpass", "tactic:TA0006-credential-access", "mitre_platform:saas",
        "technique:T1110-brute-force", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:attack", "source:lastpass", "technique:T1110-brute-force",
        "mitre_platform:saas", "tactic:TA0006-credential-access"], "version": 88,
        "id": "def-000-6ty", "updatedAt": 1736369646502, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "LastPass user impossible travel detected",
        "createdAt": 1730389623317, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:lastpass service:reporting-events @Data:\"LastPass via
        Website\" -@threat_intel.results.intention:benign ", "groupByFields": ["@usr.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@network.client.geoip",
        "metrics": ["@network.client.geoip"], "aggregation": "geo_data", "name": "lastpass_activity_user_impossible_travel_detected"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "impossible_travel",
        "maxSignalDuration": 43200, "keepAlive": 3600, "impossibleTravelOptions":
        {"baselineUserLocations": false, "detectIpTransition": false}}, "cases": [{"name":
        "", "status": "medium", "notifications": []}], "message": "## Goal\n\nDetect
        LastPass login activity occurring from geographically distant locations within
        an unrealistic time frame based on the user''s IP address.\n\n## Strategy\n\nMonitor
        LastPass login event logs and IP addresses to identify potential impossible
        travel scenarios, where a user''s login attempts occur from different locations
        that would be impossible to travel between within the time frame.\n\n## Triage
        and Response\n\n1. Check whether the user: `{{@usr.name}}` could have legitimately
        logged in from `{{@impossible_travel.triggering_locations.first_location.city}}`,
        `{{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}}`,
        `{{@impossible_travel.triggering_locations.second_location.country}}` within
        the observed time frame. Consider known travel plans, VPN use, or any authorized
        activity that could explain the behavior.\n2. If the login activity appears
        suspicious or cannot be justified, immediately restrict network access from
        the IP address: `{{@network.client.geoip.ipAddress}}` to prevent further unauthorized
        access. Coordinate with IT to lock the user''s LastPass account if necessary.\n3.
        Escalate the incident to IT security teams and management, providing all relevant
        details, including user information, IP addresses, locations, timestamps,
        and any investigative findings. Ensure that all actions taken are documented
        for future reference and compliance purposes.\n4. If appropriate, notify the
        user of the detected activity and provide guidance on securing their account,
        including changing their password, enabling multifactor authentication, and
        reviewing their account activity for any unauthorized actions.\n", "tags":
        ["source:lastpass", "mitre_platform:saas", "technique:T1078-valid-accounts",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "security:attack", "source:lastpass", "mitre_platform:saas"], "version": 88,
        "id": "def-000-t89", "updatedAt": 1736369646873, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "LastPass vault content export attempt",
        "createdAt": 1730389623315, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:lastpass service:reporting-events @evt.name:\"Data export\"
        ", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "lastpass_activity_vault_export_attempt_detected"}],
        "options": {"evaluationWindow": 7200, "detectionMethod": "threshold", "maxSignalDuration":
        43200, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "lastpass_activity_vault_export_attempt_detected > 0"}],
        "message": "## Goal\n\nDetect when a LastPass user attempts to modify a vault
        item.\n\n## Strategy\n\nThis rule monitors LastPass account logs to determine
        when a vault item is modified. This could indicate an attempt to modify an
        item.\n\n## Triage and response\n\n1.  Investigate the user: `{{@usr.name}}`
        who triggered the event `{{@evt.name}}` involving vault item `{{@VID}}` within
        the vault.\n2.  If this action was unintended by the user:\n    - Rotate the
        user\u2019s LastPass master password\n    - Identify all the items that were
        modified and rotate the necessary authentication credentials\n", "tags": ["technique:T1555-credentials-from-password-stores",
        "source:lastpass", "tactic:TA0006-credential-access", "mitre_platform:saas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1555-credentials-from-password-stores",
        "security:attack", "source:lastpass", "mitre_platform:saas", "tactic:TA0006-credential-access"],
        "version": 88, "id": "def-000-p2e", "updatedAt": 1736369646864, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Log4Shell Scanning Detected", "createdAt":
        1645717862882, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "@http.url:*", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "log4shell_payloads_in_http_data"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "hardcoded", "maxSignalDuration":
        3600, "keepAlive": 3600, "hardcodedEvaluatorType": "log4shell"}, "cases":
        [{"name": "", "status": "info", "notifications": [], "condition": "log4shell_payloads_in_http_data
        > 0"}], "message": "## Goal\nDetect when a Log4j scanning attempt occurs in
        your environment.\n\n## Strategy\nRegex search on logs to find specific payloads
        indicative of Log4j scanning.\n\n## Triage and response\n1. Investigate if
        the host is running a vulnerable version of the Log4j Java library\n2. Use
        the [Log4j Investigation Dashboard](https://app.datadoghq.com/dash/integration/cloud_security_platform_log4shell_investigator)
        to conduct impact analysis\n3. Explore what other services the attacker hit
        in the last day - Linked to investigation query \n4. Explore Java logs associated
        with the attacker - linked to investigation query\n", "tags": ["mitre_platform:windows",
        "technique:T1190-exploit-public-facing-application", "mitre_platform:linux",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1190-exploit-public-facing-application", "tactic:TA0001-initial-access",
        "security:attack", "mitre_platform:iaas", "mitre_platform:linux", "mitre_platform:windows"],
        "version": 87, "id": "1bw-akj-fk7", "updatedAt": 1736369648526, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Log4j Scanner detected in user agent
        or referrer", "createdAt": 1639665451185, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:(apache OR nginx) (@http.referer:(*jndi\\:ldap*
        OR *jndi\\:rmi* OR *jndi\\:dns*) OR @http.useragent:(*jndi\\:ldap* OR *jndi\\:rmi*
        OR *jndi\\:dns*))", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "standard_attributes"},
        {"query": "source:(apache OR nginx) (@http_referrer:(*jndi\\:ldap* OR *jndi\\:rmi*
        OR *jndi\\:dns*) OR @http_user_agent:(*jndi\\:ldap* OR *jndi\\:rmi* OR *jndi\\:dns*)
        OR @http.user_agent:(*jndi\\:ldap* OR *jndi\\:rmi* OR *jndi\\:dns*))", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "non_standard_attributes"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 7200, "keepAlive":
        3600}, "cases": [{"name": "standard attribute query triggered", "status":
        "info", "notifications": [], "condition": "standard_attributes > 0"}, {"name":
        "non standard attribute query triggered", "status": "info", "notifications":
        [], "condition": "non_standard_attributes > 0"}], "message": "## Goal\nThis
        rule detects if your Apache or NGINX web servers are being scanned for the
        log4j vulnerability. The initial vulnerability was identified as [CVE-2021-44228](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228).\n\n##
        Strategy\nThis signal evaluated that `jndi:(ldap OR rmi OR dns)` has been
        detected in the HTTP header fields `user agent` and `referrer` or `referer`.\n\n##
        Triage and response\n1. Ensure you servers have the most recent version of
        log4j installed. \n2. Check if the `Base64 was detected in an http.user_agent
        or http.referrer` rule was also triggered and follow the `Triage and response`
        steps in that rule.\n\nNote: Datadog''s `The Monitor` blog has an article
        published about [\"The Log4j Logshell vulnerability: Overview, detection,
        and remediation\"](https://www.datadoghq.com/blog/log4j-log4shell-vulnerability-overview-and-remediation/).
        ", "tags": ["mitre_platform:windows", "mitre_platform:linux", "tactic:TA0043-reconnaissance",
        "mitre_platform:iaas", "technique:T1595-active-scanning", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0043-reconnaissance", "security:attack", "technique:T1595-active-scanning",
        "mitre_platform:iaas", "mitre_platform:linux", "mitre_platform:windows"],
        "version": 88, "id": "pk1-cvn-6t2", "updatedAt": 1736369648549, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Login activity observed from Tor client
        IP", "createdAt": 1732032505000, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:* @evt.name:*login* -@evt.outcome:\"\" @evt.outcome:(true
        OR YES OR yes OR success OR SUCCESS OR Succeeded) @threat_intel.results.category:tor",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "tor_client_activity"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "tor_client_activity > 0"}], "message": "## Goal\n\nDetect activity observed
        from a Tor exit node.\n\n## Strategy\n\nMonitors event logs and IP address
        associated with the application to determine whether activity is observed
        from a Tor client. Datadog enriches all ingested logs with [expert-curated
        threat intelligence][1] in real-time.\n\n## Triage and response\n\n1. Determine
        if the user: `{{@usr.name}}` from IP address: `{{@network.client.ip}}` should
        have performed activity: `{{@evt.name}}`.\n2. Investigate the user''s recent
        activity and login history to identify potential anomalies.\n3. If the activity
        is deemed suspicious, consider escalating the incident to the security team
        for further investigation and potential remediation.\n\n[1]: https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog\n",
        "tags": ["technique:T1090-proxy", "security:threat-intel", "technique:T1133-external-remote-services",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:threat-intel", "technique:T1090-proxy",
        "tactic:TA0001-initial-access", "security:attack", "technique:T1133-external-remote-services"],
        "version": 21, "id": "def-001-syp", "updatedAt": 1736369649125, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Login attempt from new location detected",
        "createdAt": 1730191974883, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:abnormal-security @service:abnormal-security-audit-logs
        @evt.name:login", "groupByFields": ["@user.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@network.client.geoip.country.name",
        "metrics": ["@network.client.geoip.country.name"], "aggregation": "new_value",
        "name": "abnormal_security_login"}], "options": {"evaluationWindow": 0, "detectionMethod":
        "new_value", "maxSignalDuration": 86400, "keepAlive": 3600, "newValueOptions":
        {"forgetAfter": 14, "learningDuration": 7, "learningThreshold": 0, "learningMethod":
        "duration"}}, "cases": [{"name": "abnormal_security_login", "status": "low",
        "notifications": []}], "message": "## Goal\nDetect when a user logs in to
        Abnormal Security from an atypical location.\n\n## Strategy\nThis rule checks
        for user login API calls originating from an atypical location, which may
        indicate that an attacker has gained access to the user credentials and accessed
        the account.\n\n## Triage and response\n1. Investigate the other actions performed
        by the user `{{@user.email}}`.\n2. If confirmed as a threat, implement measures
        to block or limit the impact of the suspicious activity.\n3. Follow company
        procedures for handling malicious files, including isolating the endpoint,
        running antivirus/antimalware scans, analyzing logs, and updating security
        policies.", "tags": ["mitre_platform:saas", "technique:T1078-valid-accounts",
        "source:abnormal-security", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1078-valid-accounts",
        "tactic:TA0001-initial-access", "security:attack", "mitre_platform:saas",
        "source:abnormal-security"], "version": 19, "id": "def-000-1fb", "updatedAt":
        1736369649101, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Malicious IP connected to MySQL database", "createdAt": 1722360605203, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:mysql @db.operation:Connect
        @threat_intel.results.intention:(suspicious OR malicious)", "groupByFields":
        ["host"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "mysql_malicious_connect"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "malicious_connect", "status": "low", "notifications":
        [], "condition": "mysql_malicious_connect > 0"}], "message": "## Goal\n\nDetect
        database connections from IP addresses that are identified as malicious. Network
        access to database servers should be restricted.\n\n## Strategy\n\nThis rule
        monitors logs from MySQL to detect when a connection originates from an IP
        identified as malicious. Datadog enriches all ingested logs with [threat intelligence][1]
        in real time.\n\n## Triage and response\n1. Determine if the user `{{ @db.user
        }}` is expected to authenticate from the IP `{{ @network.client.ip }}`.\n2.
        Restrict network access to the database. Remove any public access.\n3. If
        the login was successful review database logs for suspicious actions taken
        by the user `{{ @db.user }}`.\n4. Rotate credentials for the affected account.\n\n[1]:
        https://docs.datadoghq.com/security/threat_intelligence/", "tags": ["tactic:TA0043-reconnaissance",
        "technique:T1595-active-scanning", "source:mysql", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1595-active-scanning", "tactic:TA0043-reconnaissance", "security:attack",
        "source:mysql", "mitre_platform:cloud"], "version": 87, "id": "def-000-1l4",
        "updatedAt": 1736369650265, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Malicious IP connected to PostgreSQL database", "createdAt":
        1722360587304, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:postgresql message:\"authentication failed\" @threat_intel.results.intention:(suspicious
        OR malicious)", "groupByFields": ["host"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "postgresql_failed_login"},
        {"query": "source:postgresql message:\"connection authorized\" @threat_intel.results.intention:(suspicious
        OR malicious)", "groupByFields": ["host"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "postgresql_successful_login"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "malicious_login", "status":
        "high", "notifications": [], "condition": "postgresql_successful_login > 0"},
        {"name": "malicious_connect", "status": "low", "notifications": [], "condition":
        "postgresql_failed_login > 0"}], "message": "## Goal\n\nDetect database connections
        from IP addresses that are identified as malicious. Network access to database
        servers should be restricted.\n\n## Strategy\n\nThis rule monitors logs from
        PostgreSQL to detect when a connection originates from an IP identified as
        malicious. Datadog enriches all ingested logs with [threat intelligence][1]
        in real time.\n\nA `High` signal is generated if the connection resulted in
        a successful login. A `Low` signal is generated if there was no login attempt
        or the login attempt failed.\n\n## Triage and response\n1. Determine if the
        user `{{ @db.user }}` is expected to authenticate from the IP `{{ @network.client.ip
        }}`.\n2. Restrict network access to the database. Remove any public access.\n3.
        If the login was successful review database logs for suspicious actions taken
        by the user `{{ @db.user }}`.\n4. Rotate credentials for the affected account.\n\n[1]:
        https://docs.datadoghq.com/security/threat_intelligence/", "tags": ["tactic:TA0043-reconnaissance",
        "technique:T1595-active-scanning", "source:postgresql", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1595-active-scanning", "tactic:TA0043-reconnaissance",
        "security:attack", "source:postgresql", "mitre_platform:cloud"], "version":
        87, "id": "def-000-6g3", "updatedAt": 1736369650303, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Malicious authentication attempt detected
        by Okta ThreatInsight", "createdAt": 1674188236871, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:okta @evt.name:security.threat.detected
        @debugContext.debugData.threatSuspected:true @evt.outcome:(DENY OR RATE_LIMIT)",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "threat_suspected_denied"},
        {"query": "source:okta @evt.name:security.threat.detected @debugContext.debugData.threatSuspected:true
        @evt.outcome:ALLOW", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "threat_suspected_allowed"},
        {"query": "source:okta @evt.name:user.session.start @evt.outcome:SUCCESS",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "session_start"}], "options":
        {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "user session started from allowed
        IP", "status": "medium", "notifications": [], "condition": "threat_suspected_allowed
        > 0 && session_start > 0"}, {"name": "user session started from denied IP",
        "status": "medium", "notifications": [], "condition": "threat_suspected_denied
        > 0 && session_start > 0"}, {"name": "request terminated", "status": "low",
        "notifications": [], "condition": "threat_suspected_denied > 0"}, {"name":
        "allowed", "status": "low", "notifications": [], "condition": "threat_suspected_allowed
        > 0"}], "message": "## Goal\nDetect malicious Okta authentication attempts
        based on Okta ThreatInsight.\n\n## Strategy\nThis rule lets you monitor Okta
        authentication attempts where the `@evt.name` is `security.threat.detected`
        and the `@debugContext.debugData.threatSuspected` value is `true`.\n\n[Okta
        ThreatInsight][1] uses these attributes to flag authentication attempts that
        are deemed as threats.\n\n\n## Triage and response\n1. Determine if the source
        IP `{{@network.client.ip}}` is anomalous within the organization:\n    * Does
        threat intelligence indicate that this IP has been associated with malicious
        activity?\n    * Is the geo-location, ASN, or domain uncommon for the organization?\n    *
        Use the Cloud SIEM - IP Investigation dashboard to see if the IP address has
        taken other actions.\n2. Investigate the `debugContext.debugData.threatDetections`
        field to determine the threat reason and level.\n3. If the IP is deemed malicious:\n    *
        Confirm that no successful authentication attempts have been made.\n    *
        If a successful authentication attempt is observed, begin your company''s
        incident response process.\n\n## Changelog\n* 13 September 2023 - Updated
        `critical` case severities to `medium` and `medium` case severities to `low`.\n\n\n[1]:
        https://help.okta.com/en-us/Content/Topics/Security/threat-insight/configure-threatinsight-system-log.htm",
        "tags": ["source:okta", "tactic:TA0006-credential-access", "technique:T1110-brute-force",
        "mitre_platform:identity-provider", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:okta", "security:attack", "technique:T1110-brute-force",
        "tactic:TA0006-credential-access", "mitre_platform:identity-provider"], "version":
        88, "id": "def-000-rtx", "updatedAt": 1736369650284, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 - Modification of Trusted
        Domain", "createdAt": 1660296773162, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:azure.activedirectory @evt.name:(\"Set domain
        authentication\" OR \"Set domain authentication \" OR \"Set federation settings
        on domain\" OR \"Set federation settings on domain \") @evt.category:AuditLogs",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "azure_ad_trusted_domain_modified"}, {"query":
        "source:microsoft-365 @evt.name:(\"Set domain authentication.\" OR \"Set domain
        authentication. \" OR \"Set federation settings on domain.\" OR \"Set federation
        settings on domain. \")", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "m365_trusted_domain_modified"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "critical", "notifications":
        [], "condition": "azure_ad_trusted_domain_modified > 0 || m365_trusted_domain_modified
        > 0"}], "message": "## Goal\n\nDetects when a user creates or modifies a trusted
        domain object in Microsoft 365.\n\n## Strategy\n\nMonitor Azure AD Audit logs
        for the following `@evt.name`:\n\n- `Set federation settings on domain`\n-
        `Set domain authentication`\n\nMonitor Microsoft 365 Audit logs for the following
        `@evt.name`:\n\n- `Set federation settings on domain.`\n- `Set domain authentication.`\n\nAn
        attacker can create a new attacker-controlled domain as federated or modify
        the existing federation settings for a domain by configuring a new, secondary
        signing certificate. Both of these techniques would allow the attacker to
        authenticate as any user bypassing authentication requirements like a valid
        password or MFA.\n\n## Triage and response\n\n1. Determine if `{{@usr.id}}`
        should have made a `{{@evt.name}}` API call.\n2. If the API call was not made
        by the user:\n   - Remove the suspicious domain or settings.\n   - Begin your
        organization''s Incident Response (IR) process.\n3. If the API call was made
        by the user:\n   - Ensure the change was authorized.", "tags": ["source:azure",
        "mitre_platform:saas", "scope:azure", "technique:T1562-impair-defenses", "mitre_platform:office-suite",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "mitre_platform:saas", "security:attack", "tactic:TA0005-defense-evasion",
        "source:azure", "technique:T1562-impair-defenses", "mitre_platform:office-suite",
        "scope:azure"], "version": 88, "id": "6p9-30r-oqb", "updatedAt": 1736369650445,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Anomalous Amount of Deleted
        Emails", "createdAt": 1629705614454, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 @evt.name:HardDelete @Folder.Path:*Inbox*",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 1800, "keepAlive":
        1800}, "cases": [{"name": "", "status": "medium", "notifications": []}], "message":
        "## Goal\nDetect when an anomalous amount of emails are deleted from Microsoft
        365 Exchange.\n\n## Strategy\nMonitor Microsoft 365 Exchange audit logs to
        look for events with an `@evt.name` value of `HardDelete`, where the `@Folder.Path`
        is the inbox (`*Inbox*`).\n\n## Triage and response\n1. Determine if the user
        `{{@usr.id}}` intended to delete the observed emails.\n2. If `{{@usr.id}}`
        is not responsible for the email deletions, investigate `{{@usr.id}}` for
        anomalous activity. If necessary, initiate your company''s incident response
        (IR) process.", "tags": ["source:microsoft-365", "technique:T1485-data-destruction",
        "tactic:TA0040-impact", "mitre_platform:saas", "scope:exchange-server", "mitre_platform:office-suite",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "source:microsoft-365", "mitre_platform:saas", "technique:T1485-data-destruction",
        "mitre_platform:office-suite", "tactic:TA0040-impact", "scope:exchange-server"],
        "version": 88, "id": "jq3-281-esg", "updatedAt": 1736369650464, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Anomalous Amount of Downloaded
        files", "createdAt": 1658345691321, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 @evt.name:FileDownloaded", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": ["@SourceFileName"],
        "aggregation": "cardinality", "name": "files_downloaded"}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 1800, "keepAlive":
        1800}, "cases": [{"name": "", "status": "medium", "notifications": []}], "message":
        "## Goal\nDetect when a Microsoft 365 user downloads an anomalous amount of
        files. This could be an indicator of data exfilteration.\n\n## Strategy\nMonitor
        Microsoft 365 audit logs to look for an anomalous amount of logs with an `@evt.name`
        value of `@evt.name:FileDownloaded`.\n\n## Triage and response\n1. Determine
        if the user `{{@usr.email}}` intended to download the files.\n2. If `{{@usr.email}}`
        is not responsible for file downloads, investigate `{{@usr.email}}` for anomalous
        activity. If necessary, initiate your company''s incident response (IR) process.",
        "tags": ["source:microsoft-365", "tactic:TA0009-collection", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "mitre_platform:office-suite", "scope:microsoft-365",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "source:microsoft-365", "tactic:TA0009-collection", "security:attack", "scope:microsoft-365",
        "mitre_platform:office-suite", "technique:T1213-data-from-information-repositories"],
        "version": 88, "id": "lmk-gfu-na5", "updatedAt": 1736369650858, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Default or Anonymous user
        permissions added to mailbox folder", "createdAt": 1684308503450, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:microsoft-365
        @evt.name:(Add-MailboxFolderPermission OR Set-MailboxFolderPermission) -@Parameters.AccessRights:None
        @Parameters.User:(*Anonymous* OR *Default*) @threat_intel.results.category:tor",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "default_anonymous_permissions_tor"},
        {"query": "source:microsoft-365 @evt.name:(Add-MailboxFolderPermission OR
        Set-MailboxFolderPermission) -@Parameters.AccessRights:None @Parameters.User:(*Anonymous*
        OR *Default*) @threat_intel.results.category:*", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "default_anonymous_permissions_enriched"}, {"query": "source:microsoft-365
        @evt.name:(Add-MailboxFolderPermission OR Set-MailboxFolderPermission) -@Parameters.AccessRights:None
        @Parameters.User:(*Anonymous* OR *Default*) @Parameters.Identity:(*inbox*
        OR *Inbox*)", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "default_anonymous_permissions_inbox"},
        {"query": "source:microsoft-365 @evt.name:(Add-MailboxFolderPermission OR
        Set-MailboxFolderPermission) -@Parameters.AccessRights:None @Parameters.User:(*Anonymous*
        OR *Default*)", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "default_anonymous_permissions"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "via Tor client", "status":
        "high", "notifications": [], "condition": "default_anonymous_permissions_tor
        > 0"}, {"name": "via threat related IP", "status": "medium", "notifications":
        [], "condition": "default_anonymous_permissions_enriched > 0"}, {"name": "for
        user''s inbox", "status": "low", "notifications": [], "condition": "default_anonymous_permissions_inbox
        > 0"}, {"name": "audit", "status": "info", "notifications": [], "condition":
        "default_anonymous_permissions > 0"}], "message": "## Goal\nDetect when a
        user adds Default or Anonymous user permissions for a mailbox folder.\n\n##
        Strategy\nMonitor Microsoft 365 audit logs to look for the operation [`Add-MailboxFolderPermission`][1]
        or [`Set-MailboxFolderPermission`][2]. These operations grant or modify permissions
        to specific mailbox folders like inbox. An attacker may grant folder access
        to the Default or Anonymous user permission allowing them to maintain persistence
        to the target user''s mail folders.\n\n**Note:**\n* Default - references any
        internal, authenticated users.\n* Anonymous - references any external, unauthenticated
        users.\n\n## Triage and response\n1. Determine if there is a legitimate use
        case for adding Default or Anonymous permissions by contacting the user `{{@usr.email}}`.\n2.
        If `{{@usr.email}}` is not aware of the action:\n    * Investigate other activities
        performed by users at the following attributes `@usr.email` and `@Parameters.Identity`
        using the Cloud SIEM - User Investigation dashboard.\n    * Begin your organization''s
        incident response process and investigate.\n\n## Changelog\n* 17 August 2023
        - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://learn.microsoft.com/en-us/powershell/module/exchange/add-mailboxfolderpermission?view=exchange-ps\n[2]:
        https://learn.microsoft.com/en-us/powershell/module/exchange/set-mailboxfolderpermission?view=exchange-ps",
        "tags": ["source:microsoft-365", "technique:T1098-account-manipulation", "mitre_platform:saas",
        "mitre_platform:office-suite", "scope:microsoft-365", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0003-persistence", "security:attack",
        "source:microsoft-365", "mitre_platform:saas", "technique:T1098-account-manipulation",
        "scope:microsoft-365", "mitre_platform:office-suite", "mitre_platform:cloud"],
        "version": 87, "id": "def-000-zat", "updatedAt": 1736369650860, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Exchange inbox rule name
        associated with business email compromise attacks", "createdAt": 1698909960147,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:microsoft-365
        @evt.name:(New-InboxRule OR Set-InboxRule) @Parameters.Name:(\"//.\" OR \"`\"
        OR \"``\" OR \".\" OR \",\" OR \"...\" OR \".....\" OR \"....\" OR \"..\"
        OR \"bgh\" OR \"............\" OR \".......\" OR \"..,\")", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "exchange_inbox_rule_ioc_names"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "exchange_inbox_rule_ioc_names > 0"}], "message": "## Goal\nDetect when a
        user configures an inbox rule with a name commonly associated with business
        email compromises.\n\n## Strategy\nMonitor Microsoft 365 Exchange audit logs
        to look for the operation [`New-InboxRule`][1] or [`Set-InboxRule`][2]. Attackers
        might set up email rules to hide incoming emails in a compromised user mailbox
        to hide their activities or maintain access to the victim''s inbox. Attackers
        may use simple names like `.` or `...` for their malicious inbox rules, which
        are uncommon in most environments. \n\n## Triage and response\n1. Inspect
        the inbox rule for any indicators:\n    * Suspicious keywords in the filter.\n    *
        The rule name.\n2. Determine if there is a legitimate use case for the inbox
        rule by contacting the user `{{@usr.email}}`.\n3. If `{{@usr.email}}` is not
        aware of the inbox rule:\n    * Investigate other activities performed by
        the user `{{@usr.email}}` using the **Cloud SIEM - User Investigation** dashboard.\n    *
        Begin your organization''s incident response process and investigate.\n\n##
        Changelog\n* 1 July 2024 - Updated rule query.\n* 23 July 2024 - Updated rule
        query.\n\n[1]: https://learn.microsoft.com/en-us/powershell/module/exchange/new-inboxrule?view=exchange-ps\n[2]:
        https://learn.microsoft.com/en-us/powershell/module/exchange/set-inboxrule?view=exchange-ps",
        "tags": ["source:microsoft-365", "mitre_platform:saas", "technique:T1564-hide-artifacts",
        "mitre_platform:office-suite", "scope:microsoft-365", "tactic:TA0005-defense-evasion",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1564-hide-artifacts",
        "security:attack", "scope:microsoft-365", "tactic:TA0003-persistence", "mitre_platform:cloud",
        "tactic:TA0005-defense-evasion", "mitre_platform:office-suite", "source:microsoft-365",
        "mitre_platform:saas"], "version": 87, "id": "def-000-m8p", "updatedAt": 1736369650872,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Exchange inbox rule set
        up to automatically forward email", "createdAt": 1684308503457, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:microsoft-365
        @evt.name:(New-InboxRule OR Set-InboxRule) (@Parameters.ForwardTo:* OR @Parameters.RedirectTo:*
        OR @Parameters.ForwardAttachmentAs:*) @threat_intel.results.category:tor",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "exchange_inbox_rule_tor"}, {"query":
        "source:microsoft-365 @evt.name:(New-InboxRule OR Set-InboxRule) (@Parameters.ForwardTo:*
        OR @Parameters.RedirectTo:* OR @Parameters.ForwardAttachmentAs:*) @threat_intel.results.category:*",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "exchange_inbox_rule_enriched"}, {"query":
        "source:microsoft-365 @evt.name:(New-InboxRule OR Set-InboxRule) (@Parameters.ForwardTo:*
        OR @Parameters.RedirectTo:* OR @Parameters.ForwardAttachmentAs:*)", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "exchange_inbox_rule"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "via Tor client", "status": "high", "notifications":
        [], "condition": "exchange_inbox_rule_tor > 0"}, {"name": "via threat related
        IP", "status": "medium", "notifications": [], "condition": "exchange_inbox_rule_enriched
        > 0"}, {"name": "audit", "status": "info", "notifications": [], "condition":
        "exchange_inbox_rule > 0"}], "message": "## Goal\nDetect when a user configures
        an inbox forwarding rule.\n\n## Strategy\nMonitor Microsoft 365 Exchange audit
        logs to look for the operation [`New-InboxRule`][1] or [`Set-InboxRule`][2].
        Inbox rules automatically perform specific actions on emails that arrive in
        an inbox. Forwarding rules allow users to send email messages to another inbox
        inside or outside of the organization. Attackers can use inbox rules to collect
        and exfiltrate email data to an external account.\n\n## Triage and response\n1.
        Inspect the inbox rule for any indicators:\n    * Email addresses that are
        external to your organization.\n2. Determine if there is a legitimate use
        case for the inbox rule by contacting the user `{{@usr.email}}`.\n3. If the
        user `{{@usr.email}}` is not aware of the inbox rule:\n    * Investigate other
        activities performed by the user `{{@usr.email}}` using the Cloud SIEM - User
        Investigation dashboard.\n    * Begin your organization''s incident response
        process and investigate.\n\n## Changelog\n* 17 August 2023 - Updated query
        to replace attribute `@threat_intel.results.subcategory:tor` with `@threat_intel.results.category:tor`.\n\n[1]:
        https://learn.microsoft.com/en-us/powershell/module/exchange/new-inboxrule?view=exchange-ps\n[2]:
        https://learn.microsoft.com/en-us/powershell/module/exchange/set-inboxrule?view=exchange-ps",
        "tags": ["source:microsoft-365", "tactic:TA0009-collection", "mitre_platform:saas",
        "mitre_platform:office-suite", "scope:microsoft-365", "technique:T1114-email-collection",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "source:microsoft-365", "tactic:TA0009-collection", "security:attack", "technique:T1114-email-collection",
        "scope:microsoft-365", "mitre_platform:office-suite"], "version": 87, "id":
        "def-000-0z3", "updatedAt": 1736369651545, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Exchange inbox rule set
        up to hide email", "createdAt": 1684308503441, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:microsoft-365 @evt.name:(New-InboxRule
        OR Set-InboxRule) (@Parameters.MoveToFolder:(RSS* OR Delete* OR Archive* OR
        Junk* OR Conversation*) OR @Parameters.DeleteMessage:True) (@Parameters.BodyContainsWords:*
        OR @Parameters.SubjectContainsWords:* OR @Parameters.SubjectOrBodyContainsWords:*)
        @threat_intel.results.category:tor", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "exchange_inbox_hide_email_rule_tor"},
        {"query": "source:microsoft-365 @evt.name:(New-InboxRule OR Set-InboxRule)
        (@Parameters.MoveToFolder:(RSS* OR Delete* OR Archive* OR Junk* OR Conversation*)
        OR @Parameters.DeleteMessage:True) (@Parameters.BodyContainsWords:* OR @Parameters.SubjectContainsWords:*
        OR @Parameters.SubjectOrBodyContainsWords:*) @threat_intel.results.category:*",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "exchange_inbox_hide_email_rule_enriched"},
        {"query": "source:microsoft-365 @evt.name:(New-InboxRule OR Set-InboxRule)
        (@Parameters.MoveToFolder:(RSS* OR Delete* OR Archive* OR Junk* OR Conversation*)
        OR @Parameters.DeleteMessage:True) (@Parameters.BodyContainsWords:(*scam*
        OR *malicious* OR *phish* OR *malware* OR *hack* OR *suspicious*) OR @Parameters.SubjectContainsWords:(*scam*
        OR *malicious* OR *phish* OR *malware* OR *hack* OR *suspicious*) OR @Parameters.SubjectOrBodyContainsWords:(*scam*
        OR *malicious* OR *phish* OR *malware* OR *hack* OR *suspicious*))", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "exchange_inbox_hide_email_rule_keywords"}, {"query": "source:microsoft-365
        @evt.name:(New-InboxRule OR Set-InboxRule) (@Parameters.MoveToFolder:(RSS*
        OR Delete* OR Archive* OR Junk* OR Conversation*) OR @Parameters.DeleteMessage:True)
        (@Parameters.BodyContainsWords:* OR @Parameters.SubjectContainsWords:* OR
        @Parameters.SubjectOrBodyContainsWords:*)", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "exchange_inbox_hide_email_rule"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "via Tor client", "status": "high", "notifications":
        [], "condition": "exchange_inbox_hide_email_rule_tor > 0"}, {"name": "suspicious
        keywords used in rule", "status": "high", "notifications": [], "condition":
        "exchange_inbox_hide_email_rule_keywords > 0"}, {"name": "via threat related
        IP", "status": "medium", "notifications": [], "condition": "exchange_inbox_hide_email_rule_enriched
        > 0"}, {"name": "audit", "status": "info", "notifications": [], "condition":
        "exchange_inbox_hide_email_rule > 0"}], "message": "## Goal\nDetect when a
        user configures an inbox rule to move or delete email.\n\n## Strategy\nMonitor
        Microsoft 365 Exchange audit logs to look for the operation [`New-InboxRule`][1]
        or [`Set-InboxRule`][2]. Attackers might set up email rules to hide incoming
        emails in a compromised user mailbox to hide their activities. They may delete
        emails or mark them as read and move emails to less noticeable folders like
        ''Conversation History''. In addition, the rule may be set up to look for
        keywords like ''hack'', ''phishing'' or ''invoice''.\n\n## Triage and response\n1.
        Inspect the inbox rule for any indicators:\n    * Suspicious keywords in the
        filter.\n    * The rule name.\n2. Determine if there is a legitimate use case
        for the inbox rule by contacting the user `{{@usr.email}}`.\n3. If `{{@usr.email}}`
        is not aware of the inbox rule:\n    * Investigate other activities performed
        by the user `{{@usr.email}}` using the Cloud SIEM - User Investigation dashboard.\n    *
        Begin your organization''s incident response process and investigate.\n\n##
        Changelog\n* 17 August 2023 - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://learn.microsoft.com/en-us/powershell/module/exchange/new-inboxrule?view=exchange-ps\n[2]:
        https://learn.microsoft.com/en-us/powershell/module/exchange/set-inboxrule?view=exchange-ps",
        "tags": ["source:microsoft-365", "mitre_platform:saas", "technique:T1564-hide-artifacts",
        "mitre_platform:office-suite", "scope:microsoft-365", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "source:microsoft-365",
        "mitre_platform:saas", "security:attack", "tactic:TA0005-defense-evasion",
        "scope:microsoft-365", "mitre_platform:office-suite", "technique:T1564-hide-artifacts"],
        "version": 87, "id": "def-000-48i", "updatedAt": 1736369651834, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Exchange junk email settings
        modified by a suspicious VPN", "createdAt": 1718263067300, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:microsoft-365 @evt.name:Set-MailboxJunkEmailConfiguration
        @threat_intel.results.additional_data.tunnels.type:VPN @threat_intel.results.additional_data.tunnels.operator:*
        @threat_intel.results.intention:(suspicious OR malicious)", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "junk_email_configuration_via_suspicious_vpn"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "junk_email_configuration_via_suspicious_vpn > 0"}], "message":
        "## Goal\nDetect when the Exchange junk email settings have been modified
        by a suspicious VPN.\n\n## Strategy\nMonitor Microsoft 365 Exchange audit
        logs to look for the operation `Set-MailboxJunkEmailConfiguration`. Attackers
        who have gained unauthorized access to a victim''s account may modify junk
        email settings to redirect incoming emails. This technique could be used by
        an attacker to avoid detections focussing on email inbox rules.\n\n## Triage
        and response\n1. Identify any additional unusual behaviors:\n    * Previous
        failed logins.\n    * Unexpected VPN usage.\n    * Unusual user agent.\n2.
        Contact the user `{{@usr.email}}` to determine if they made the change to
        the junk email configuration.\n3. If `{{@usr.email}}` is not aware of the
        activity:\n    * Investigate other activities performed by the user `{{@usr.email}}`
        using the **Cloud SIEM - User Investigation** dashboard.\n    * Begin your
        organization''s incident response process and investigate.", "tags": ["source:microsoft-365",
        "mitre_platform:saas", "technique:T1564-hide-artifacts", "mitre_platform:office-suite",
        "scope:microsoft-365", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:microsoft-365",
        "mitre_platform:saas", "security:attack", "tactic:TA0005-defense-evasion",
        "scope:microsoft-365", "mitre_platform:office-suite", "technique:T1564-hide-artifacts"],
        "version": 86, "id": "def-000-zhz", "updatedAt": 1736369652014, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Exchange transport rule
        set up to automatically forward email", "createdAt": 1684308503454, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:microsoft-365
        @evt.name:(New-TransportRule OR Set-TransportRule) (@Parameters.BlindCopyTo:*
        OR @Parameters.RedirectMessageTo:*) @threat_intel.results.category:tor", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "exchange_transport_rule_tor"}, {"query": "source:microsoft-365
        @evt.name:(New-TransportRule OR Set-TransportRule) (@Parameters.BlindCopyTo:*
        OR @Parameters.RedirectMessageTo:*) @threat_intel.results.category:*", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "exchange_transport_rule_enriched"}, {"query": "source:microsoft-365
        @evt.name:(New-TransportRule OR Set-TransportRule) (@Parameters.BlindCopyTo:*
        OR @Parameters.RedirectMessageTo:*)", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "exchange_transport_rule"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "via Tor client", "status":
        "high", "notifications": [], "condition": "exchange_transport_rule_tor > 0"},
        {"name": "via threat related IP", "status": "medium", "notifications": [],
        "condition": "exchange_transport_rule_enriched > 0"}, {"name": "audit", "status":
        "info", "notifications": [], "condition": "exchange_transport_rule > 0"}],
        "message": "## Goal\nDetect when a user adds or modifies an Exchange transport
        rule to automatically forward emails.\n\n## Strategy\nMonitor Microsoft 365
        Exchange audit logs to look for the operations [`New-TransportRule`][1] or
        [`Set-TransportRule`][2], where a value is set for `@Parameters.BlindCopyTo`
        or `@Parameters.RedirectMessageTo`. Attackers often create email forwarding
        rules to collect sensitive information and maintain persistence in the organization.\n\n##
        Triage and response\n1. Inspect the `@Parameters.BlindCopyTo` or `@Parameters.RedirectMessageTo`
        and determine if the rule is sending email to an external non-company owned
        domain. Additional investigation points include the following:\n    * Identify
        the `@AppId` value, to determine if it''s unusual for the user.\n    * Identify
        if there are suspicious keywords used like ''payment'' and ''invoice''.\n2.
        Determine if there is a legitimate use case for the mail forwarding rule by
        contacting the user `{{@usr.email}}`.\n3. If `{{@usr.email}}` is not aware
        of the mail forwarding rule:\n    * Investigate other activities performed
        by the user `{{@usr.email}}` using the Cloud SIEM - User Investigation dashboard.\n    *
        Begin your organization''s incident response process and investigate.\n\n##
        Changelog\n* 17 August 2023 - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://learn.microsoft.com/en-us/powershell/module/exchange/new-transportrule?view=exchange-ps\n[2]:
        https://learn.microsoft.com/en-us/powershell/module/exchange/set-transportrule?view=exchange-ps",
        "tags": ["source:microsoft-365", "tactic:TA0009-collection", "mitre_platform:saas",
        "mitre_platform:office-suite", "scope:microsoft-365", "technique:T1114-email-collection",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "source:microsoft-365", "tactic:TA0009-collection", "security:attack", "technique:T1114-email-collection",
        "scope:microsoft-365", "mitre_platform:office-suite"], "version": 85, "id":
        "def-000-axe", "updatedAt": 1736369652011, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Full Access delegate permissions
        added", "createdAt": 1684308503446, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 @evt.name:Add-MailboxPermission
        @Parameters.AccessRights:FullAccess @threat_intel.results.category:* -@usr.email:\"NT
        AUTHORITY\\\\SYSTEM (Microsoft.Exchange.ServiceHost)\"", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "delegate_permissions_full_access_enriched"}, {"query": "source:microsoft-365
        @evt.name:Add-MailboxPermission @Parameters.AccessRights:FullAccess -@usr.email:\"NT
        AUTHORITY\\\\SYSTEM (Microsoft.Exchange.ServiceHost)\"", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "delegate_permissions_full_access"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "via threat related IP", "status": "medium", "notifications":
        [], "condition": "delegate_permissions_full_access_enriched > 0"}, {"name":
        "audit", "status": "info", "notifications": [], "condition": "delegate_permissions_full_access
        > 0"}], "message": "## Goal\nDetect when a user adds FullAccess permissions.\n\n##
        Strategy\nMonitor Microsoft 365 audit logs to look for the operation [`Add-MailboxPermission`][1].
        FullAccess permission allows the assigned user to read the mailbox and manage
        emails in the user''s mailbox that the permission is assigned to. Full Access
        permission does not grant Send as or Send on behalf permissions. Attackers
        may configure this to allow them to impersonate a user and read messages from
        their mailbox, allowing the attacker to persist in the organization.\n\n##
        Triage and response\n1. Inspect the `@Parameters.User` field to identify which
        user is getting access to the mailbox specified in `@Parameters.Identity`.\n2.
        Determine if there is a legitimate use case for adding FullAccess permissions
        by contacting the user `{{@usr.email}}`.\n3. If `{{@usr.email}}` is not aware
        of the action:\n    * Investigate other activities performed by users at the
        following attributes `@usr.email`, `@Parameters.User`, and `@Parameters.Identity`
        using the Cloud SIEM - User Investigation dashboard.\n    * Begin your organization''s
        incident response process and investigate.\n\n## Changelog\n* 18 December
        2024 - remove duplicate rule query.\n\n[1]: https://learn.microsoft.com/en-us/powershell/module/exchange/add-mailboxpermission?view=exchange-ps",
        "tags": ["source:microsoft-365", "technique:T1098-account-manipulation", "mitre_platform:saas",
        "mitre_platform:office-suite", "scope:microsoft-365", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0003-persistence", "security:attack",
        "source:microsoft-365", "mitre_platform:saas", "technique:T1098-account-manipulation",
        "scope:microsoft-365", "mitre_platform:office-suite", "mitre_platform:cloud"],
        "version": 85, "id": "def-000-tq6", "updatedAt": 1736369652031, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Inbound Connector added
        or modified", "createdAt": 1684396206562, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:microsoft-365 @evt.name:(New-InboundConnector
        OR Set-InboundConnector) @Parameters.SenderIPAddresses:* @threat_intel.results.category:tor",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "inbound_connector_tor"}, {"query": "source:microsoft-365
        @evt.name:(New-InboundConnector OR Set-InboundConnector) @Parameters.SenderIPAddresses:*
        @threat_intel.results.category:*", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "inbound_connector_enriched"},
        {"query": "source:microsoft-365 @evt.name:(New-InboundConnector OR Set-InboundConnector)
        @Parameters.SenderIPAddresses:*", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "inbound_connector"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "via Tor client", "status":
        "high", "notifications": [], "condition": "inbound_connector_tor > 0"}, {"name":
        "via threat related IP", "status": "medium", "notifications": [], "condition":
        "inbound_connector_enriched > 0"}, {"name": "audit", "status": "info", "notifications":
        [], "condition": "inbound_connector > 0"}], "message": "## Goal\nDetect when
        a user adds or modifies a Microsoft 365 Inbound Connector.\n\n## Strategy\nMonitor
        Microsoft 365 Exchange audit logs to look for the operation [`New-InboundConnector`][1]
        or [`Set-InboundConnector`][2]. Connectors are used for enabling mail flow
        between Microsoft 365 and email servers that you have in your on-premise environment.
        Attackers may create a new connector to send spam or phishing emails.\n\n##
        Triage and response\n1. Inspect the `@Parameters.SenderIPAddresses` attribute
        to determine if the IP addresses match known ranges.\n2. Determine if there
        is a legitimate use case for the Inbound Connector by contacting the user
        `{{@usr.email}}`.\n3. If `{{@usr.email}}` is not aware of the Inbound Connector:\n    *
        Investigate other activities performed by the user `{{@usr.email}}` using
        the Cloud SIEM - User Investigation dashboard.\n    * Begin your organization''s
        incident response process and investigate.\n\n## Changelog\n* 17 August 2023
        - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://learn.microsoft.com/en-us/powershell/module/exchange/new-inboundconnector?view=exchange-ps\n[2]:
        https://learn.microsoft.com/en-us/powershell/module/exchange/set-inboundconnector?view=exchange-ps",
        "tags": ["source:microsoft-365", "mitre_platform:saas", "technique:T1562-impair-defenses",
        "mitre_platform:office-suite", "scope:microsoft-365", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "source:microsoft-365",
        "mitre_platform:saas", "security:attack", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "scope:microsoft-365", "mitre_platform:office-suite"],
        "version": 86, "id": "def-000-m3t", "updatedAt": 1736369652138, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 OneDrive anonymous link
        created", "createdAt": 1629705616587, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 service:OneDrive @evt.name:AnonymousLinkCreated",
        "groupByFields": ["@usr.id", "@ObjectId"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a user creates an anonymous link
        for a Microsoft 365 document in OneDrive. This would allow any unauthenticated
        user to access this document, if they had the link.\n\n## Strategy\nThis rule
        monitors the Microsoft 365 logs for the event name `AnonymousLinkCreated`.\n\n##
        Triage and response\nDetermine whether this document should be available anonymously.\n\n##
        Changelog\n4 October 2022 - Updated severity.\n", "tags": ["source:microsoft-365",
        "tactic:TA0009-collection", "scope:onedrive", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "mitre_platform:office-suite", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "mitre_platform:saas", "source:microsoft-365", "tactic:TA0009-collection",
        "security:attack", "mitre_platform:office-suite", "scope:onedrive", "technique:T1213-data-from-information-repositories"],
        "version": 86, "id": "7n1-x5b-ds7", "updatedAt": 1736369652147, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Security and Compliance",
        "createdAt": 1684828827093, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "@Severity:Informational", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@Severity:Low", "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@Severity:Medium", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}, {"query": "@Severity:High", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "third_party", "maxSignalDuration":
        86400, "keepAlive": 1800, "thirdPartyRuleOptions": {"signalTitleTemplate":
        "Microsoft 365 Security and Compliance: {{ @Category }} - {{ @Name }}", "defaultStatus":
        "high", "rootQueries": [{"query": "source:microsoft-365 service:SecurityComplianceCenter
        @evt.name:AlertTriggered @Status:Active", "groupByFields": ["@usr.email"]}],
        "defaultNotifications": []}}, "cases": [{"name": "", "status": "info", "notifications":
        []}, {"name": "", "status": "low", "notifications": []}, {"name": "", "status":
        "medium", "notifications": []}, {"name": "", "status": "high", "notifications":
        []}], "message": "## Goal\nDetect when [Microsoft 365 Security and Compliance][1]
        raises an alert.\n\n## Strategy\nYou can use alert policies and the alert
        dashboard in the [Microsoft Purview compliance portal][2] or the [Microsoft
        365 Defender portal][3] to create alert policies and then view the alerts
        generated when users perform activities that match the conditions of an alert
        policy.\n\nAlert signals include:\n\n* All alerts generated based on Alert
        policies in Security & Compliance Center.\n* Office 365 related alerts generated
        in [Office 365 Cloud App Security][4] and [Microsoft Cloud App Security][5].\n\n##
        Triage and response\n1. Investigate the Microsoft 365 alert to determine if
        it is malicious or benign.\n2. If the finding is deemed malicious, follow
        the [remediation guidance][6] provided by Microsoft and also any internal
        incident response processes.\n\n[1]: https://learn.microsoft.com/en-us/microsoft-365/compliance/alert-policies?view=o365-worldwide\n[2]:
        https://compliance.microsoft.com/compliancealerts\n[3]: https://security.microsoft.com/alerts\n[4]:
        https://learn.microsoft.com/en-us/office365/securitycompliance/office-365-cas-overview\n[5]:
        https://learn.microsoft.com/en-us/cloud-app-security/what-is-cloud-app-security\n[6]:
        https://learn.microsoft.com/en-us/microsoft-365/security/defender/alert-grading-playbooks?view=o365-worldwide",
        "tags": ["source:microsoft-365", "mitre_platform:saas", "mitre_platform:office-suite",
        "scope:microsoft-365", "security:attack"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["scope:microsoft-365", "mitre_platform:office-suite",
        "security:attack", "source:microsoft-365", "mitre_platform:saas"], "version":
        87, "id": "def-000-8mq", "updatedAt": 1736369652634, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "thirdPartyCases": [{"name": "", "status":
        "info", "notifications": [], "query": "@Severity:Informational"}, {"name":
        "", "status": "low", "notifications": [], "query": "@Severity:Low"}, {"name":
        "", "status": "medium", "notifications": [], "query": "@Severity:Medium"},
        {"name": "", "status": "high", "notifications": [], "query": "@Severity:High"}],
        "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Microsoft 365 SendAs permissions added", "createdAt": 1684308504761, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:microsoft-365
        @evt.name:Add-RecipientPermission @Parameters.AccessRights:SendAs @threat_intel.results.category:tor",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "delegate_permissions_sendas_tor"}, {"query":
        "source:microsoft-365 @evt.name:Add-RecipientPermission @Parameters.AccessRights:SendAs
        @threat_intel.results.category:*", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "delegate_permissions_sendas_enriched"},
        {"query": "source:microsoft-365 @evt.name:Add-RecipientPermission @Parameters.AccessRights:SendAs",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "delegate_permissions_sendas"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "via Tor client", "status":
        "high", "notifications": [], "condition": "delegate_permissions_sendas_tor
        > 0"}, {"name": "via threat related IP", "status": "medium", "notifications":
        [], "condition": "delegate_permissions_sendas_enriched > 0"}, {"name": "audit",
        "status": "info", "notifications": [], "condition": "delegate_permissions_sendas
        > 0"}], "message": "## Goal\nDetect when a user adds SendAs permissions.\n\n##
        Strategy\nMonitor Microsoft 365 audit logs to look for the operation [`Add-RecipientPermission`][1].
        SendAs permission allows a user or group members to send messages that appear
        to come from the specified mailbox, mail contact, mail user, or group. Attackers
        may configure this to allow them to impersonate a user and send messages on
        their behalf from their mailbox, allowing the attacker to persist in the organization
        or move laterally by phishing other users.\n\n## Triage and response\n1. Inspect
        the `@Parameters.Trustee` field to determine if the email address is external
        to your organization.\n2. Determine if there is a legitimate use case for
        adding SendAs permissions by contacting the user `{{@usr.email}}`.\n3. If
        `{{@usr.email}}` is not aware of the action:\n    * Investigate other activities
        performed by users at the following attributes `@usr.email`, `@Parameters.Trustee`
        and `@Parameters.Identity` using the Cloud SIEM - User Investigation dashboard.\n    *
        Begin your organization''s incident response process and investigate.\n\n##
        Changelog\n* 17 August 2023 - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://learn.microsoft.com/en-us/powershell/module/exchange/add-recipientpermission?view=exchange-ps",
        "tags": ["source:microsoft-365", "technique:T1098-account-manipulation", "mitre_platform:saas",
        "mitre_platform:office-suite", "scope:microsoft-365", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0003-persistence", "security:attack",
        "source:microsoft-365", "mitre_platform:saas", "technique:T1098-account-manipulation",
        "scope:microsoft-365", "mitre_platform:office-suite", "mitre_platform:cloud"],
        "version": 87, "id": "def-000-jgy", "updatedAt": 1736369652612, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 SharePoint object shared
        with guest", "createdAt": 1629705617194, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 service:SharePoint @evt.name:(SharingInvitationCreated)
        @TargetUserOrGroupType:Guest", "groupByFields": ["@TargetUserOrGroupName",
        "@ObjectId"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "low", "notifications": [], "condition": "a > 0"}], "message":
        "## Goal\nDetect when a user shares a Microsoft 365 Sharepoint document with
        a guest.\n\n## Strategy\nThis rule monitors the Microsoft 365 logs for the
        event name `SharingInvitationCreated` when the `TargetUserOrGroupType` is
        `Guest`.\n\n## Triage and response\nDetermine whether this document should
        be shared with the external user.\n", "tags": ["source:microsoft-365", "tactic:TA0009-collection",
        "technique:T1213-data-from-information-repositories", "mitre_platform:saas",
        "scope:sharepoint", "mitre_platform:office-suite", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "mitre_platform:saas", "source:microsoft-365", "tactic:TA0009-collection",
        "security:attack", "mitre_platform:office-suite", "technique:T1213-data-from-information-repositories",
        "scope:sharepoint"], "version": 87, "id": "gh5-qhe-h9m", "updatedAt": 1736369652621,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 Teams app installed",
        "createdAt": 1629705619222, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries":
        [{"query": "source:microsoft-365 service:MicrosoftTeams @evt.name:AppInstalled",
        "groupByFields": ["@AddOnName"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 0"}], "message": "# WARNING: This rule is being deprecated on 15 July
        2024.\n\n## Goal\nDetect when a user installs an app to Microsoft 365 Teams.\n\n##
        Strategy\nThis rule monitors the Microsoft 365 logs for the event name `AppInstalled`.\n\n##
        Triage and response\nDetermine whether this app should be installed to Microsoft
        365 teams.\n", "tags": ["source:microsoft-365", "scope:microsoft-teams", "technique:T1136-create-account",
        "mitre_platform:saas", "mitre_platform:office-suite", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "tactic:TA0003-persistence",
        "source:microsoft-365", "mitre_platform:saas", "security:attack", "scope:microsoft-teams",
        "technique:T1136-create-account", "mitre_platform:office-suite"], "version":
        4, "id": "8dl-66d-taa", "updatedAt": 1734519084112, "blocking": false, "deprecationDate":
        1721001600000, "metadata": {"entities": null, "sources": null}, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "", "name": ""}}, {"name":
        "Microsoft 365 Unified Audit Logging Disabled", "createdAt": 1630681562754,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:microsoft-365
        @evt.name:Set-AdminAuditLogConfig @Parameters.UnifiedAuditLogIngestionEnabled:False",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "unified_audit_disabled"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "unified_audit_disabled > 0"}], "message": "## Goal\nDetect
        when unified audit logging is disabled. An adversary or insider threat can
        disable audit logging as a means of defense evasion.\n\n## Strategy\nMonitor
        Microsoft 365 audit logs to look for events with an `@evt.name` value of `Set-AdminAuditLogConfig`,
        where `@Parameters.UnifiedAuditLogIngestionEnabled` is set to `False`.\n\n##
        Triage and response\n1. Determine if the user `{{@usr.email}}` intended to
        disable audit logging.\n2. If `{{@usr.email}}` is not responsible for disabling
        the audit logging, investigate `{{@usr.email}}` for anomalous activity. If
        necessary, initiate your company''s incident response (IR) process.\n\n##
        Changelog\n* 6 January 2023 - Updated rule name and case.", "tags": ["source:microsoft-365",
        "mitre_platform:saas", "technique:T1562-impair-defenses", "mitre_platform:office-suite",
        "scope:microsoft-365", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:microsoft-365",
        "mitre_platform:saas", "security:attack", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "scope:microsoft-365", "mitre_platform:office-suite"],
        "version": 87, "id": "1bw-akj-fk6", "updatedAt": 1736369653308, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 eDiscovery content search
        started", "createdAt": 1684396206584, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 @evt.name:(SearchStarted OR New-ComplianceSearch)",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "content_search"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "content_search > 0"}], "message": "## Goal\nDetect when a new content search
        has been created.\n\n## Strategy\nMonitor Microsoft 365 audit logs to look
        for the operations `SearchStarted` or `New-ComplianceSearch`. The Content
        Search eDiscovery feature in the Microsoft 365 Compliance portal allows users
        to search for email, documents, and instant messaging conversations in collaboration
        tools such as Microsoft Teams and Microsoft 365 Groups.\n\n## Triage and response\n1.
        Inspect the `@Query` field to determine if the search criteria warrants further
        investigation.\n2. Determine if there is a legitimate use case for the content
        search by contacting the user `{{@usr.email}}`.\n3. If `{{@usr.email}}` is
        not aware of the content search:\n    * Investigate other activities performed
        by the user `{{@usr.email}}` using the Cloud SIEM - User Investigation dashboard.\n    *
        Begin your organization''s incident response process and investigate.", "tags":
        ["source:microsoft-365", "tactic:TA0009-collection", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "mitre_platform:office-suite", "scope:microsoft-365",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "source:microsoft-365", "tactic:TA0009-collection", "security:attack", "scope:microsoft-365",
        "mitre_platform:office-suite", "technique:T1213-data-from-information-repositories"],
        "version": 88, "id": "def-000-xvd", "updatedAt": 1736369653568, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 eDiscovery search export
        downloaded", "createdAt": 1684396206506, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 @evt.name:SearchExportDownloaded",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "content_search"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "content_search > 0"}], "message": "## Goal\nDetect when a user downloaded
        the results of a content search to their local computer.\n\n## Strategy\nMonitor
        Microsoft 365 audit logs to look for the operation `SearchExportDownloaded`.
        The Content Search eDiscovery feature in the Microsoft 365 Compliance portal
        allows users to search for email, documents, and instant messaging conversations
        in collaboration tools such as Microsoft Teams and Microsoft 365 Groups.\n\n##
        Triage and response\n1. Inspect the `@Query` field to determine if the search
        criteria warrants further investigation.\n2. Determine if there is a legitimate
        use case for the export of the content search results by contacting the user
        `{{@usr.email}}`.\n3. If `{{@usr.email}}` is not aware of the download:\n    *
        Investigate other activities performed by the user `{{@usr.email}}` using
        the Cloud SIEM - User Investigation dashboard.\n    * Begin your organization''s
        incident response process and investigate.", "tags": ["source:microsoft-365",
        "tactic:TA0009-collection", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "mitre_platform:office-suite", "scope:microsoft-365",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "source:microsoft-365", "tactic:TA0009-collection", "security:attack", "scope:microsoft-365",
        "mitre_platform:office-suite", "technique:T1213-data-from-information-repositories"],
        "version": 88, "id": "def-000-7v2", "updatedAt": 1736369653819, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft 365 mailbox audit logging
        bypass", "createdAt": 1684742216102, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:microsoft-365 @evt.name:Set-MailboxAuditBypassAssociation
        @threat_intel.results.category:tor", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "mailbox_auditlog_bypass_tor"},
        {"query": "source:microsoft-365 @evt.name:Set-MailboxAuditBypassAssociation
        @threat_intel.results.category:*", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "mailbox_auditlog_bypass_enriched"},
        {"query": "source:microsoft-365 @evt.name:Set-MailboxAuditBypassAssociation",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "mailbox_auditlog_bypass"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "via Tor client", "status":
        "high", "notifications": [], "condition": "mailbox_auditlog_bypass_tor > 0"},
        {"name": "via threat related IP", "status": "medium", "notifications": [],
        "condition": "mailbox_auditlog_bypass_enriched > 0"}, {"name": "audit", "status":
        "info", "notifications": [], "condition": "mailbox_auditlog_bypass > 0"}],
        "message": "## Goal\nDetect when a user configures a mailbox audit logging
        bypass.\n\n## Strategy\nMonitor Microsoft 365 Exchange audit logs to look
        for the operation [`Set-MailboxAuditBypassAssociation`][1]. When this operation
        is configured, no activity is logged, such as a user or account accessing
        or taking other actions in a mailbox. Attackers may configure this setting
        to evade existing defenses.\n\n## Triage and response\n1. Inspect the `@Parameters.Identity`
        attribute to determine which user or account will bypass mailbox audit logging.\n2.
        Determine if there is a legitimate use case for the mailbox audit bypass by
        contacting the user `{{@usr.email}}`.\n3. If `{{@usr.email}}` is not aware
        of the mailbox audit bypass:\n    * Investigate other activities performed
        by the user `{{@usr.email}}` and `@Parameters.Identity` using the Cloud SIEM
        - User Investigation dashboard.\n    * Begin your organization''s incident
        response process and investigate.\n\n## Changelog\n* 17 August 2023 - Updated
        query to replace attribute `@threat_intel.results.subcategory:tor` with `@threat_intel.results.category:tor`.\n\n[1]:
        https://learn.microsoft.com/en-us/powershell/module/exchange/set-mailboxauditbypassassociation?view=exchange-ps",
        "tags": ["source:microsoft-365", "mitre_platform:saas", "technique:T1562-impair-defenses",
        "mitre_platform:office-suite", "scope:microsoft-365", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "source:microsoft-365",
        "mitre_platform:saas", "security:attack", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "scope:microsoft-365", "mitre_platform:office-suite"],
        "version": 87, "id": "def-000-uf9", "updatedAt": 1736369653782, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Microsoft Defender for Cloud", "createdAt":
        1693469272641, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "@evt.severity:Informational", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "@evt.severity:Low", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "none", "name": ""}, {"query": "@evt.severity:Medium",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@evt.severity:High", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod":
        "third_party", "maxSignalDuration": 86400, "keepAlive": 1800, "thirdPartyRuleOptions":
        {"signalTitleTemplate": "Microsoft Defender for Cloud: {{ @evt.name }}", "defaultStatus":
        "low", "rootQueries": [{"query": "source:microsoft-defender-for-cloud service:SecurityAlerts",
        "groupByFields": ["@CompromisedEntity", "@evt.name"]}, {"query": "source:microsoft-defender-for-cloud
        service:SecurityAlerts", "groupByFields": []}], "defaultNotifications": []}},
        "cases": [{"name": "", "status": "info", "notifications": []}, {"name": "",
        "status": "low", "notifications": []}, {"name": "", "status": "medium", "notifications":
        []}, {"name": "", "status": "high", "notifications": []}], "message": "##
        Goal\nDetect when [Microsoft Defender for Cloud][1] raises an alert.\n\n##
        Strategy\nDefender for Cloud collects, analyzes, and integrates log data from
        your Azure, hybrid, and multicloud resources, the network, and connected partner
        solutions, such as firewalls and endpoint agents. Defender for Cloud uses
        the log data to detect real threats and reduce false positives. A list of
        prioritized security alerts is shown in Defender for Cloud, along with the
        information you need to quickly investigate the problem and take steps to
        remediate an attack.\n\nMicrosoft provides an [alert reference guide][2] for
        understanding each type of alert generated.\n\n## Triage and response\n1.
        Investigate the Microsoft Defender for Cloud alert to determine if it is malicious
        or benign.\n2. If the finding is deemed malicious, follow the [remediation
        guidance][3] provided by Microsoft and also any internal incident response
        processes.\n3. A [suppression rule][4] can be created to manage noisy or false
        positive alerts.\n\n[1]: https://learn.microsoft.com/en-us/azure/defender-for-cloud/defender-for-cloud-introduction\n[2]:
        https://learn.microsoft.com/en-us/azure/defender-for-cloud/alerts-reference\n[3]:
        https://learn.microsoft.com/en-us/azure/defender-for-cloud/managing-and-responding-alerts\n[4]:
        https://learn.microsoft.com/en-us/azure/defender-for-cloud/alerts-suppression-rules",
        "tags": ["source:microsoft-defender-for-cloud", "scope:microsoft-defender-for-cloud",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["source:microsoft-defender-for-cloud", "security:attack",
        "scope:microsoft-defender-for-cloud"], "version": 86, "id": "def-000-m9m",
        "updatedAt": 1736369653799, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "thirdPartyCases": [{"name": "", "status": "info", "notifications":
        [], "query": "@evt.severity:Informational"}, {"name": "", "status": "low",
        "notifications": [], "query": "@evt.severity:Low"}, {"name": "", "status":
        "medium", "notifications": [], "query": "@evt.severity:Medium"}, {"name":
        "", "status": "high", "notifications": [], "query": "@evt.severity:High"}],
        "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Microsoft Intune Enterprise MDM disabled for Slack", "createdAt": 1705996361391,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:slack
        service:audit-logs-service @evt.name:intune_disabled", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "slack_intune_disabled"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 21600}, "cases": [{"name":
        "", "status": "low", "notifications": [], "condition": "slack_intune_disabled
        > 0"}], "message": "## Goal\nDetect when [Microsoft Intune Enterprise MDM][1]
        has been disabled for Slack.\n\n## Strategy\nThis rule monitors Slack audit
        logs for when Microsoft Intune Enterprise MDM has been disabled. With Microsoft
        Intune mobile app management without enrollment, organizations can add Slack
        to a set of trusted apps to ensure that sensitive business data stays secure
        on unmanaged personal devices. An attacker may try to disable this to degrade
        an organization''s defenses.\n\n## Triage and response\n1. Determine if the
        change taken by `{{@usr.email}}` is authorized.\n2. If the change was not
        authorized or was unexpected, begin your organization''s incident response
        process and investigate.\n\n[1]: https://slack.com/intl/en-gb/help/articles/6495319642387-Set-up-Slack-for-Intune-mobile-apps",
        "tags": ["mitre_platform:saas", "technique:T1562-impair-defenses", "source:slack",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:attack", "tactic:TA0005-defense-evasion",
        "source:slack", "technique:T1562-impair-defenses", "mitre_platform:saas"],
        "version": 87, "id": "def-000-0k2", "updatedAt": 1736369653978, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Mimecast Alert: email contains malicious
        file", "createdAt": 1726041151705, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:mimecast service:ttp-attachment-protection @result:malicious
        @route:outbound", "groupByFields": ["@senderAddress"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "a > 1"}], "message": "## Goal\nDetect an email which contains
        a malicious attachment.\n\n## Strategy\nTargeted Threat Protection - Attachment
        Protection is an advanced service that protects customers from the growing
        risk of spear phishing and other targeted attacks using email attachments.\nThis
        rule can be used to detect and strip attachments from inbound messages that
        could potentially contain malicious code. For example, PDFs and Microsoft
        Office files.\n\nFor more details: [Click here](https://community.mimecast.com/s/article/email-security-cloud-gateway-targeted-threat-protection-attachment-protection-overview)\n\n##
        Triage and response\n1. Inspect the email for sender information `{{@senderAddress}}`
        and review the action taken by Mimecast `{{@actionTriggered}}`.\n2. If the
        attachment was not blocked or removed, quarantine the email and conduct a
        thorough analysis of the attachment.\n3. Execute the company''s incident response
        protocol, which may include:\n      -  Notifying the intended recipient and
        warning against opening the attachment.\n      -  Scanning affected systems
        for malware.\n      -  Updating security filters to detect and block similar
        threats in the future.\n\n", "tags": ["technique:T1566-phishing", "source:mimecast",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1566-phishing", "security:attack", "source:mimecast", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-3di", "updatedAt":
        1736369654312, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Mimecast Alert: malicious URL clicked by user", "createdAt": 1726041157844,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "@action:allow
        ", "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@action:warn ", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod":
        "third_party", "maxSignalDuration": 86400, "keepAlive": 3600, "thirdPartyRuleOptions":
        {"signalTitleTemplate": "Mimecast Alert - Malicious URL Clicked by User sent
        by {{@fromUserEmailAddress}}", "defaultStatus": "low", "rootQueries": [{"query":
        "source:mimecast service:ttp-url @scanResult:malicious ", "groupByFields":
        ["@fromUserEmailAddress"]}], "defaultNotifications": []}}, "cases": [{"name":
        "", "status": "high", "notifications": []}, {"name": "", "status": "medium",
        "notifications": []}], "message": "## Goal\nTo detect and alert when an email
        contains a malicious URL, potentially indicating a phishing attempt or other
        security threat.\n\n## Strategy\nThis rule identifies emails transiting through
        the organization''s email gateway that contain URLs classified as malicious
        under a ttp definition `{{@ttpDefinition}}`. These URLs may be part of phishing
        campaigns, malware distribution, or other malicious activities.\n\n## Triage
        and response\n1. Investigate the email source and content, focusing on the
        sender''s IP address: `{{@senderIPAddress}}`.\n2. Check the URL against known
        threat databases and analyse the email for other indicators of compromise.\n3.
        Follow the organization''s incident response protocol, which may include:\n   -
        Isolating the email to prevent further spread.\n   - Notifying affected users
        and guiding them on how to proceed.\n   - Updating security filters to catch
        similar future attempts.", "tags": ["technique:T1566-phishing", "source:mimecast",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1566-phishing", "security:attack", "source:mimecast", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-s5o", "updatedAt":
        1736369654318, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "thirdPartyCases": [{"name": "", "status": "high", "notifications":
        [], "query": "@action:allow "}, {"name": "", "status": "medium", "notifications":
        [], "query": "@action:warn "}], "updateAuthorId": 1615666, "creator": {"handle":
        "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name":
        "Michael Richey"}}, {"name": "Mimecast Alert: phishing email detected", "createdAt":
        1726041151363, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:mimecast service:ttp-impersonation @taggedExternal:true @taggedMalicious:true
        @definition:*Phishing* ", "groupByFields": ["@senderAddress"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "a > 1"}], "message": "## Goal\nDetect when Mimecast identifies
        a phishing email.\n\n## Strategy\nTargeted Threat Protection - Impersonation
        Protect tackles the increasing threat of socially engineered \"whaling\" attacks.\nThis
        rule can used to detect an email which contains impersonation attempts that
        have been flagged as external and malicious with definition as phishing.\n\nFor
        more details: [Click here](https://community.mimecast.com/s/article/email-security-cloud-gateway-targeted-threat-protection-impersonation-protect)\n\n##
        Triage and response\n1. Investigate the suspected phishing email, including
        sender information, email content, and any attachments.\n2. Verify whether
        sensitive information has been compromised and assess the impact.\n3. Apply
        appropriate remediation steps according to the company''s incident response
        policy, which may include:\n   - Marking the email as phishing and reporting
        it to your security team.\n   - Investgate sender: {{@senderAddress}} or blocking
        the sender''s email address.\n   - Notifying potentially affected users and
        providing guidance on next steps.\n   - Updating email filters and security
        measures to prevent similar attacks.\n", "tags": ["technique:T1566-phishing",
        "source:mimecast", "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1566-phishing", "security:attack", "source:mimecast", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-wt2", "updatedAt":
        1736369654335, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Mimecast Alert: user responded to impersonation message", "createdAt": 1726041151441,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:mimecast
        service:ttp-impersonation @taggedExternal:true @taggedMalicious:true @action:none
        -@definition:*Phishing* ", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "## Goal\nTo identify and alert on emails that contain user
        responses to impersonation messages, indicating a successful impersonation
        attempt.\n\n## Strategy\nThis rule detects an email which contains impersonation
        attempts that have been flagged as external and malicious but have not been
        blocked or taken any action upon.\n\n## Triage and response\n1. Verify the
        nature of the user''s response to the impersonation email and assess the potential
        impact.\n2. Examine the sender''s details using `{{@senderIPAddress}}` to
        determine the source and legitimacy.\n3. Execute the company''s incident response
        protocol, which may include:\n      -  Alerting the affected user and providing
        education on recognizing impersonation attempts.\n      -  Revoking any credentials
        or access provided in response to the phishing email.\n      -  Strengthening
        email security measures to prevent similar incidents.", "tags": ["technique:T1566-phishing",
        "source:mimecast", "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1566-phishing", "security:attack", "source:mimecast", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-ovb", "updatedAt":
        1736369655034, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Multiple Cisco Duo push notifications denied", "createdAt": 1732181534297,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cisco-duo
        service:authentication @factor:duo_push @evt.outcome:(denied OR fraud)", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "deny_push_cisco_duo_classic"}, {"query": "source:cisco-duo
        service:authentication @factor:verified_duo_push @evt.outcome:(denied OR fraud)",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "deny_push_cisco_duo_verified"}, {"query":
        "source:cisco-duo service:authentication @rbfs_triggered_attacks.detector:PUSH_HARASSMENT
        @evt.outcome:denied", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "detection_push_harassment"},
        {"query": "source:cisco-duo service:authentication @evt.outcome:success",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "successful_login"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        300}, "cases": [{"name": "successful login after 5 denies", "status": "medium",
        "notifications": [], "condition": "(deny_push_cisco_duo_classic > 5 || deny_push_cisco_duo_verified
        > 5 || detection_push_harassment > 2) THEN successful_login > 0"}], "message":
        "## Goal\n\nDetect Cisco Duo Multi-factor Authentication (MFA) fatigue attacks.\n\n##
        Strategy\n\nAn attacker may repeatedly send MFA push notifications to users
        in an attempt to fatigue them, thereby coercing them into approving malicious
        authentication attempts.\n\n## Triage and response\n\n1. Verify if the user:
        `{{@usr.email}}` made the observed authentication attempts.\n2. If the user
        did not make the observed authentication attempts:\n   - Rotate user credentials.\n   -
        Confirm that no successful authentication attempts have been made.\n   - Investigate
        the source IP: `{{@network.client.ip}}` to determine if the IP address has
        taken other actions.\n", "tags": ["tactic:TA0006-credential-access", "technique:T1621-multi-factor-authentication-request-generation",
        "source:cisco-duo", "mitre_platform:identity-provider", "tactic:TA0001-initial-access",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["technique:T1621-multi-factor-authentication-request-generation",
        "mitre_platform:cloud", "mitre_platform:identity-provider", "source:cisco-duo",
        "security:attack", "tactic:TA0001-initial-access", "tactic:TA0006-credential-access"],
        "version": 22, "id": "def-002-85v", "updatedAt": 1736369655608, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Multiple Jumpcloud push notifications
        denied", "createdAt": 1732181596234, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:jumpcloud @evt.name:user_login_attempt @evt.outcome:false
        @mfa:true (@mfa_meta.type:jumpcloud_protect OR @mfa_meta.type:duo)", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "jumpcloud_deny_push"}, {"query": "source:jumpcloud @evt.name:user_login_attempt
        @evt.outcome:true", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "jumpcloud_successful_activity"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 300}, "cases": [{"name": "successful activity after more
        than 3 denies", "status": "medium", "notifications": [], "condition": "jumpcloud_deny_push
        > 3 THEN jumpcloud_successful_activity > 0"}], "message": "## Goal\n\nDetect
        Jumpcloud Multi-factor Authentication (MFA) fatigue attacks.\n\n## Strategy\n\nAn
        attacker may repeatedly send MFA push notifications to users in an attempt
        to fatigue them, thereby coercing them into approving malicious authentication
        attempts.\n\n## Triage and response\n\n1. Verify if the user: `{{@usr.email}}`
        made the observed authentication attempts.\n2. If the user did not make the
        observed authentication attempts:\n   - Rotate user credentials.\n   - Confirm
        that no successful authentication attempts have been made.\n   - Investigate
        the source IP: `{{@network.client.ip}}` to determine if the IP address has
        taken other actions.\n", "tags": ["source:jumpcloud", "tactic:TA0006-credential-access",
        "technique:T1621-multi-factor-authentication-request-generation", "mitre_platform:identity-provider",
        "tactic:TA0001-initial-access", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1621-multi-factor-authentication-request-generation", "mitre_platform:cloud",
        "mitre_platform:identity-provider", "security:attack", "tactic:TA0001-initial-access",
        "tactic:TA0006-credential-access", "source:jumpcloud"], "version": 20, "id":
        "def-001-859", "updatedAt": 1736369655612, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Multiple Microsoft Teams deleted", "createdAt":
        1695944002185, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:microsoft-365 service:MicrosoftTeams @evt.name:TeamDeleted @UserType:0",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@TeamName"], "aggregation": "cardinality", "name": "teams_deleted_by_regular_user"},
        {"query": "source:microsoft-365 service:MicrosoftTeams @evt.name:TeamDeleted
        @UserType:2", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@TeamName"], "aggregation": "cardinality", "name":
        "teams_deleted_by_admin_user"}, {"query": "source:microsoft-365 service:MicrosoftTeams
        @evt.name:TeamDeleted @UserType:6", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@TeamName"], "aggregation": "cardinality", "name":
        "teams_deleted_by_service_principal"}, {"query": "source:microsoft-365 service:MicrosoftTeams
        @evt.name:TeamDeleted @UserType:10", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@TeamName"], "aggregation": "cardinality", "name":
        "teams_deleted_by_guest_or_anonymous_user"}, {"query": "source:microsoft-365
        service:MicrosoftTeams @evt.name:TeamDeleted @Members.UPN:*#EXT#*", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": ["@TeamName"],
        "aggregation": "cardinality", "name": "teams_deleted_by_external_user"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "by guest or anonymous user",
        "status": "high", "notifications": [], "condition": "teams_deleted_by_guest_or_anonymous_user
        > 1 || teams_deleted_by_external_user > 1"}, {"name": "by regular user without
        admin permissions", "status": "medium", "notifications": [], "condition":
        "teams_deleted_by_regular_user > 1"}, {"name": "by external user", "status":
        "medium", "notifications": [], "condition": "teams_deleted_by_external_user
        > 1"}, {"name": "by service principal", "status": "medium", "notifications":
        [], "condition": "teams_deleted_by_service_principal > 1"}, {"name": "by admin
        user", "status": "info", "notifications": [], "condition": "teams_deleted_by_admin_user
        > 1"}], "message": "## Goal\nDetect when multiple Microsoft Teams are deleted.
        Threat actors may want to cause disruptions in work and jeopardize relevant
        conversation data by deleting multiple teams.\n\n## Strategy\nMonitor Microsoft
        Teams audit logs to look for events with an `@evt.name` value of `TeamDeleted`
        that are using the `UserType` value to align various levels of severity for
        different user types such as admin users, service principals, guest or anonymous
        user and so on. This activity typically should be done by an internal Admin,
        however, if it\u2019s observed from an external user this might indicate a
        higher fidelity of malicious activity.\n\nAccording to [Microsoft][1], the
        following values indicate the user types surfaced within this detection:\n\n-
        `0` - A regular user without admin permissions.\n- `2` - An administrator
        in your M365 organization.\n- `6` - A service principal.\n- `10` - A guest
        or anonymous user.\n\n## Triage and response\n1. Determine if the user `{{@usr.email}}`
        with `{{@UserType}}` intended to delete the following Teams `{{@TeamName}}`.\n2.
        If `{{@usr.email}}` didn''t intend to delete the observed Teams\n    * Investigate
        other activities performed by the user `{{@usr.email}}` using the Cloud SIEM
        - User Investigation dashboard.\n    * Begin your organization''s incident
        response process and investigate.\n\n[1]: https://learn.microsoft.com/en-us/purview/audit-log-detailed-properties#usertype-and-userkey-scenarios\n",
        "tags": ["source:microsoft-365", "scope:microsoft-teams", "tactic:TA0040-impact",
        "technique:T1531-account-access-removal", "mitre_platform:saas", "mitre_platform:office-suite",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1531-account-access-removal",
        "source:microsoft-365", "mitre_platform:saas", "security:attack", "scope:microsoft-teams",
        "mitre_platform:office-suite", "tactic:TA0040-impact"], "version": 87, "id":
        "def-000-2ru", "updatedAt": 1736369656207, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Multiple Okta push notifications denied",
        "createdAt": 1663772044452, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:okta @evt.name:user.mfa.okta_verify.deny_push", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "deny_push_okta_classic"}, {"query": "source:okta @evt.name:user.authentication.auth_via_mfa
        @evt.outcome:FAILURE @outcome.reason:INVALID_CREDENTIALS  @debugContext.debugData.factor:OKTA_VERIFY_PUSH",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "deny_push_okta_identity_engine"}, {"query":
        "source:okta @evt.name:(user.authentication.sso OR user.session.start) @evt.outcome:SUCCESS",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "session_start"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        300}, "cases": [{"name": "successful login after 5 denies", "status": "critical",
        "notifications": [], "condition": "(deny_push_okta_classic > 5 || deny_push_okta_identity_engine
        > 5) && session_start > 0"}, {"name": "over 5 denied", "status": "high", "notifications":
        [], "condition": "deny_push_okta_classic > 5 || deny_push_okta_identity_engine
        > 5"}, {"name": "over 3 denied", "status": "medium", "notifications": [],
        "condition": "deny_push_okta_classic > 3 || deny_push_okta_identity_engine
        > 3"}], "message": "## Goal\nDetect Okta Multi-factor Authentication (MFA)
        fatigue attacks.\n\n## Strategy\nThis rule lets you monitor the following
        Okta events to determine when a user has rejected Okta MFA push verify more
        than once:\n- `user.mfa.okta_verify.deny_push` for Okta Classic\n- `user.authentication.auth_via_mfa`
        with `debugContext.debugData.factor` of `OKTA_VERIFY_PUSH` and `@evt.outcome`
        of `FAILURE` for Okta Identity Engine\n\nAn attacker may attempt to bombard
        users with repeated MFA push notifications in order to fatigue them, thereby
        forcing them into verifying their malicious authentication attempts.\n\n##
        Triage and response\n1. Verify if the user: `{{@usr.email}}` made the observed
        authentication attempts.\n2. If the user did not make the observed authentication
        attempts:\n    * Rotate user credentials\n    * Confirm that no successful
        authentication attempts have been made.\n    * Investigate the source IP:
        `{{@network.client.ip}}` using the Cloud SIEM - IP Investigation dashboard
        to determine if the IP address has taken other actions.\n\n## Changelog\n*
        12 September 2023 - Updated query to add distinction between Okta Classic
        and Okta Identity Engine.\n\n", "tags": ["source:okta", "tactic:TA0006-credential-access",
        "technique:T1621-multi-factor-authentication-request-generation", "mitre_platform:identity-provider",
        "tactic:TA0001-initial-access", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1621-multi-factor-authentication-request-generation", "mitre_platform:cloud",
        "mitre_platform:identity-provider", "security:attack", "source:okta", "tactic:TA0001-initial-access",
        "tactic:TA0006-credential-access"], "version": 88, "id": "s52-gxw-z6t", "updatedAt":
        1736369656208, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Multiple failed login attempts", "createdAt": 1715872907596, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:windows.events
        @evt.id:4625", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "failed_logins"},
        {"query": "source:windows.events @evt.id:4625 @threat_intel.indicators_matched:IP
        -@threat_intel.results.intention:benign", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "failed_logins_with_malicious_ip"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "failed_logins_with_malicious_ip", "status": "medium",
        "notifications": [], "condition": "failed_logins_with_malicious_ip > 25"},
        {"name": "failed_logins", "status": "info", "notifications": [], "condition":
        "failed_logins > 25"}], "message": "## Goal\nDetects when multiple failed
        logins are seen from the same IP address, indicating a potential brute force
        attack is occurring.\n\n## Strategy\nMonitoring of Windows event logs where
        `@evt.id` is `4625` and grouping by `@network.client.ip`.\n\n## Triage & Response\nVerify
        if `{{@network.client.ip}}` is expected to be attempting to access the network.
        It is possible for this detection to be triggered by services and applications
        attempting to authenticate with recently expired credentials.", "tags": ["scope:windows",
        "mitre_platform:windows", "tactic:TA0006-credential-access", "source:windows",
        "technique:T1110-brute-force", "security:attack"], "hasExtendedTitle": true,
        "type": "log_detection", "filters": [], "defaultTags": ["source:windows",
        "security:attack", "technique:T1110-brute-force", "mitre_platform:windows",
        "tactic:TA0006-credential-access", "scope:windows"], "version": 87, "id":
        "def-000-tvg", "updatedAt": 1736369656222, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}], "meta": {"page": {"total_count": 560, "total_filtered_count":
        100}}}'
    headers:
      Content-Type:
      - application/json
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Content-Type:
      - application/json
    method: GET
    uri: https://us5.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=4&page%5Bsize%5D=100
  response:
    body:
      string: '{"data": [{"name": "NGINX HTTP requests from security scanner", "createdAt":
        1629705614983, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:nginx @http.useragent:(*burp* OR *burpcollaborator.net* OR *qualys*
        OR *nexpose* OR *OpenVAS* OR *Nikto* OR *Meterpreter* OR *IceWeasel* OR *DirB*
        OR *Comodo* OR *Tripwire* OR *Retina* OR *MBSA* OR *ImmuniWeb* OR *Netsparker*
        OR *Acunetix* OR *Intruder* OR *nmap* OR *CVE* OR *base64* OR *eval* OR *javascript*
        OR *alert*)", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when a web application
        is being scanned. This will identify attacker IP addresses who are not trying
        to hide their attempt to attack your system. More advanced hackers will use
        an inconspicuous user agent. \n\n## Strategy\nInspect the user agent in the
        HTTP headers to determine if an IP is scanning your application and generate
        an `INFO` signal. \n\n## Triage and response\n1. Determine if this IP is making
        authenticated requests to the application.\n2. If the IP is making authenticated
        requests to the application:\n    * Investigate the HTTP logs and determine
        if the user is attacking your application.\n\nThe HTTP headers in the query
        are from [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]:
        https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n", "tags":
        ["technique:T1190-exploit-public-facing-application", "source:nginx", "mitre_platform:network",
        "scope:nginx", "security:attack", "tactic:TA0001-initial-access"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:network",
        "technique:T1190-exploit-public-facing-application", "tactic:TA0001-initial-access",
        "security:attack", "scope:nginx", "source:nginx"], "version": 87, "id": "25c-d30-507",
        "updatedAt": 1736369656385, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "NGINX ingress controller HTTP requests from security
        scanner", "createdAt": 1629705616820, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:nginx-ingress-controller @http.useragent:(*burp*
        OR *burpcollaborator.net* OR *qualys* OR *nexpose* OR *OpenVAS* OR *Nikto*
        OR *Meterpreter* OR *IceWeasel* OR *DirB* OR *Comodo* OR *Tripwire* OR *Retina*
        OR *MBSA* OR *ImmuniWeb* OR *Netsparker* OR *Acunetix* OR *Intruder* OR *nmap*
        OR *CVE* OR *base64* OR *eval* OR *javascript* OR *alert*)", "groupByFields":
        ["@network.client.ip"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a web application is being scanned.
        This will identify attacker IP addresses who are not trying to hide their
        attempt to attack your system. More advanced hackers will use an inconspicuous
        user agent. \n\n## Strategy\nInspect the user agent in the HTTP headers to
        determine if an IP is scanning your application and generate an `INFO` signal.
        \n\n## Triage and response\n1. Determine if this IP is making authenticated
        requests to the application.\n2. If the IP is making authenticated requests
        to the application:\n    * Investigate the HTTP logs and determine if the
        user is attacking your application.\n\nThe HTTP headers in the query are from
        [darkqusar][1]''s [gist][2] \n\n[1]: https://gist.github.com/darkquasar\n[2]:
        https://gist.github.com/darkquasar/84fb2cec6cc1668795bd97c02302d380\n", "tags":
        ["technique:T1190-exploit-public-facing-application", "mitre_platform:network",
        "scope:nginx-ingress-controller", "source:nginx-ingress-controller", "security:attack",
        "tactic:TA0001-initial-access"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:network", "technique:T1190-exploit-public-facing-application",
        "source:nginx-ingress-controller", "scope:nginx-ingress-controller", "tactic:TA0001-initial-access",
        "security:attack"], "version": 87, "id": "9e5-69f-a68", "updatedAt": 1736369656973,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "New AWS account seen assuming a role
        into AWS account", "createdAt": 1629705614041, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail -@level:Error @evt.name:AssumeRole",
        "groupByFields": ["@recipientAccountId"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@userIdentity.accountId", "metrics": ["@userIdentity.accountId"],
        "aggregation": "new_value", "name": ""}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 0, "keepAlive": 0,
        "newValueOptions": {"forgetAfter": 28, "learningDuration": 7, "learningThreshold":
        0, "learningMethod": "duration"}}, "cases": [{"name": "", "status": "medium",
        "notifications": []}], "message": "## Goal\nDetect when an attacker accesses
        your AWS account from their AWS Account.\n\n## Strategy\nThis rule lets you
        monitor AssumeRole (`@evt.name:AssumeRole`) CloudTrail API calls to detect
        when an external AWS account (`@userIdentity.accountId`) assumes a role into
        your AWS account (`account`). It does this by learning all AWS accounts from
        which the AssumeRole call occurs within a 7-day window. Newly detected accounts
        after this 7-day window will generate security signals.\n\n## Triage and response\n1.
        Determine if the `@userIdentity.accountId` is an AWS account is managed by
        your company.\n2. If not, try to determine who is the owner of the AWS account.\n3.
        Inspect the role the account is assuming. Determine who created this role
        and who allowed this AWS account to assume this role.\n\n## Changelog\n7 April
        2022 - Updated rule query and signal message.\n", "tags": ["iaas:aws", "technique:T1199-trusted-relationship",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["iaas:aws", "technique:T1199-trusted-relationship",
        "mitre_platform:cloud", "mitre_platform:iaas", "tactic:TA0001-initial-access",
        "security:attack", "source:cloudtrail"], "version": 87, "id": "m0j-qd1-5he",
        "updatedAt": 1736369660318, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "New Amazon EC2 Instance type", "createdAt": 1629705613902,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        -@level:Error @eventSource:ec2.amazonaws.com @evt.name:RunInstances", "groupByFields":
        ["@recipientAccountId"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "metric": "@responseElements.instancesSet.items.instanceType", "metrics":
        ["@responseElements.instancesSet.items.instanceType"], "aggregation": "new_value",
        "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod": "new_value",
        "maxSignalDuration": 0, "keepAlive": 0, "newValueOptions": {"forgetAfter":
        28, "learningDuration": 7, "learningThreshold": 0, "learningMethod": "duration"}},
        "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when an attacker spawns an instance for malicious purposes.
        \n\n## Strategy\nThis rule lets you monitor this CloudTrail API call to detect
        when a new instance type (`@responseElements.instancesSet.items.instanceType`)
        is spawned:\n\n* [RunInstances][1]\n\nIt does this by inspecting the AWS Instance
        types each AWS account are seen over a 7-day window. Newly detected instance
        types after this 7-day window till generate security signals.\n\n## Triage
        and response\n1. Determine whether the instance type `{{@responseElements.instancesSet.items.instanceType}}`
        is expected to be used in your AWS account by checking the [Datadog Infrastructure
        List][2].\n2. If not, determine who spawned this instance and ask the user
        whether their activity was legitimate or whether their credentials were compromised
        and this instance is being used by an attacker.\n\n## Changelog\n7 April 2022
        - Updated rule query.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/run-instances.html\n[2]:
        https://app.datadoghq.com/infrastructure?tab=details&tags=instance-type%3A{{@responseElements.instancesSet.items.instanceType}}",
        "tags": ["scope:ec2", "tactic:TA0002-execution", "iaas:aws", "tactic:TA0040-impact",
        "source:cloudtrail", "technique:T1496-resource-hijacking", "technique:T1204-user-execution",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas",
        "iaas:aws", "technique:T1496-resource-hijacking", "scope:ec2", "source:cloudtrail",
        "technique:T1204-user-execution", "tactic:TA0040-impact", "mitre_platform:cloud",
        "tactic:TA0002-execution", "security:attack"], "version": 87, "id": "a8d-afd-la9",
        "updatedAt": 1736369660225, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "New Kubernetes Namespace Created", "createdAt": 1629705616167,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "(source:kubernetes.audit
        OR (source:azure.containerservice @evt.category:(kube-audit OR kube-audit-admin)))
        @objectRef.resource:namespaces @http.method:create -@objectRef.name:(\"default\"
        OR \"kube-system\" OR \"kube-public\") @http.status_code:[200 TO 299]", "groupByFields":
        ["@objectRef.name", "@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "standardized_attributes"}, {"query":
        "@apiVersion:audit.k8s.io* @objectRef.resource:namespaces @verb:create -@objectRef.name:(\"default\"
        OR \"kube-system\" OR \"kube-public\") @responseStatus.code:[200 TO 299]",
        "groupByFields": ["@objectRef.name", "@user.username"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "non_standardized_attributes"},
        {"query": "source:gcp.k8s.cluster @data.protoPayload.request.kind:Namespace
        @http.method:create -@data.protoPayload.response.code:*", "groupByFields":
        ["@usr.id", "@data.protoPayload.response.metadata.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "gke_namespace_created"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "standardized", "status": "info",
        "notifications": [], "condition": "standardized_attributes > 0 || gke_namespace_created
        > 0"}, {"name": "non-standardized", "status": "info", "notifications": [],
        "condition": "non_standardized_attributes > 0"}], "message": "## Goal\nDetect
        when a user is creating a Kubernetes namespace.\n\n## Strategy\nThis rule
        monitors when a `create` action occurs for the Kubernetes namespace (`@objectRef.resource:namespaces`)
        to detect when a user is creating a new Kubernetes namespace.\n\n## Triage
        and response\nDetermine if the user should be creating this new namespace.\n\n##
        Changelog\n* 7 May 2024 - Updated detection query to include logs from Azure
        Kubernetes Service.\n* 16 July 2024 - Updated detection query to include logs
        from Google Kubernetes Engine.\n", "tags": ["source:kubernetes", "technique:T1578-modify-cloud-compute-infrastructure",
        "mitre_platform:containers", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["source:kubernetes", "mitre_platform:cloud",
        "mitre_platform:iaas", "mitre_platform:containers", "tactic:TA0005-defense-evasion",
        "security:attack", "technique:T1578-modify-cloud-compute-infrastructure"],
        "version": 88, "id": "a9f-f61-a6c", "updatedAt": 1736369660332, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "New Kubernetes privileged pod created",
        "createdAt": 1629705615032, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "(source:kubernetes.audit OR (source:azure.containerservice @evt.category:(kube-audit
        OR kube-audit-admin))) @objectRef.resource:pods @http.method:create @requestObject.spec.containers.securityContext.privileged:true",
        "groupByFields": ["@objectRef.name", "@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "standardized_attributes"},
        {"query": "@apiVersion:audit.k8s.io* @objectRef.resource:pods @verb:create
        @requestObject.spec.containers.securityContext.privileged:true", "groupByFields":
        ["@objectRef.name", "@user.username"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "non_standardized_attributes"},
        {"query": "source:gcp.k8s.cluster @data.protoPayload.request.kind:Pod @http.method:create
        @data.protoPayload.request.spec.containers.securityContext.privileged:true
        -@data.protoPayload.response.code:*", "groupByFields": ["@usr.id", "@data.protoPayload.response.metadata.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "gke_privileged_pod_created"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "standardized", "status": "info", "notifications": [],
        "condition": "standardized_attributes > 0 || gke_privileged_pod_created >
        0"}, {"name": "non-standardized", "status": "info", "notifications": [], "condition":
        "non_standardized_attributes > 0"}], "message": "## Goal\nDetect when a privileged
        pod is created. Privileged pods remove container isolation which allows privileged
        actions on the host.\n\n## Strategy\nThis rule monitors when a pod (`@objectRef.resource:pods`)
        is created (`@http.method:create`) and the privileged security context (`@requestObject.spec.containers.securityContext.privileged`)
        is `true`.\n\n## Triage & Response\nDetermine if the pod should be privileged.\n\n##
        Changelog\n* 7 May 2024 - Updated detection query to include logs from Azure
        Kubernetes Service.\n* 16 July 2024 - Updated detection query to include logs
        from Google Kubernetes Engine.", "tags": ["scope:kubernetes", "tactic:TA0004-privilege-escalation",
        "technique:T1098-account-manipulation", "source:kubernetes", "technique:T1578-modify-cloud-compute-infrastructure",
        "mitre_platform:containers", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas", "tactic:TA0004-privilege-escalation",
        "technique:T1578-modify-cloud-compute-infrastructure", "scope:kubernetes",
        "source:kubernetes", "mitre_platform:cloud", "tactic:TA0005-defense-evasion",
        "technique:T1098-account-manipulation", "mitre_platform:containers", "security:attack"],
        "version": 88, "id": "kqq-0do-gio", "updatedAt": 1736369660351, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "New Private Repository Container Image
        detected in AWS ECR", "createdAt": 1630662622869, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:ecr.amazonaws.com
        @evt.name:PutImage -@error.kind:ImageAlreadyExistsException @threat_intel.indicators_matched:*",
        "groupByFields": ["@requestParameters.repositoryName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "a"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect potential persistence
        mechanisms being deployed in the AWS Elastic Container Registry (ECR).\n\nNOTE:
        Amazon ECR requires that users have permission to make calls to the `ecr:GetAuthorizationToken`
        API through an IAM policy before they can authenticate to a registry and push
        or pull any images from any Amazon ECR repository.\n\n## Strategy\nDetect
        when `@evt.name:PutImage` is used against the `ecr.amazonaws.com` API. \n\n##
        Triage & Response\n1. Check that `{{@responseElements.image.imageId.imageDigest}}`
        is a valid sha256 hash for the container image with a tag of `{{@responseElements.image.imageId.imageTag}}`
        in the `{{@responseElements.image.repositoryName}}` repository on AWS Account
        `{{@userIdentity.accountId}}`.\n2. If the hash is not valid for that container
        image, determine if the container image was placed there for a malicious purpose.",
        "tags": ["technique:T1525-implant-internal-image", "scope:ecr", "iaas:aws",
        "source:cloudtrail", "mitre_platform:containers", "mitre_platform:iaas", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:ecr",
        "iaas:aws", "security:attack", "mitre_platform:iaas", "tactic:TA0003-persistence",
        "mitre_platform:containers", "source:cloudtrail", "mitre_platform:cloud",
        "technique:T1525-implant-internal-image"], "version": 87, "id": "kq2-xck-hec",
        "updatedAt": 1736369660364, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "New Public Repository Container Image detected in AWS
        ECR", "createdAt": 1630662624454, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventSource:ecr-public.amazonaws.com @evt.name:PutImage
        -@error.kind:ImageAlreadyExistsException", "groupByFields": ["@requestParameters.repositoryName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "a"}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "info", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when a new image is uploaded to the public ECR. This could be a potential
        exfil route of data from the cloud. Could be a supply chain effect as well
        if a company hosts their containers here for consumers.\n\nNOTE: Amazon ECR
        requires that users have permission to make calls to the `ecr-public:GetAuthorizationToken`
        and `sts:GetServiceBearerToken` API through an IAM policy before they can
        authenticate to a registry and push any images to an Amazon ECR repository.\n\n##
        Strategy\nDetect when `@evt.name:PutImage` is used against the `ecr-public.amazonaws.com`
        API. \n\n## Triage & Response\n1. Check that `{{@responseElements.image.imageId.imageDigest}}`
        is a valid sha256 hash for the container image with a tag of `{{@responseElements.image.imageId.imageTag}}`
        in the `{{@responseElements.image.repositoryName}}` repository on AWS Account
        `{{@userIdentity.accountId}}`.\n2. If the hash is not valid for that container
        image, determine if the container image was placed there for a malicious purpose.\n",
        "tags": ["technique:T1525-implant-internal-image", "scope:ecr", "iaas:aws",
        "source:cloudtrail", "mitre_platform:containers", "mitre_platform:iaas", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:ecr",
        "iaas:aws", "security:attack", "mitre_platform:iaas", "tactic:TA0003-persistence",
        "mitre_platform:containers", "source:cloudtrail", "mitre_platform:cloud",
        "technique:T1525-implant-internal-image"], "version": 87, "id": "bdv-1hj-qoq",
        "updatedAt": 1736369660573, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "New user seen executing a command in an ECS task", "createdAt":
        1629705613385, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @evt.name:ExecuteCommand @requestParameters.interactive:true",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "metric": "@userIdentity.accountId", "metrics": ["@userIdentity.accountId"],
        "aggregation": "new_value", "name": ""}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 0, "keepAlive": 0,
        "newValueOptions": {"forgetAfter": 28, "learningDuration": 1, "learningThreshold":
        0, "learningMethod": "duration"}}, "cases": [{"name": "", "status": "medium",
        "notifications": []}], "message": "## Goal\nDetect when a user executes a
        command on an ECS container for the first time. An attacker may use this as
        a technique to escalate their privileges\nbecause they can run arbitrary commands
        on behalf of the container with the role and permissions associated with the\ncontainer.\n\n##
        Strategy\nThis rule lets you monitor this CloudTrail API call to detect if
        a user is executing a command on an ECS container:\n\n* `ExecuteCommand`\n\n##
        Triage and response\n1. Investigate the command that the user ({{@userIdentity.arn}})
        ran on the container, which is located in the Cloudtrail log at `@requestParameters.container`,
        if the telemetry exists.\n2. Analyze Cloudtrail logs with {{@userIdentity.arn}}
        that are within the same time frame as this security signal.\n3. Review any
        other security signals generated for this container.\n", "tags": ["tactic:TA0004-privilege-escalation",
        "scope:ecs", "iaas:aws", "source:cloudtrail", "technique:T1651-cloud-administration-command",
        "mitre_platform:containers", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:ecs", "iaas:aws", "security:attack", "mitre_platform:iaas", "mitre_platform:containers",
        "tactic:TA0004-privilege-escalation", "source:cloudtrail", "technique:T1651-cloud-administration-command",
        "mitre_platform:cloud"], "version": 88, "id": "ugx-lde-wnu", "updatedAt":
        1736369660551, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "OSSEC Alert: Attack detected", "createdAt": 1723546201078, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:ossec-security @level:15",
        "groupByFields": ["@syslog.hostname"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        900, "detectionMethod": "threshold", "maxSignalDuration": 900, "keepAlive":
        900}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when an OSSEC alert of level 15 is
        raised.\n\n## Strategy\nThis rule monitors OSSEC logs for an alert classified
        as level 15. [OSSEC rules][1] are classified in multiple levels, from the
        lowest (00) to the maximum level 16. Level 15 references a ''severe attack''
        and immediate attention is necessary.\n\n## Triage and Response\n1. Check
        the attack detected for the system: `{{@syslog.hostname}}`.\n2. Analyze the
        rule that triggered, the brief description, and message attached with the
        log:\n     * Rule ID: `{{@rule_id}}`\n     * Description: `{{@description}}`\n     *
        Log Message: `{{@log}}`\n3. Contact the system administrator immediately to
        perform the necessary actions to mitigate the cause. This attack requires
        urgent attention and this rule has no chance of generating false positives.\n\n[1]:
        https://www.ossec.net/docs/manual/rules-decoders/rule-levels.html", "tags":
        ["source:ossec-security", "mitre_platform:linux", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:linux", "source:ossec-security"], "version": 88, "id": "def-000-uo8",
        "updatedAt": 1736369661701, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "OSSEC Alert: Multiple authentication failures", "createdAt":
        1723546202340, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:ossec-security @level:>8 @group_list:authentication_failures", "groupByFields":
        ["@syslog.hostname"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when multiple failed authentication
        attempts are detected by OSSEC.\n\n## Strategy\nThis rule lets you monitor
        if there are multiple authentication failures in a limited time interval.\n\n##
        Triage and Response\n1. Check the activity detected on the System: `{{@syslog.hostname}}`.\n2.
        Analyze the rule that triggered along with the brief description and log message
        attached with the log:\n     * Rule ID: `{{@rule_id}}`\n     * Description:
        `{{@description}}`\n     * Log Message: `{{@log}}`\n\n3. Inform your administrator
        to take further action for the detected failed activity.", "tags": ["tactic:TA0006-credential-access",
        "source:ossec-security", "mitre_platform:linux", "technique:T1110-brute-force",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["source:ossec-security", "security:attack", "mitre_platform:linux",
        "tactic:TA0006-credential-access", "technique:T1110-brute-force"], "version":
        87, "id": "def-000-ep8", "updatedAt": 1736369661685, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "OSSEC Alert: Multiple authentication
        failures followed by a success", "createdAt": 1723546202212, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:ossec-security
        @rule_id:40112", "groupByFields": ["@syslog.hostname"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 900}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when multiple authentication
        attempts have failed, followed by one successful authentication.\n\n## Strategy\nThis
        rule monitors logs, and is triggered when there are multiple authentication
        failures followed by a successful authentication from the user. This could
        be indicative of a brute force attack against your system.\n\n## Triage and
        Response\n1. Check the activity detected on the system `{{@syslog.hostname}}`
        by the user `{{@usr.name}}`.\n2. Note the activity performed from `{{@network.client.ip}}`.\n3.
        You can either block the user `{{@usr.name}}` from further accessing the system
        or contact your administrator to take further action.\n", "tags": ["tactic:TA0006-credential-access",
        "source:ossec-security", "mitre_platform:linux", "technique:T1110-brute-force",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["source:ossec-security", "security:attack", "mitre_platform:linux",
        "tactic:TA0006-credential-access", "technique:T1110-brute-force"], "version":
        87, "id": "def-000-uzx", "updatedAt": 1736369661759, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "OSSEC Alert: OSSEC agent disconnected",
        "createdAt": 1723546201148, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:ossec-security @rule_id:504", "groupByFields": ["@syslog.hostname"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 900, "detectionMethod": "threshold",
        "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "medium", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nThe
        goal is to notify the administrator when the OSSEC agent got disconnected.\n\n##
        Strategy\nThis rule lets you monitor whether the OSSEC agent got disconnected.\n\n##
        Triage and Response\n1. Check the log detected for the System: `{{@syslog.hostname}}`.\n2.
        Check whether the `{{@agent-name}}` hosted on the IP `{{@agent-ip}}` is still
        disconnected or has recovered.\n3. If the agent has disconnected unexpectedly,
        log in to the system and restart your agent to continue your analysis, or
        contact your administrator to take the necessary actions.", "tags": ["source:ossec-security",
        "technique:T1562-impair-defenses", "mitre_platform:linux", "tactic:TA0005-defense-evasion",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["source:ossec-security", "security:attack", "mitre_platform:linux",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion"], "version":
        88, "id": "def-000-7xu", "updatedAt": 1736369662065, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "OSSEC Alert: Possible attack detected",
        "createdAt": 1723546201201, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:ossec-security @level:(13 OR 14)", "groupByFields": ["@syslog.hostname"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 900, "detectionMethod": "threshold",
        "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "low", "notifications": [], "condition": "a > 0"}], "message": "## Goal\nDetect
        when an OSSEC alert of level 13 or 14 is raised.\n\n## Strategy\nThis rule
        monitors unusual and high importance events with severity level 13 or 14.
        [OSSEC rules][1] are classified in multiple levels, from the lowest (00) to
        the maximum level 16.\n\n- Severity level 13 signifies `Unusual error (high
        importance)` -  Most of the times it matches a common attack pattern.\n- Severity
        level 14 signifies `High importance security event` - Most of the times done
        with correlation and indicative of an attack.\n\n## Triage and Response\n1.
        Check the attack detected for the system: `{{@syslog.hostname}}`.\n2. Analyze
        the rule that triggered, the brief description, and message attached with
        the log:\n     * Rule ID: `{{@rule_id}}`\n     * Description: `{{@description}}`\n     *
        Log Message:`{{@log}}`\n3. Contact your system administrator in order to perform
        the necessary actions to mitigate the issue.\n\n[1]: https://www.ossec.net/docs/manual/rules-decoders/rule-levels.html",
        "tags": ["source:ossec-security", "mitre_platform:linux", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "mitre_platform:linux", "source:ossec-security"], "version":
        87, "id": "def-000-8jx", "updatedAt": 1736369662080, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "OSSEC Alert: Unusual spike in authentication
        failure", "createdAt": 1723546202317, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:ossec-security @group_list:authentication_failed",
        "groupByFields": ["@syslog.hostname"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 86400,
        "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "## Goal\nDetect when there are a higher number of failed
        authentication attempts than usual.\n\n## Strategy\nThis rule monitors logs
        for unusual spikes in failed authentication attempts using the anomaly detection
        method.\n\n## Triage and Response\n1. Analyze the source and username which
        have generated the most authentication failure alerts.\n2. Contact the system
        administrator to take necessary steps by changing the password of the user
        which has been affected or blocking the source IP from which failed authentication
        alerts have been generated.", "tags": ["tactic:TA0006-credential-access",
        "source:ossec-security", "mitre_platform:linux", "technique:T1110-brute-force",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["source:ossec-security", "security:attack", "mitre_platform:linux",
        "tactic:TA0006-credential-access", "technique:T1110-brute-force"], "version":
        91, "id": "def-000-1a8", "updatedAt": 1736369662062, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta API Token Created or Enabled",
        "createdAt": 1629705617681, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:okta @evt.name:system.api_token.create", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "info", "notifications": [], "condition": "a > 0"}], "message":
        "## Goal\nDetect when a new Okta API token is created.\n\n## Strategy\nThis
        rule lets you monitor the following Okta event to detect when a new Okta API
        token is created:\n\n* `system.api_token.create`\n\n## Triage and response\nContact
        the user who created the API token and ensure that the API token is needed.\n",
        "tags": ["source:okta", "technique:T1098-account-manipulation", "mitre_platform:identity-provider",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "tactic:TA0003-persistence", "source:okta", "security:attack", "technique:T1098-account-manipulation",
        "mitre_platform:identity-provider"], "version": 88, "id": "020-008-4aa", "updatedAt":
        1736369662685, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Okta Identity Provider creation or modification", "createdAt": 1697011791230,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:okta
        @evt.name:system.idp.lifecycle*", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "idp_lifecycle_creation"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "idp_lifecycle_creation > 0"}], "message": "## Goal\nDetect
        when an Okta Identity Provider has been created or modified.\n\n## Strategy\nThis
        rule monitors when an Okta Identity Provider has been created or modified.
        Okta''s security team [reported][1] a series of social engineering attacks
        in which attackers configured a second Identity Provider to act as an \"impersonation
        app\" to access applications within the compromised customer organization
        on behalf of other users.\n\n## Triage and response\n1. Contact the user `{{@usr.email}}`
        to ensure the change `{{@evt.name}}` is authorized.\n2. If the user was unaware
        of the change:\n    * Determine if any other activity occurred from this user.
        Look for deviations in user agents, IP addresses and network metadata.\n    *
        Begin your organization''s incident response process and investigate for any
        account takeovers.\n\n[1]: https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
        "tags": ["source:okta", "technique:T1556-modify-authentication-process", "tactic:TA0006-credential-access",
        "mitre_platform:identity-provider", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:okta", "technique:T1556-modify-authentication-process",
        "security:attack", "tactic:TA0006-credential-access", "mitre_platform:identity-provider"],
        "version": 88, "id": "def-000-jdv", "updatedAt": 1736369663305, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta Impersonation", "createdAt": 1647979349200,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:okta
        @evt.name:user.session.impersonation.initiate", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "user_session_impersonation_initiate"}, {"query": "source:okta @evt.name:user.session.impersonation.end",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "user_session_impersonation_end"}, {"query":
        "source:okta @evt.name:user.session.impersonation.grant", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "user_session_impersonation_grant"}, {"query": "source:okta
        @evt.name:user.session.impersonation.extend", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "user_session_impersonation_extend"}, {"query": "source:okta @evt.name:user.session.impersonation.revoke",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "user_session_impersonation_revoke"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "Session initiated", "status":
        "info", "notifications": [], "condition": "user_session_impersonation_initiate
        > 0"}, {"name": "Session ended", "status": "info", "notifications": [], "condition":
        "user_session_impersonation_end > 0"}, {"name": "Session granted", "status":
        "info", "notifications": [], "condition": "user_session_impersonation_grant
        > 0"}, {"name": "Session extended", "status": "info", "notifications": [],
        "condition": "user_session_impersonation_extend > 0"}, {"name": "Session revoked",
        "status": "info", "notifications": [], "condition": "user_session_impersonation_revoke
        > 0"}], "message": "## Goal\nDetect an Okta session impersonation.\n\n## Strategy\nThis
        rule lets you monitor the following Okta events to detect a user session impersonation:\n\n*
        `user.session.impersonation.initiate`\n* `user.session.impersonation.end`\n*
        `user.session.impersonation.grant`\n* `user.session.impersonation.extend`\n*
        `user.session.impersonation.revoke`\n\nThese events indicate that the user:
        `{{@usr.email}}` has the effective permissions of the impersonated user. This
        is likely to occur through [Okta support access][1]. This [blog][2] illustrates
        the potential impact an attacker can cause by impersonation session.\n\n##
        Triage and response\n1. Contact your Okta administrator to ensure the user:
        `{{@usr.email}}` is authorized to impersonate a user session.\n2. If the user
        impersonation session is not legitimate:\n    * Task your Okta administrator
        to end the impersonation session.\n    * Investigate the actions taken by
        the user `{{@usr.email}}` during the session and revert back to the last known
        good state.\n    * Begin your company''s incident response process and investigate.\n\n[1]:
        https://support.okta.com/help/s/article/Granting-Access-to-Okta-Support?language=en_US\n[2]:
        https://blog.cloudflare.com/cloudflare-investigation-of-the-january-2022-okta-compromise/",
        "tags": ["source:okta", "scope:okta", "technique:T1199-trusted-relationship",
        "mitre_platform:identity-provider", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1199-trusted-relationship", "mitre_platform:cloud",
        "mitre_platform:identity-provider", "source:okta", "tactic:TA0001-initial-access",
        "security:attack", "scope:okta"], "version": 87, "id": "0fx-z3l-ggi", "updatedAt":
        1736369663324, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Okta MFA Bypass Attempted", "createdAt": 1629705618098, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:okta @evt.name:user.mfa.attempt_bypass",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a user attempts to bypass multi-factor
        authentication (MFA).\n\n## Strategy\nThis rule lets you monitor the following
        Okta events to detect when a user attempts to bypass MFA:\n\n* `user.mfa.attempt_bypass`\n\n##
        Triage and response\nContact the user who attempted to bypass MFA and ensure
        the request was legitimate.\n", "tags": ["source:okta", "technique:T1111-multi-factor-authentication-interception",
        "tactic:TA0006-credential-access", "mitre_platform:identity-provider", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1111-multi-factor-authentication-interception",
        "source:okta", "security:attack", "tactic:TA0006-credential-access", "mitre_platform:identity-provider"],
        "version": 88, "id": "8c6-2a6-515", "updatedAt": 1736369663549, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta MFA reset for user", "createdAt":
        1629705612866, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:okta @evt.name:user.mfa.factor.reset_all @evt.outcome:SUCCESS", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "mfa_reset_success"}, {"query": "source:okta @evt.name:user.mfa.factor.reset_all
        @evt.outcome:FAILURE", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "mfa_reset_failed"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Succeeded", "status": "low",
        "notifications": [], "condition": "mfa_reset_success > 0"}, {"name": "Failed",
        "status": "info", "notifications": [], "condition": "mfa_reset_failed > 0"}],
        "message": "## Goal\nDetect when the multi-factor authentication (MFA) factors
        for an enrolled Okta user are reset.\n\n## Strategy\nThis rule lets you monitor
        the following Okta event to determine when a user''s MFA factors are reset:\n\n*
        `user.mfa.factor.reset_all`\n\nAn attacker may attempt to reset MFA factors
        in a bid to access other user accounts by registering new attacker-controlled
        MFA factors.\n\n## Triage and response\n1. Determine if the user: `{{@usr.email}}`
        should have reset the MFA factors of the targeted user.\n2. If the change
        was not made by the user:\n    * Disable the affected user accounts.\n    *
        Rotate user credentials.\n    * Return targeted users MFA factors to the last
        known good state.\n    * Begin your organization''s incident response process
        and investigate.\n3. If the change was made by the user:\n    * Determine
        if the user was authorized to make that change.\n    * If **Yes**, ensure
        the targeted user has new MFA factors assigned in accordance with organization
        policies.\n    * If **No**, verify there are no other signals from the Okta
        administrator: `{{@usr.email}}`.", "tags": ["source:okta", "technique:T1556-modify-authentication-process",
        "tactic:TA0006-credential-access", "mitre_platform:identity-provider", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:okta", "technique:T1556-modify-authentication-process",
        "security:attack", "tactic:TA0006-credential-access", "mitre_platform:identity-provider"],
        "version": 88, "id": "v47-nhm-752", "updatedAt": 1736369663556, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta User Access Denied to Sign On",
        "createdAt": 1629705618819, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:okta @evt.name:application.policy.sign_on.deny_access",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a user is denied access to sign
        on to an app based on sign-on policy.\n\n## Strategy\nThis rule lets you monitor
        the following Okta events to detect when a user is denied access to sign on
        to an app based on sign-on policy:\n\n* `application.policy.sign_on.deny_access`\n\n##
        Triage and response\n1. Inspect the `@target` array to determine why the user
        was denied access to sign on.\n2. Contact the user to determine whether they
        attempted to access this app or whether their account is compromised.\n",
        "tags": ["source:okta", "technique:T1078-valid-accounts", "mitre_platform:identity-provider",
        "security:attack", "mitre_platform:cloud", "tactic:TA0001-initial-access"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1078-valid-accounts", "source:okta",
        "tactic:TA0001-initial-access", "security:attack", "mitre_platform:identity-provider"],
        "version": 87, "id": "888-4d9-8a3", "updatedAt": 1736369663550, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta User Attempted to Access Unauthorized
        App", "createdAt": 1629705612921, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:okta @evt.name:app.generic.unauth_app_access_attempt",
        "groupByFields": ["@usr.email", "@target_app"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "a > 0"}], "message": "## Goal\nDetect when a user is denied
        access to an app.\n\n## Strategy\nThis rule lets you monitor the following
        Okta events to detect when a user is denied access to an app:\n\n* `app.generic.unauth_app_access_attempt`\n\n##
        Triage and response\n1. Determine whether or not the user should have access
        to this app.\n2. Contact the user to determine whether they attempted to access
        this app or whether their account is compromised.\n", "tags": ["source:okta",
        "mitre_platform:identity-provider", "tactic:TA0007-discovery", "security:attack",
        "technique:T1526-cloud-service-discovery", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "technique:T1526-cloud-service-discovery", "source:okta", "security:attack",
        "tactic:TA0007-discovery", "mitre_platform:identity-provider"], "version":
        88, "id": "59a-cl0-v2r", "updatedAt": 1736369663953, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta administrator role assigned to
        user", "createdAt": 1629705612055, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:okta @evt.name:user.account.privilege.grant",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "privilege_grant"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "privilege_grant > 0"}], "message": "## Goal\nDetect when administrative privileges
        are provisioned to an Okta user.\n\n## Strategy\nThis rule lets you monitor
        the following Okta event to detect when administrative privileges are provisioned:\n\n*
        `user.account.privilege.grant`\n\n## Triage and response\n1. Contact the Okta
        administrator: `{{@usr.email}}` to confirm that the user or users should have
        administrative privileges.\n2. If the change was **not** authorized, verify
        there are no other signals from the Okta administrator: `{{@usr.email}}`.",
        "tags": ["tactic:TA0004-privilege-escalation", "source:okta", "technique:T1098-account-manipulation",
        "mitre_platform:identity-provider", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:okta", "security:attack", "technique:T1098-account-manipulation",
        "tactic:TA0004-privilege-escalation", "mitre_platform:identity-provider"],
        "version": 88, "id": "mft-lau-5u0", "updatedAt": 1736369663946, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta application enumeration by user",
        "createdAt": 1732181584472, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:okta @evt.name:app.generic.unauth_app_access_attempt @evt.outcome:FAILURE",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@target.displayName"], "aggregation": "cardinality", "name": "failed_application_access"},
        {"query": "source:okta @evt.name:user.authentication.sso @evt.outcome:SUCCESS",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@target.displayName"], "aggregation": "cardinality", "name": "successful_application_access"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Failed application access followed
        by success", "status": "medium", "notifications": [], "condition": "failed_application_access
        > 3 && successful_application_access >=1"}, {"name": "Failed application access",
        "status": "low", "notifications": [], "condition": "failed_application_access
        > 5"}], "message": "## Goal\n\nDetect and investigate attempts to enumerate
        applications using Okta, which may indicate an attacker is probing for accessible
        resources to facilitate lateral movement.\n\n## Strategy\n\nThis rule monitors
        enumeration activities via Okta where repeated queries are made to list available
        applications. Such behavior may suggest an attempt to identify accessible
        resources and potentially map out targets for lateral movement.\n\n## Triage
        and Response\n\n1. Validate the user activity:\n\n   - Check if the user account
        (`{{@usr.name}}`) or associated IP address has a legitimate reason for listing
        applications.\n   - Review recent authentication attempts and associated IP
        addresses to determine if there are additional signs of compromise or unauthorized
        access.\n\n2. Investigate suspicious enumeration activity:\n\n   - Review
        Okta logs for additional enumeration patterns, such as repeated application
        listing requests from the same IP or user within a short time frame.\n   -
        Examine logs for any unusual or infrequent applications being accessed or
        targeted in enumeration requests.\n\n3. Containment and remediation:\n   -
        If the enumeration activity is deemed unauthorized, consider restricting the
        user\u2019s access temporarily and resetting credentials to prevent further
        probing.\n   - Conduct a broader investigation into recent activity from the
        flagged user and IP to check for other signs of lateral movement, such as
        privilege escalation or additional resource access attempts.\n", "tags": ["source:okta",
        "mitre_platform:identity-provider", "tactic:TA0007-discovery", "security:attack",
        "technique:T1526-cloud-service-discovery", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "technique:T1526-cloud-service-discovery", "source:okta", "security:attack",
        "tactic:TA0007-discovery", "mitre_platform:identity-provider"], "version":
        20, "id": "def-002-801", "updatedAt": 1736369663970, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta blocked numerous requests from
        a malicious IP", "createdAt": 1629705617951, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:okta @evt.name:security.request.blocked
        @evt.outcome:SUCCESS", "groupByFields": ["@network.client.ip", "@target_app"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "request_blocked"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "info", "notifications": [], "condition": "request_blocked >
        10"}], "message": "## Goal\nDetect when a request is blocked due to a block
        list rule (such as an IP network zone or location rule).\n\n## Strategy\nThis
        rule lets you monitor the following Okta events to detect when a malicious
        IP address communicates with your Okta account:\n\n* `security.request.blocked`\n\n##
        Triage & Response\n1. Verify with the owner of `{{@usr.name}}` that they were
        attempting a request to `{{@target_app}}`.\n2. If the request cannot be verified
        with the user, correlate with other log sources to see if the blocked IP in
        the `title` of `{{@title}}` has communicated elsewhere on the network.", "tags":
        ["source:okta", "technique:T1078-valid-accounts", "mitre_platform:identity-provider",
        "security:attack", "mitre_platform:cloud", "tactic:TA0001-initial-access"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1078-valid-accounts", "source:okta",
        "tactic:TA0001-initial-access", "security:attack", "mitre_platform:identity-provider"],
        "version": 87, "id": "hzd-556-lum", "updatedAt": 1736369663966, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta one-time refresh token reused",
        "createdAt": 1629705615443, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:okta @evt.name:(app.oauth2.token.detect_reuse OR app.oauth2.as.token.detect_reuse)
        @debugContext.debugData.threatSuspected:false", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "refresh_token_reuse"}, {"query": "source:okta @evt.name:(app.oauth2.token.detect_reuse
        OR app.oauth2.as.token.detect_reuse) @debugContext.debugData.threatSuspected:true",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "refresh_token_reuse_threat"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Threat suspected", "status":
        "medium", "notifications": [], "condition": "refresh_token_reuse_threat >
        0"}, {"name": "Threat unlikely", "status": "low", "notifications": [], "condition":
        "refresh_token_reuse > 0"}], "message": "## Goal\nDetect when an Okta [refresh
        token][1] is reused.\n\n## Strategy\nThis rule lets you monitor the following
        Okta events when token reuse is detected:\n\n* `app.oauth2.token.detect_reuse`\n*
        `app.oauth2.as.token.detect_reuse`\n\nAn attacker that has access to a refresh
        token could query the organization''s authorization server `/token` endpoint
        to obtain additional access tokens. The additional access tokens potentially
        allow the attacker to get unauthorized access to applications.\n\n## Triage
        and response\n1. Determine if the source IP `{{@network.client.ip}}` is anomalous
        within the organization:\n    * Does threat intelligence indicate that this
        IP has been associated with malicious activity?\n    * Is the geo-location
        or ASN uncommon for the organization?\n    * Has the IP created a `app.oauth2.token.detect_reuse`
        or `app.oauth2.as.token.detect_reuse` event previously?\n2. If the token reuse
        event has been determined to be malicious, carry out the following actions:\n    *
        [Revoke compromised tokens][2].\n    * Recycle the credentials of any impacted
        clients.\n    * Begin your company''s incident response process and investigate.\n\n[1]:
        https://developer.okta.com/docs/guides/refresh-tokens/main/\n[2]: https://developer.okta.com/docs/guides/revoke-tokens/main/",
        "tags": ["source:okta", "tactic:TA0006-credential-access", "mitre_platform:identity-provider",
        "technique:T1528-steal-application-access-token", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1528-steal-application-access-token", "mitre_platform:cloud",
        "source:okta", "security:attack", "tactic:TA0006-credential-access", "mitre_platform:identity-provider"],
        "version": 88, "id": "9rd-o7d-606", "updatedAt": 1736369664606, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta phishing detection with FastPass
        origin check", "createdAt": 1697011791177, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:okta @evt.name:user.authentication.auth_via_mfa
        @evt.outcome:FAILURE @outcome.reason:\"FastPass declined phishing attempt\"",
        "groupByFields": ["@target.alternateId"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "fastpass_phishing_detection"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "fastpass_phishing_detection > 0"}], "message": "## Goal\nDetect
        when Okta raises a phishing [detection][1] with FastPass origin check.\n\n##
        Strategy\nThis rule monitors Okta for when a phishing detection with FastPass
        origin check has been raised. Okta provides a platform detection for when
        a user enrolled in FastPass fails to authenticate via a real-time adversary
        in the middle (AiTM) phishing proxy.\n\n## Triage and response\n1. Extract
        the attackers IP address `{{@network.client.ip}}`.\n2. Determine if any other
        users have authenticated from this address.\n3. If yes, [clear any user sessions][2]
        and [reset passwords][3] if the users entered a password as part of the authenitication
        flow.\n4. Begin your organization''s incident response process and investigate
        for any account takeovers.\n\n[1]: https://sec.okta.com/fastpassphishingdetection\n[2]:
        https://developer.okta.com/docs/reference/api/users/#clear-current-user-sessions\n[3]:
        https://developer.okta.com/docs/reference/api/users/#response-example-32",
        "tags": ["source:okta", "technique:T1566-phishing", "mitre_platform:identity-provider",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:okta", "tactic:TA0001-initial-access", "security:attack",
        "technique:T1566-phishing", "mitre_platform:identity-provider"], "version":
        87, "id": "def-000-sc1", "updatedAt": 1736369665212, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta policy rule deleted", "createdAt":
        1629705617345, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:okta @evt.name:policy.rule.delete @evt.outcome:SUCCESS", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "policy_rule_deleted"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "policy_rule_deleted > 0"}], "message": "## Goal\nDetect when an Okta policy
        rule is deleted.\n\n## Strategy\nThis rule lets you monitor the following
        Okta event to detect when a policy rule is deleted:\n\n* `policy.rule.delete`\n\n##
        Triage and response\n1. Contact the Okta administrator to confirm that the
        user: `{{@usr.email}}` should be deleting policy rules.\n2. If the change
        was **not** authorized, verify there are no other signals from the user: `{{@usr.email}}`.",
        "tags": ["source:okta", "technique:T1562-impair-defenses", "mitre_platform:identity-provider",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:okta", "security:attack", "tactic:TA0005-defense-evasion",
        "technique:T1562-impair-defenses", "mitre_platform:identity-provider"], "version":
        88, "id": "wiz-kf3-3yo", "updatedAt": 1736369665237, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Okta session hijacking", "createdAt":
        1726646809951, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:okta @evt.outcome:SUCCESS -@authenticationContext.externalSessionId:unknown
        @network.client.geoip.as.domain:* -@target.type:AppInstance @evt.name:(user*)
        -@evt.name:(user.session.clear OR user.authentication.auth_via_mfa OR user.session.end)",
        "groupByFields": ["@authenticationContext.externalSessionId"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@network.client.geoip.as.domain"], "aggregation":
        "cardinality", "name": "user_asn_changed"}, {"query": "source:okta @evt.outcome:SUCCESS
        -@authenticationContext.externalSessionId:unknown @network.client.geoip.as.domain:*
        -@target.type:AppInstance @evt.name:(user*) -@evt.name:(user.session.clear
        OR user.authentication.auth_via_mfa OR user.session.end) @http.useragent:*",
        "groupByFields": ["@authenticationContext.externalSessionId"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@http.useragent"], "aggregation": "cardinality",
        "name": "user_ua_changed"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "medium", "notifications": [], "condition": "user_asn_changed
        > 2 && user_ua_changed > 2"}], "message": "## Goal\n\nDetect when an active
        Okta session exhibits unusual changes in its ASN (Autonomous System Number)
        or user agent, potentially indicating session hijacking. This type of attack
        may allow unauthorized access to application tokens, posing a security risk.\n\n##
        Strategy\n\nThis rule lets you monitor all Okta user-generated events to determine
        when a user takes an action, except for:\n\n- `user.session.clear`\n- `user.authentication.auth_via_mfa`\n-
        `user.session.end`\n\n## Triage and response\n\n1. Check the specific Okta
        session events to confirm ASN or user agent changes for the affected session.
        Verify if the changes align with known travel or user activity patterns.\n2.
        Inspect the GeoIP information in the logs to identify unusual locations or
        ASNs associated with the user. Determine if these IPs are from suspicious
        or untrusted regions.\n3. If the user did not make the observed authentication
        attempts:\n   - Rotate user credentials.\n   - Confirm that no successful
        authentication attempts have been made.\n   - Investigate the source IP: `{{@network.client.ip}}`
        using the Cloud SIEM - IP Investigation dashboard to determine if the IP address
        has taken other actions.\n", "tags": ["source:okta", "tactic:TA0006-credential-access",
        "mitre_platform:identity-provider", "technique:T1528-steal-application-access-token",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["technique:T1528-steal-application-access-token",
        "mitre_platform:cloud", "source:okta", "security:attack", "tactic:TA0006-credential-access",
        "mitre_platform:identity-provider"], "version": 87, "id": "def-000-sxs", "updatedAt":
        1736369665467, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Okta user reported suspicious activity", "createdAt": 1697011791199, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:okta @evt.name:user.account.report_suspicious_activity_by_enduser",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "user_reported_suspicious_activity"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "user_reported_suspicious_activity > 0"}], "message": "##
        Goal\nDetect when an Okta user reports suspicious activity in response to
        an end user security notification.\n\n## Strategy\nThis rule monitors the
        case when an Okta user reports suspicious activity in response to an end user
        security notification. [Suspicious Activity Reporting][1] provides a user
        with the option to report unrecognized activity from email notifications about
        account activity. Account activity includes:\n\n* New sign-on notification\n*
        Authenticator enrolled\n* Authenticator reset\n* Password changed\n\n## Triage
        and response\n1. Identify the event type (`@debugContext.debugData.suspiciousActivityEventType`)
        that occurred and the IP address (`@debugContext.debugData.suspiciousActivityEventIp`)
        from which suspicious activity originated.\n2. Determine if any other activity
        has originated from this address by using the Cloud SIEM - IP Investigation
        dashboard.\n3. If the activity appears to be harmful:\n    * Begin your organization''s
        incident response process and investigate for any account takeovers.\n\n[1]:
        https://help.okta.com/en-us/content/topics/security/suspicious-activity-reporting.htm",
        "tags": ["source:okta", "mitre_platform:identity-provider", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "source:okta", "mitre_platform:identity-provider",
        "mitre_platform:cloud"], "version": 87, "id": "def-000-ksw", "updatedAt":
        1736369665488, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Okta user''s MFA factors reset followed by access to the administrative console",
        "createdAt": 1700122778198, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:okta @evt.name:user.mfa.factor.reset_all", "groupByFields":
        ["@target.alternateId"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "mfa_factor_reset_all"}, {"query": "source:okta
        @evt.name:user.session.access_admin_app", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "access_admin_app"}], "options": {"evaluationWindow": 7200, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 21600}, "cases": [{"name":
        "", "status": "high", "notifications": [], "condition": "mfa_factor_reset_all
        > 0 THEN access_admin_app > 0"}], "message": "## Goal\nDetect when the multi-factor
        authentication (MFA) factors for an enrolled Okta user are reset followed
        by that user accessing the administrative console.\n\n## Strategy\nThis rule
        lets you monitor the following Okta events to determine when a user''s MFA
        factors are reset and they access the administrative console:\n\n* `user.mfa.factor.reset_all`\n*
        `user.session.access_admin_app`\n\n[Okta''s security team reported][1] a series
        of social engineering attacks in which attackers would convince service desk
        staff to reset the MFA factors of highly-privileged users, and leverage this
        to access administrative features within an Okta tenant.\n\n## Triage and
        response\n1. Contact the user `{{@usr.email}}` to ensure the change to their
        MFA factors was authorized and it was them accessing the administrative console.\n2.
        If the user was unaware of the activity:\n    * Determine if any other activity
        occurred from this user. Look for deviations in user agents, IP addresses,
        and network metadata.\n    * Begin your organization''s incident response
        process and investigate for any account takeovers.\n\n[1]: https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
        "tags": ["source:okta", "technique:T1556-modify-authentication-process", "tactic:TA0006-credential-access",
        "mitre_platform:identity-provider", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:okta", "technique:T1556-modify-authentication-process",
        "security:attack", "tactic:TA0006-credential-access", "mitre_platform:identity-provider"],
        "version": 88, "id": "def-000-wte", "updatedAt": 1736369665488, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "OneLogin API Token Created", "createdAt":
        1732181527698, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:onelogin @evt.name:API_CREDENTIAL_CREATED", "groupByFields": ["@usr.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "onelogin_api_token_created"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "onelogin_api_token_created > 0"}], "message": "## Goal\n\nDetect when a new
        OneLogin API token is created.\n\n## Strategy\n\nThis rule lets you monitor
        the OneLogin generated audit event to detect when a new API token is created.\n\n##
        Triage and response\n\n1. Contact the user who created the API token and ensure
        that the API token is needed.\n", "tags": ["source:onelogin", "technique:T1098-account-manipulation",
        "mitre_platform:identity-provider", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:onelogin",
        "tactic:TA0003-persistence", "security:attack", "technique:T1098-account-manipulation",
        "mitre_platform:identity-provider"], "version": 20, "id": "def-008-4ba", "updatedAt":
        1736369666112, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "OneLogin API activity from malicious IP address", "createdAt": 1732181521664,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:onelogin
        @evt.name:*API* (@threat_intel.results.intention:malicious OR @threat_intel.results.category:(tor))",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "onelogin_api_activity_malicious"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "onelogin_api_activity_malicious > 0"}], "message": "## Goal\n\nDetect
        and investigate OneLogin API activity originating from suspicious IP addresses,
        which may indicate potential unauthorized access attempts or malicious API
        interactions.\n\n## Strategy\n\nThis rule monitors activities within OneLogin,
        focusing specifically on actions initiated by users via the API. It flags
        activities where the source IP address has been identified with suspicious
        or malicious indicators, such as associations with botnet proxies, known malicious
        intent, or anonymization services like Tor.\n\n## Triage and Response\n\n1.
        Verify user activity: Check if the user associated with the alert (`{{@usr.name}}`)
        has a legitimate reason for API interactions from the flagged IP.\n\n2. Investigate
        suspicious IP:\n\n   - Review logs related to the flagged IP to determine
        if it has been involved in other potentially malicious actions.\n   - Use
        threat intelligence sources or IP investigation tools to gather context on
        the flagged IP\u2019s reputation and any recent malicious activity.\n\n3.
        Containment and remediation:\n   - If the activity is confirmed unauthorized,
        consider blocking the IP address at the network level.\n   - Review and rotate
        API keys or admin credentials associated with the suspicious activity to prevent
        further unauthorized access.\n", "tags": ["source:onelogin", "technique:T1078-valid-accounts",
        "mitre_platform:identity-provider", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1078-valid-accounts",
        "source:onelogin", "tactic:TA0001-initial-access", "security:attack", "mitre_platform:identity-provider"],
        "version": 21, "id": "def-000-8yj", "updatedAt": 1736369666098, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "OneLogin administrator assumed a user",
        "createdAt": 1656425876019, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:onelogin @evt.name:USER_ASSUMED_USER", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "admin_assumed_user"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "admin_assumed_user > 0"}], "message": "## Goal\nDetect when a OneLogin user
        with appropriate privileges assumes another OneLogin user''s identity. Logging
        in as another user allows the user to view another OneLogin user''s account
        and perform actions on their behalf. \n\n## Strategy\nThis rule lets you monitor
        the following OneLogin events to detect when an administrator assumes another
        OneLogin user''s identity:\n\n* `@evt.name:USER_ASSUMED_USER`\n\n## Triage
        and response\n1. Determine whether the user (`{{@usr.name}}`) should be legitimately
        assuming another user''s identity.\n2. If the activity was not legitimate,
        review all activity from `{{@usr.name}}` and the IP (`{{@network.client.ip}}`)
        associated with this signal. \n", "tags": ["tactic:TA0004-privilege-escalation",
        "source:onelogin", "scope:onelogin", "technique:T1078-valid-accounts", "mitre_platform:identity-provider",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "source:onelogin",
        "mitre_platform:identity-provider", "scope:onelogin", "security:attack", "tactic:TA0004-privilege-escalation",
        "technique:T1078-valid-accounts"], "version": 87, "id": "1c3-d0v-jv0", "updatedAt":
        1736369666098, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "OneLogin brute force attack on user", "createdAt": 1732181527700, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:onelogin @evt.name:USER_FAILED_ONELOGIN_LOGIN
        @evt.outcome:failure", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "failed_login"},
        {"query": "source:onelogin @evt.name:USER_LOGGED_INTO_ONELOGIN @evt.outcome:success",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "successful_login"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "Successful", "status": "medium", "notifications":
        [], "condition": "failed_login > 5 THEN successful_login >= 1"}], "message":
        "## Goal\n\nDetect a brute force attack on a user.\n\n## Strategy\n\nTo identify
        a successful attempt: Detect when the same user fails to log in five times,
        and then successfully logs in. This generates a `MEDIUM` severity signal.\n\nTo
        identify an unsuccessful attempt: Detect when the same user fails to log in
        five times. This generates an `INFO` severity signal.\n\n## Triage and response\n\n1.
        Inspect the logs to see if this was a valid login attempt.\n2. Verify if 2FA
        was authenticated.\n3. If the user was compromised, rotate user credentials.\n",
        "tags": ["source:onelogin", "tactic:TA0006-credential-access", "technique:T1110-brute-force",
        "mitre_platform:identity-provider", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "source:onelogin", "security:attack", "technique:T1110-brute-force",
        "tactic:TA0006-credential-access", "mitre_platform:identity-provider"], "version":
        21, "id": "def-001-88l", "updatedAt": 1736369666112, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "OneLogin user granted administrative
        privileges", "createdAt": 1656425876176, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:onelogin @evt.name:PRIVILEGE_GRANTED_TO_USER",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "user_granted_admin_privileges"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "user_granted_admin_privileges > 0"}], "message": "## Goal\nDetect
        when a OneLogin administrator grants additional privileges to another OneLogin
        user.\n\n## Strategy\nThis rule lets you monitor the following OneLogin events
        to detect when an administrator grants additional privileges to another OneLogin
        user:\n\n* `@evt.name:PRIVILEGE_GRANTED_TO_USER`\n\n## Triage and response\n1.
        Determine whether the user (`{{@actor_user_name}}`) should be legitimately
        adding additional roles to `@usr.name`. **Note:** The role granted to the
        user is not available in OneLogin logs.\n2. If the activity was not legitimate,
        review all activity from `{{@actor_user_name}}` and the IP (`{{@network.client.ip}}`)
        associated with this signal. ", "tags": ["source:onelogin", "technique:T1098-account-manipulation",
        "scope:onelogin", "mitre_platform:identity-provider", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1098-account-manipulation",
        "source:onelogin", "mitre_platform:identity-provider", "tactic:TA0003-persistence",
        "scope:onelogin", "security:attack"], "version": 87, "id": "b2t-p3g-d09",
        "updatedAt": 1736369666713, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "OneLogin user locked out", "createdAt": 1656516573131,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:onelogin
        @evt.name:USER_LOCKED", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "user_locked_out"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "user_locked_out > 0"}], "message": "## Goal\nDetect when
        a OneLogin user is locked out. This may be common if the user is repeatedly
        failing to log in. This rule is most useful when correlated with other anomalous
        activity for the user.\n\n## Strategy\nThis rule lets you monitor the following
        OneLogin events to when a user is locked out:\n* `@evt.name:USER_LOCKED`\n\n##
        Triage and response\n1. Determine whether the user (`{{@usr.name}}`) was legitimately
        trying to authenticate and was locked out.\n2. If the activity was not legitimate,
        review all activity from the IP (`{{@network.client.ip}}`) associated with
        this signal. ", "tags": ["source:onelogin", "scope:onelogin", "tactic:TA0006-credential-access",
        "technique:T1110-brute-force", "mitre_platform:identity-provider", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:onelogin",
        "mitre_platform:identity-provider", "technique:T1110-brute-force", "security:attack",
        "scope:onelogin", "tactic:TA0006-credential-access"], "version": 87, "id":
        "im7-3xo-xff", "updatedAt": 1736369666860, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "OneLogin user viewed secure note", "createdAt":
        1656425876391, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:onelogin @evt.name:USER_VIEWED_NOTE", "groupByFields": ["@actor_user_name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "viewed_secure_note"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "info", "notifications": [], "condition": "viewed_secure_note
        > 0"}], "message": "## Goal\nDetect when a OneLogin user views a secure note.\n\n##
        Strategy\nThis rule lets you monitor the following OneLogin events to detect
        when a user views a secure note:\n\n* `@evt.name:PRIVILEGE_GRANTED_TO_USER`\n\nThis
        rule is useful when correlating its findings with other anomalous events from
        the same OneLogin user (`{{@actor_user_name}}`).\n\n## Triage and response\n1.
        Determine whether the OneLogin user (`{{@actor_user_name}}`) should be legitimately
        accessing secure notes.\n2. If the activity was not legitimate, review all
        activity from `{{@actor_user_name}}` and the IP (`{{@network.client.ip}}`)
        associated with this signal. ", "tags": ["source:onelogin", "scope:onelogin",
        "mitre_platform:identity-provider", "tactic:TA0007-discovery", "security:attack",
        "mitre_platform:cloud", "technique:T1526-cloud-service-discovery"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1526-cloud-service-discovery",
        "mitre_platform:cloud", "source:onelogin", "mitre_platform:identity-provider",
        "tactic:TA0007-discovery", "scope:onelogin", "security:attack"], "version":
        87, "id": "xbm-10x-93a", "updatedAt": 1736369666847, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Palo Alto Networks Firewall - command
        and control traffic observed", "createdAt": 1699662607420, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:pan.firewall @type:THREAT
        @severity:(high OR critical) @thr_category:(command-and-control OR dns-c2
        OR inline-cloud-c2)", "groupByFields": ["host"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "pan_high_critical_from_sever"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "pan_high_critical_from_sever > 5"}], "message": "## Goal\nDetect
        when Palo Alto Networks (PAN) Firewall detects command and control activity.\n\n##
        Strategy\nThis rule monitors when PAN Firewall threat logs detect command
        and control activity. Threat logs display entries when traffic matches one
        of the [security profiles][1] attached to a security rule on the firewall.\n\n##
        Triage and response\n1. Determine if this network traffic is expected for
        this host `{{ host }}`.\n    * Look for consistent connections over time.\n    *
        Work with the system owners to understand if it is normal.\n    * Investigate
        if there are any relevant host based alerts.\n2. If the network traffic is
        unexpected, begin your organization''s incident response process and investigate.\n3.
        If it is a false positive, consider including the IP or host in a suppression
        list. See [Best practices for creating detection rules with Datadog Cloud
        SIEM][2] for more information.\n\n[1]: https://docs.paloaltonetworks.com/pan-os/9-1/pan-os-admin/policy/security-profiles#id6272be37-1ce2-4374-a431-bfb1db9da9e0\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["scope:pan.firewall", "technique:T1071-application-layer-protocol",
        "mitre_platform:network", "tactic:TA0011-command-and-control", "source:pan.firewall",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["mitre_platform:network", "technique:T1071-application-layer-protocol",
        "source:pan.firewall", "security:attack", "scope:pan.firewall", "tactic:TA0011-command-and-control"],
        "version": 88, "id": "def-000-69d", "updatedAt": 1736369669437, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Palo Alto Networks Firewall - crypto
        mining activity observed", "createdAt": 1699662607407, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:pan.firewall @type:THREAT
        @thr_category:cryptominer", "groupByFields": ["host"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "pan_crypto_mining_activity_observed"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "pan_crypto_mining_activity_observed > 1"}], "message": "##
        Goal\nDetect when Palo Alto Networks (PAN) Firewall detects cryptomining activity.\n\n##
        Strategy\nThis rule monitors when PAN Firewall threat logs detect cryptomining
        activity. Threat logs display entries when traffic matches one of the [security
        profiles][1] attached to a security rule on the firewall.\n\n## Triage and
        response\n1. Determine if this network traffic is expected for this host `{{host}}`.\n    *
        Look for a consistent connections over time.\n    * Work with the system owners
        to understand if it is normal.\n    * Investigate if there are any relevant
        host based alerts.\n2. If the network traffic is unexpected, begin your organization''s
        incident response process and investigate.\n3. If it is a false positive,
        consider including the IP or host in a suppression list. See [Best practices
        for creating detection rules with Datadog Cloud SIEM][2] for more information.\n\n[1]:
        https://docs.paloaltonetworks.com/pan-os/9-1/pan-os-admin/policy/security-profiles#id6272be37-1ce2-4374-a431-bfb1db9da9e0\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["scope:pan.firewall", "tactic:TA0040-impact", "mitre_platform:network",
        "technique:T1496-resource-hijacking", "source:pan.firewall", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0040-impact", "mitre_platform:network", "source:pan.firewall",
        "security:attack", "scope:pan.firewall", "technique:T1496-resource-hijacking"],
        "version": 87, "id": "def-000-vwv", "updatedAt": 1736369669421, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "PingFederate Admin Alert: impossible
        travel by user", "createdAt": 1723546171478, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:ping-federate service:admin", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "metric":
        "@network.client.geoip", "metrics": ["@network.client.geoip"], "aggregation":
        "geo_data", "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod":
        "impossible_travel", "maxSignalDuration": 86400, "keepAlive": 21600, "impossibleTravelOptions":
        {"baselineUserLocations": true, "detectIpTransition": false}}, "cases": [{"name":
        "", "status": "low", "notifications": []}], "message": "## Goal\nDetect unusual
        logs from different geo locations made by a single user.\n\n## Strategy\nThe
        Impossible Travel detection type\u2019s algorithm compares the GeoIP data
        of the last log and the current log to determine if the user `{{@usr.name}}`
        traveled more than 500km at over 1,000km/h. This detection rule aims to identify
        potential threats early, allowing for timely investigation and mitigation
        to protect server resources and maintain service availability.\n\n## Triage
        and response\n\n1. Investigate the source user `{{@usr.name}}` with requests
        from different geo-locations from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`.\n2.
        Implement immediate measures to block or limit the impact of the suspicious
        activity if confirmed as a threat.", "tags": ["source:ping-federate", "technique:T1078-valid-accounts",
        "mitre_platform:identity-provider", "tactic:TA0001-initial-access", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1078-valid-accounts",
        "security:attack", "tactic:TA0001-initial-access", "source:ping-federate",
        "mitre_platform:identity-provider"], "version": 88, "id": "def-000-x64", "updatedAt":
        1736369669690, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "PingFederate Admin Alert: multiple failed login attempts in a short time
        period", "createdAt": 1723546173591, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:ping-federate service:admin @evt.name:LOGIN_ATTEMPT
        -@description:\"Login was successful\"", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "a > 6"}], "message": "## Goal\nDetect an unusually high
        number of failed login attempts by a user.\n\n## Strategy\nMonitor PingFederate
        logs where a user generates a high number of requests within a short period.
        This detection rule aims to identify potential threats early, allowing for
        timely investigation and mitigation to protect server resources and maintain
        service availability.\n\n## Triage and response\n1. Analyze the pattern and
        volume of requests to distinguish between legitimate traffic and potential
        attacks.\n2. Investigate the source user `{{@usr.name}}` to determine if the
        activity is malicious.\n3. Implement immediate measures to block or limit
        the impact of the suspicious activity if confirmed as a threat.", "tags":
        ["source:ping-federate", "tactic:TA0006-credential-access", "technique:T1078-valid-accounts",
        "technique:T1110-brute-force", "mitre_platform:identity-provider", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "security:attack", "tactic:TA0006-credential-access", "technique:T1110-brute-force",
        "mitre_platform:identity-provider", "source:ping-federate", "tactic:TA0001-initial-access",
        "technique:T1078-valid-accounts"], "version": 88, "id": "def-000-xur", "updatedAt":
        1736369669687, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "PingFederate Admin Alert: multiple login attempts by locked account in a
        short time period", "createdAt": 1723546173590, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:ping-federate service:admin @evt.name:LOGIN_ATTEMPT
        @description:\"Your account has been temporarily locked. Please contact your
        system administrator.\"", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "a > 6"}], "message": "## Goal\nDetect an unusually high
        number of login attempts by locked account.\n\n\n## Strategy\nMonitor PingFederate
        logs where a user generates a high number of login attempts by a locked account
        within a short period. This detection rule aims to identify potential threats
        early, allowing for timely investigation and mitigation to protect server
        resources and maintain service availability.\n\n## Triage and response\n1.
        Analyze the pattern and volume of requests to distinguish between legitimate
        traffic and potential attacks.\n2. Investigate the source user `{{@usr.name}}`
        to determine if the activity is malicious.\n3. Implement immediate measures
        to block or limit the impact of the suspicious activity if confirmed as a
        threat.", "tags": ["source:ping-federate", "tactic:TA0006-credential-access",
        "technique:T1078-valid-accounts", "technique:T1110-brute-force", "mitre_platform:identity-provider",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:attack", "tactic:TA0006-credential-access",
        "technique:T1110-brute-force", "mitre_platform:identity-provider", "source:ping-federate",
        "tactic:TA0001-initial-access", "technique:T1078-valid-accounts"], "version":
        88, "id": "def-000-h8d", "updatedAt": 1736369670339, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "PingFederate Audit Alert: multiple failed
        authentication attempts in a short time period", "createdAt": 1723546171490,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:ping-federate
        service:audit @evt.name:AUTHN_ATTEMPT @error.message:\"Invalid Credentials\"",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 6"}], "message": "## Goal\nDetect an unusually high number of failed
        authentication attempts in a short time period.\n\n## Strategy\nMonitor PingFederate
        logs where a user generates a high number of failed authentication attempts
        within a short period. This detection rule aims to identify potential threats
        early, allowing for timely investigation and mitigation to protect server
        resources and maintain service availability.\n\n## Triage and response\n1.
        Analyze the pattern and volume of requests to distinguish between legitimate
        traffic and potential attacks.\n2. Investigate the IP `{{@network.client.ip}}`
        to determine if the activity is malicious.\n3. Implement immediate measures
        to block or limit the impact of the suspicious activity if confirmed as a
        threat.", "tags": ["source:ping-federate", "technique:T1078-valid-accounts",
        "mitre_platform:identity-provider", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1078-valid-accounts",
        "tactic:TA0001-initial-access", "security:attack", "source:ping-federate",
        "mitre_platform:identity-provider"], "version": 88, "id": "def-000-tjk", "updatedAt":
        1736369670325, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "PingFederate Audit Alert: multiple failed slo login attempts in a short time
        period", "createdAt": 1723546171489, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:ping-federate service:audit @evt.name:SLO @evt.outcome:failure",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 6"}], "message": "## Goal\nDetect an unusually high number of failed
        SLO login attempts.\n\n## Strategy\nMonitor PingFederate logs where a user
        generates a high number of failed SLO login requests within a short period.
        This detection rule aims to identify potential threats early, allowing for
        timely investigation and mitigation to protect server resources and maintain
        service availability.\n\n## Triage and response\n1. Analyze the pattern and
        volume of requests to distinguish between legitimate traffic and potential
        attacks.\n2. Investigate the IP `{{@network.client.ip}}` to determine if the
        activity is malicious.\n3. Implement immediate measures to block or limit
        the impact of the suspicious activity if confirmed as a threat.", "tags":
        ["source:ping-federate", "technique:T1078-valid-accounts", "mitre_platform:identity-provider",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "security:attack", "source:ping-federate", "mitre_platform:identity-provider"],
        "version": 88, "id": "def-000-dvu", "updatedAt": 1736369670887, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "PingFederate Audit Alert: multiple failed
        sso login attempts in a short time period", "createdAt": 1723546173589, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:ping-federate
        service:audit @evt.name:SSO @evt.outcome:failure", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name": "", "status":
        "low", "notifications": [], "condition": "a > 6"}], "message": "## Goal\nDetect
        an unusually high number of failed SSO login attempts.\n\n## Strategy\nMonitor
        PingFederate logs where a user generates a high number of failed SSO login
        requests within a short period. This detection rule aims to identify potential
        threats early, allowing for timely investigation and mitigation to protect
        server resources and maintain service availability.\n\n## Triage and response\n1.
        Analyze the pattern and volume of requests to distinguish between legitimate
        traffic and potential attacks.\n2. Investigate the IP `{{@network.client.ip}}`
        to determine if the activity is malicious.\n3. Implement immediate measures
        to block or limit the impact of the suspicious activity if confirmed as a
        threat.", "tags": ["source:ping-federate", "technique:T1078-valid-accounts",
        "mitre_platform:identity-provider", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1078-valid-accounts",
        "tactic:TA0001-initial-access", "security:attack", "source:ping-federate",
        "mitre_platform:identity-provider"], "version": 88, "id": "def-000-wnt", "updatedAt":
        1736369670866, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Possible AWS EC2 privilege escalation via the modification of user data",
        "createdAt": 1652794195981, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @evt.name:StopInstances
        ((-@http.useragent:opsworks.amazonaws.com -@userIdentity.invokedBy:opsworks.amazonaws.com)
        (-@http.useragent:cloudformation.amazonaws.com -@userIdentity.invokedBy:cloudformation.amazonaws.com))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "stop_instance"}, {"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @evt.name:ModifyInstanceAttribute
        @requestParameters.userData:* ((-@http.useragent:opsworks.amazonaws.com -@userIdentity.invokedBy:opsworks.amazonaws.com)
        (-@http.useragent:cloudformation.amazonaws.com -@userIdentity.invokedBy:cloudformation.amazonaws.com))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "modify_instance_attribute"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @evt.name:StartInstances
        ((-@http.useragent:opsworks.amazonaws.com -@userIdentity.invokedBy:opsworks.amazonaws.com)
        (-@http.useragent:cloudformation.amazonaws.com -@userIdentity.invokedBy:cloudformation.amazonaws.com))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "start_instance"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "stop_instance > 0 && modify_instance_attribute > 0 && start_instance
        > 0"}], "message": "## Goal\nDetect a user attempting to modify a [user data
        script][1] on an EC2 instance.\n\n## Strategy\nThis rule allows you to monitor
        CloudTrail and detect if an attacker has attempted to modify the user data
        script on an EC2 instance using the following API calls:\n\n* [`StopInstances`][2]\n*
        [`ModifyInstanceAttribute`][3]\n* [`StartInstances`][4]\n\n## Triage and response\n1.
        Determine if `{{@userIdentity.session_name}}` should have modified the user
        data script associated with `{{host}}`.\n2. If the API calls were not made
        by the user:\n  * Rotate user credentials.\n  * Determine what other API calls
        were made by the user.\n  * Follow your company''s incident response process
        to determine the impact to `{{host}}`.\n  * Revert the user data script to
        the last known good state with the `aws-cli` command [modify-instance-attribute][5]
        or use the [AWS Console][6].\n3. If the API calls were made by the user:\n  *
        Determine if the user should be modifying this user data script.\n  * If No,
        see if other API calls were made by the user and determine if they warrant
        further investigation.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html\n[2]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StopInstances.html\n[3]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html\n[4]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartInstances.html\n[5]:
        https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-instance-attribute.html\n[6]:
        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html#user-data-view-change",
        "tags": ["tactic:TA0004-privilege-escalation", "scope:ec2", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:attack", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "scope:ec2", "iaas:aws", "tactic:TA0004-privilege-escalation"],
        "version": 87, "id": "bd9-8o0-553", "updatedAt": 1736369671017, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Possible RDS Snapshot exfiltration",
        "createdAt": 1629705619862, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventSource:rds.amazonaws.com @evt.name:ModifyDBClusterSnapshotAttribute
        @requestParameters.valuesToAdd:all", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "rds_snapshot_made_public"}, {"query": "source:cloudtrail @eventSource:rds.amazonaws.com
        @evt.name:(ModifyDBClusterSnapshotAttribute OR ModifyDBSnapshotAttribute)
        @requestParameters.attributeName:restore -@http.useragent:(*AWS_Lambda* OR
        *AWS_ECS_FARGATE* OR backup.amazonaws.com)", "groupByFields": ["@userIdentity.arn"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "rds_snapshot_shared"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "Snapshot was made public", "status": "high", "notifications": [], "condition":
        "rds_snapshot_made_public > 0"}, {"name": "Snapshot was shared", "status":
        "info", "notifications": [], "condition": "rds_snapshot_shared > 0"}], "message":
        "## Goal\nDetect a user attempting to exfiltrate data from an RDS Snapshot.\n\n##
        Strategy\nThis rule lets you monitor [ModifyDBClusterSnapshotAttribute][1]
        CloudTrail API calls to detect when an RDS snapshot is made public or shared
        with an AWS account.\n\nThis rule also inspects the:\n * `@requestParameters.valuesToAdd`
        array to determine if the string `all` is contained. This is the indicator
        which means the RDS snapshot is made public.\n * `@requestParameters.attributeName`
        array to determine if the string `restore` is contained. This is the indicator
        which means the RDS snapshot was shared with a new or unknown AWS Account.\n\n##
        Triage and response\n1. Confirm if the user: `{{@userIdentity.arn}}` intended
        to make the RDS snaphsot public.\n2. If the user did not make the API call:\n    *
        Rotate the credentials.\n    * Investigate if the same credentials made other
        unauthorized API calls.\n\n## Changelog\n11 October 2022 - Updated severity.\n\n[1]:
        https://awscli.amazonaws.com/v2/documentation/api/latest/reference/rds/modify-db-cluster-snapshot-attribute.html#modify-db-cluster-snapshot-attribute\n",
        "tags": ["iaas:aws", "technique:T1537-transfer-data-to-cloud-account", "source:cloudtrail",
        "scope:rds", "mitre_platform:iaas", "tactic:TA0010-exfiltration", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "tactic:TA0010-exfiltration", "source:cloudtrail", "technique:T1537-transfer-data-to-cloud-account",
        "mitre_platform:iaas", "iaas:aws", "scope:rds"], "version": 87, "id": "237-412-287",
        "updatedAt": 1736369671422, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Possible privilege escalation via AWS login profile manipulation",
        "createdAt": 1652794195841, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail -@level:Error @evt.name:(CreateLoginProfile
        OR UpdateLoginProfile)", "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "login_profile_manipulation"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "login_profile_manipulation > 0"}], "message": "## Goal\nDetect
        a user or role attempting to create or update the password for a specified
        IAM user.\n\n## Strategy\nThis rule allows you to monitor CloudTrail and detect
        if an attacker has attempted to create or update a password for an IAM user
        using the [`CreateLoginProfile`][1] or [`UpdateLoginProfile`][2] API calls
        respectively.\n\n## Triage and response\n1. Determine if `{{@userIdentity.session_name}}`
        should have made a `{{@evt.name}}` API call.\n2. If the API call was not made
        by the user:\n  * Rotate user credentials.\n  * Determine what other API calls
        were made by the user.\n  * Remove any passwords generated by the user with
        the `aws-cli` command [delete-login-profile][3] or use the [AWS Console][4].\n3.
        If the API call was made by the user:\n  * Determine if the user should be
        performing this API call.\n  * If No, see if other API calls were made by
        the user and determine if they warrant further investigation.\n\n## ChangeLog\n27
        June 2023 - Updated rule query, name, case, goal and strategy to reflect login
        profile creation and login profile update.\n\n[1]: https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateLoginProfile.html\n[2]:
        https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateLoginProfile.html\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/iam/delete-login-profile.html\n[4]:
        https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_admin-change-user.html#id_credentials_passwords_admin-change-user_console",
        "tags": ["scope:iam", "iaas:aws", "technique:T1098-account-manipulation",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "tactic:TA0003-persistence",
        "security:attack", "technique:T1098-account-manipulation", "source:cloudtrail",
        "scope:iam", "mitre_platform:iaas", "iaas:aws"], "version": 87, "id": "fps-y8k-odm",
        "updatedAt": 1736369671404, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Potential Google Cloud cryptomining attack from Tor IP",
        "createdAt": 1682548601943, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.gce.network @evt.name:(beta.compute.networks.insert
        OR v*.compute.networks.insert) @threat_intel.results.category:tor", "groupByFields":
        ["project_id", "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "network_created_by_tor_ip"}, {"query":
        "source:gcp.gce.image @evt.name:v*.compute.images.insert @threat_intel.results.category:tor",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "image_created_by_tor_ip"},
        {"query": "source:gcp.gce.firewall.rule @evt.name:v*.compute.firewalls.insert
        @data.protoPayload.request.direction:EGRESS @data.protoPayload.request.destinationRanges:\"0.0.0.0/0\"
        threat_intel.results.category:tor", "groupByFields": ["project_id", "@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "firewall_rule_created_by_tor_ip"}, {"query": "source:gcp.gce.instance
        @evt.name:(v1.compute.instances.insert OR beta.compute.instances.insert) threat_intel.results.category:tor",
        "groupByFields": ["project_id", "@usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "compute_vms_created_by_tor_ip"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "after compute network creation",
        "status": "high", "notifications": [], "condition": "network_created_by_tor_ip
        > 0 && compute_vms_created_by_tor_ip > 0"}, {"name": "after compute image
        creation", "status": "high", "notifications": [], "condition": "image_created_by_tor_ip
        > 0 && compute_vms_created_by_tor_ip > 0"}, {"name": "after firewall rule
        creation", "status": "high", "notifications": [], "condition": "firewall_rule_created_by_tor_ip
        > 0 && compute_vms_created_by_tor_ip > 0"}], "message": "## Goal\nDetect when
        a Google Compute Engine cryptomining attack is observed from a Tor IP. \n\n##
        Strategy\nThis rule monitors Google Cloud Audit Logs to determine when a compute
        network creation, compute image creation, or firewall rule creation event
        coincides with the creation of a compute engine and originates from a Tor
        client. Datadog enriches all ingested logs with [expert-curated threat intelligence][1]
        in real time. An attacker may use a Tor client to anonymize their true origin.
        \n\n## Triage and response\n1. Determine if the actions `{{@evt.name}}` taken
        by the user `{{@usr.id}}` from Tor IP address: `{{@network.client.ip}}` are
        legitimate by looking at past activity and the type of API calls occurring.\n2.
        Furthermore, use the Cloud SIEM - IP Investigation & User Investigation dashboards
        to see if the IP address: `{{@network.client.ip}}` & `{{@usr.id}}` have taken
        other actions.\n3. If the results of the triage indicate that an attacker
        has taken the action, begin your company''s incident response process and
        investigate.\n\n## Changelog\n* 17 August 2023 - Updated query to replace
        attribute `@threat_intel.results.subcategory:tor` with `@threat_intel.results.category:tor`.\n\n[1]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["source:gcp", "tactic:TA0040-impact", "technique:T1496-resource-hijacking",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0040-impact",
        "mitre_platform:cloud", "source:gcp", "security:attack", "mitre_platform:iaas",
        "technique:T1496-resource-hijacking"], "version": 87, "id": "def-000-chb",
        "updatedAt": 1736369673302, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Potential Illicit Consent Grant attack via Azure registered
        application", "createdAt": 1658913080170, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:azure.activedirectory @evt.category:AuditLogs
        @evt.name:\"Consent to application\" @evt.outcome:success", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "azure_ad_successful_consent_to_application"}, {"query":
        "source:microsoft-365 @evt.category:AuditLogs @evt.name:\"Consent to application.\"
        @evt.outcome:Success", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "o365_successful_consent_to_application"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "azure_ad_successful_consent_to_application > 0 || o365_successful_consent_to_application
        > 0"}], "message": "## Goal\nDetects when a user grants an application consent
        to access their data. An adversary may create an Azure-registered application
        to access data such as contact information, emails, or documents.\n\n## Strategy\nMonitor
        Azure AD Audit logs for the following `@evt.name`:\n\n- `Consent to application`\n\nMonitor
        Microsoft 365 Audit logs for the following `@evt.name`:\n\n- `Consent to application.`\n\nBecause
        these are thirty-party applications external to the organization, normal remediation
        steps like resetting passwords for breached accounts or requiring Multi-Factor
        Authentication (MFA) on accounts are not effective against this type of attack.\n\n##
        Triage and response\n1. See the official [Microsoft playbook][1] on responding
        to a potential Illicit Consent Grant.\n2. If the activity is benign:\n    *
        Use the linked blog post in the suggested actions panel to tune out false
        positives.\n\n[1]: https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/detect-and-remediate-illicit-consent-grants?view=o365-worldwide",
        "tags": ["technique:T1566-phishing", "source:azure", "mitre_platform:saas",
        "scope:azure", "mitre_platform:office-suite", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "security:attack", "source:azure", "tactic:TA0001-initial-access", "technique:T1566-phishing",
        "mitre_platform:office-suite", "scope:azure"], "version": 87, "id": "l6w-nd1-kir",
        "updatedAt": 1736369673281, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Potential administrative port open to the world via AWS
        security group", "createdAt": 1652794196180, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @eventSource:ec2.amazonaws.com
        @eventName:(AuthorizeSecurityGroupIngress OR ModifySecurityGroupRules) ((@requestParameters.fromPort:(21
        OR 22 OR 23 OR 445 OR 2375 OR 3389 OR 5900 OR 5985 OR 5986) OR @requestParameters.ipPermissions.items.fromPort:(21
        OR 22 OR 23 OR 445 OR 2375 OR 3389 OR 5900 OR 5985 OR 5986) OR @requestParameters.toPort:(21
        OR 22 OR 23 OR 445 OR 2375 OR 3389 OR 5900 OR 5985 OR 5986) OR @requestParameters.ipPermissions.items.toPort:(21
        OR 22 OR 23 OR 445 OR 2375 OR 3389 OR 5900 OR 5985 OR 5986)) OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:(21
        OR 22 OR 23 OR 445 OR 2375 OR 3389 OR 5900 OR 5985 OR 5986) OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:(21
        OR 22 OR 23 OR 445 OR 2375 OR 3389 OR 5900 OR 5985 OR 5986))) ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))
        @http.useragent:cloudformation.amazonaws.com @userIdentity.invokedBy:cloudformation.amazonaws.com",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_opened_by_automated_service"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:21 OR @requestParameters.ipPermissions.items.fromPort:21
        OR @requestParameters.toPort:21 OR @requestParameters.ipPermissions.items.toPort:21)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:21
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:21))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_ftp_port"}, {"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:22 OR @requestParameters.ipPermissions.items.fromPort:22
        OR @requestParameters.toPort:22 OR @requestParameters.ipPermissions.items.toPort:22)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:22
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:22))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_ssh_port"}, {"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:3389 OR @requestParameters.ipPermissions.items.fromPort:3389
        OR @requestParameters.toPort:3389 OR @requestParameters.ipPermissions.items.toPort:3389)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:3389
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:3389))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_rdp_port"}, {"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:5900 OR @requestParameters.ipPermissions.items.fromPort:5900
        OR @requestParameters.toPort:5900 OR @requestParameters.ipPermissions.items.toPort:5900)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:5900
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:5900))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_vnc_port"}, {"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:2375 OR @requestParameters.ipPermissions.items.fromPort:2375
        OR @requestParameters.toPort:2375 OR @requestParameters.ipPermissions.items.toPort:2375)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:2375
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:2375))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_dockerd_port"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:5985 OR @requestParameters.ipPermissions.items.fromPort:5985
        OR @requestParameters.toPort:5985 OR @requestParameters.ipPermissions.items.toPort:5985)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:5985
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:5985))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_winrm_http_port"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:5986 OR @requestParameters.ipPermissions.items.fromPort:5986
        OR @requestParameters.toPort:5986 OR @requestParameters.ipPermissions.items.toPort:5986)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:5986
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:5986))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_winrm_https_port"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:23 OR @requestParameters.ipPermissions.items.fromPort:23
        OR @requestParameters.toPort:23 OR @requestParameters.ipPermissions.items.toPort:23)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:23
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:23))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_telnet_port"}, {"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:445 OR @requestParameters.ipPermissions.items.fromPort:445
        OR @requestParameters.toPort:445 OR @requestParameters.ipPermissions.items.toPort:445)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:445
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:445))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_smb_port"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Event generated by automated
        service", "status": "low", "notifications": [], "condition": "sg_opened_by_automated_service
        > 0"}, {"name": "FTP", "status": "medium", "notifications": [], "condition":
        "sg_ftp_port > 0"}, {"name": "SSH", "status": "medium", "notifications": [],
        "condition": "sg_ssh_port > 0"}, {"name": "RDP", "status": "medium", "notifications":
        [], "condition": "sg_rdp_port > 0"}, {"name": "VNC", "status": "medium", "notifications":
        [], "condition": "sg_vnc_port > 0"}, {"name": "Docker Daemon", "status": "medium",
        "notifications": [], "condition": "sg_dockerd_port > 0"}, {"name": "WinRm
        HTTP", "status": "medium", "notifications": [], "condition": "sg_winrm_http_port
        > 0"}, {"name": "WinRm HTTPS", "status": "medium", "notifications": [], "condition":
        "sg_winrm_https_port > 0"}, {"name": "Telnet", "status": "medium", "notifications":
        [], "condition": "sg_telnet_port > 0"}, {"name": "SMB", "status": "medium",
        "notifications": [], "condition": "sg_smb_port > 0"}], "message": "## Goal\nDetect
        when an AWS security group is opened to the world on a port commonly associated
        with an administrative service.\n\n## Strategy\nMonitor CloudTrail and detect
        when an AWS security group has been created or modified with one of the following
        API calls:\n* [`AuthorizeSecurityGroupIngress`][1]\n\nThis rule inspects the
        `@requestParameters.ipPermissions.items.ipRanges.items.cidrIp` or `@requestParameters.cidrIp`
        array to determine if either of the strings are contained - `0.0.0.0/0` or
        `::/0` for the following ports:\n* 21 (FTP)\n* 22 (SSH)\n* 23 (Telnet)\n*
        445 (SMB)\n* 2375 (Docker daemon)\n* 3389 (RDP)\n* 5900 (VNC)\n* 5985 (WinRM
        HTTP)\n* 5986 (WinRM HTTPS)\n\nAdministrative ports that are open to the world
        are a common target for attackers to gain unauthorized access to resources
        or data.\n\n**Note:** There is a separate rule to detect AWS [Security Group
        Open to the World][2].\n\n## Triage and response\n1. Determine if `{{@userIdentity.session_name}}`
        should have made a `{{@evt.name}}` API call.\n2. If the API call was not made
        by the user:\n  * Rotate the user credentials.\n  * Determine what other API
        calls were made by the user.\n  * Investigate VPC flow logs and OS system
        logs to determine if unauthorized access occurred.\n3. If the API call was
        made legitimately by the user:\n  * Advise the user to modify the IP range
        to the company private network or bastion host.\n4. Revert security group
        configuration back to known good state if required:\n  * Use the `aws-cli`
        command [`revoke-security-group-ingress`][3] or the [AWS console][4] to remove
        the rule.\n  * Use the `aws-cli` command [`modify-security-group-rules`][5]
        or [AWS console][6] to modify the existing rule.\n\n## Changelog\n* 26 August
        2022 - Updated rule query\n* 1 November 2022 - Updated rule query and severity.\n\n[1]:
        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html\n[2]:
        https://docs.datadoghq.com/security/default_rules/aws-security-group-open-to-world/\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html\n[4]:
        https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#deleting-security-group-rules\n[5]:
        https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-security-group-rules.html\n[6]:
        https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#updating-security-group-rules",
        "tags": ["scope:ec2", "iaas:aws", "requirement:Monitoring", "source:cloudtrail",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["technique:T1562-impair-defenses",
        "iaas:aws", "security:attack", "mitre_platform:iaas", "source:cloudtrail",
        "mitre_platform:cloud", "tactic:TA0005-defense-evasion", "scope:ec2", "requirement:Monitoring"],
        "version": 87, "id": "a3p-xtg-ryo", "updatedAt": 1736369673641, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Potential brute force attack detected",
        "createdAt": 1730191981988, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:abnormal-security @service:abnormal-security-audit-logs
        @evt.outcome:FAIL @evt.name:login", "groupByFields": ["@user.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "abnormal_security_failed_login"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "abnormal_security_failed_login > 5"}], "message": "## Goal\nDetect
        when a user fails to log in to Abnormal Security an unusually high number
        of times.\n\n## Strategy\nThis rule monitors for failed user logins, which
        may indicate that an attacker has gained access to the user credentials and
        accessed the account.\n\n## Triage and response\n1. Investigate the other
        actions performed by the user `{{@user.email}}`.\n2. If confirmed as a threat,
        implement measures to block or limit the impact of the suspicious activity.\n3.
        Follow company procedures for handling malicious files, including isolating
        the endpoint, running antivirus/antimalware scans, analyzing logs, and updating
        security policies.", "tags": ["tactic:TA0006-credential-access", "mitre_platform:saas",
        "technique:T1110-brute-force", "source:abnormal-security", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "source:abnormal-security", "technique:T1110-brute-force", "mitre_platform:saas",
        "tactic:TA0006-credential-access"], "version": 19, "id": "def-000-u3z", "updatedAt":
        1736369673611, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Potential brute force attack on AWS ConsoleLogin", "createdAt": 1629705613111,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Failure", "groupByFields":
        ["@userIdentity.accountId", "@userIdentity.userName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "failed_login"},
        {"query": "source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success
        (@userIdentity.sessionContext.attributes.mfaAuthenticated:false OR @additionalEventData.MFAUsed:No)",
        "groupByFields": ["@userIdentity.accountId", "@userIdentity.userName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "successful_login_without_mfa"},
        {"query": "source:cloudtrail @evt.name:ConsoleLogin @responseElements.ConsoleLogin:Success
        (@userIdentity.sessionContext.attributes.mfaAuthenticated:true OR @additionalEventData.MFAUsed:Yes)",
        "groupByFields": ["@userIdentity.accountId", "@userIdentity.userName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "successful_login_with_mfa"}],
        "options": {"evaluationWindow": 900, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "Successful - MFA Unused", "status":
        "medium", "notifications": [], "condition": "failed_login > 5 && successful_login_without_mfa
        > 0"}, {"name": "Successful Login - MFA Used", "status": "info", "notifications":
        [], "condition": "failed_login > 5 && successful_login_with_mfa > 0"}, {"name":
        "Failed Login", "status": "info", "notifications": [], "condition": "failed_login
        > 5"}], "message": "## Goal\nDetect when a user is a victim of an Account
        Take Over (ATO) by a brute force attack.\n\n## Strategy\n This rule monitors
        CloudTrail and detects when any `@evt.name` has a value of `Console Login`,
        and `@responseElements.ConsoleLogin` has a value of `Failure`.\n\n## Triage
        and response\n1. Determine if the user logged in with 2FA.\n2. Reach out to
        the user and ensure the login was legitimate.\n\n## Changelog \n* 17 March
        2022 - Updated rule query.\n* 10 February 2023 - Updated rule query.\n* 10
        July 2023 - Updated group by fields.", "tags": ["scope:iam", "iaas:aws", "tactic:TA0006-credential-access",
        "source:cloudtrail", "technique:T1110-brute-force", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "security:attack",
        "tactic:TA0006-credential-access", "technique:T1110-brute-force", "source:cloudtrail",
        "scope:iam", "mitre_platform:iaas", "iaas:aws"], "version": 87, "id": "8d2-d0c-0b6",
        "updatedAt": 1736369673844, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Potential cryptomining detected through IP callback",
        "createdAt": 1649270598291, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "@threat_intel.results.category:cryptomining @network.destination.port:(6641
        OR 6642 OR 9000 OR 9999 OR 14433 OR 10191 OR 20009) host:*", "groupByFields":
        ["host"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "high", "notifications": [], "condition": "a > 0"}], "message":
        "## Goal\nDetect when a host is potentially infected with a cryptominer.\n\n##
        Strategy\nThis rule compares the `@network.client.ip` standard attribute to
        a curated list of cryptomining pools.\n\n## Triage and response\n1. Determine
        if the `{{host}}` host should be contacting a cryptomining pool.\n2. If not,
        begin your company''s IR process.\n\n**Note** You can use the signal sidepanel
        to assist with the initial investigation by looking at CPU utilization and
        processes to identify unauthorized activity.\n\n## Changelog\n* 8 April 2022
        - Initial beta release to select organizations.\n* 13 April 2022 - Added additional
        filters for specific ports to reduce false positives. \n* 26 April 2022 -
        Removed `restrictedToOrgs` settings, launching rule to all of production.\n",
        "tags": ["tactic:TA0040-impact", "mitre_platform:saas", "technique:T1496-resource-hijacking",
        "threat_intel_category:cryptomining", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0040-impact", "mitre_platform:cloud", "threat_intel_category:cryptomining",
        "security:attack", "mitre_platform:saas", "technique:T1496-resource-hijacking"],
        "version": 87, "id": "o2v-dml-922", "updatedAt": 1736369674059, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Potential database port open to the
        world via AWS security group", "createdAt": 1652794196385, "isDefault": true,
        "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted": false,
        "isDeprecated": false, "queries": [{"query": "source:cloudtrail @eventSource:ec2.amazonaws.com
        @eventName:(AuthorizeSecurityGroupIngress OR ModifySecurityGroupRules) ((@requestParameters.fromPort:(3306
        OR 5432 OR 1433 OR 27017 OR 6379 OR 5984 OR 6984 OR 9200) OR @requestParameters.ipPermissions.items.fromPort:(3306
        OR 5432 OR 1433 OR 27017 OR 6379 OR 5984 OR 6984 OR 9200) OR @requestParameters.toPort:(3306
        OR 5432 OR 1433 OR 27017 OR 6379 OR 5984 OR 6984 OR 9200) OR @requestParameters.ipPermissions.items.toPort:(3306
        OR 5432 OR 1433 OR 27017 OR 6379 OR 5984 OR 6984 OR 9200)) OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:(3306
        OR 5432 OR 1433 OR 27017 OR 6379 OR 5984 OR 6984 OR 9200) OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:(3306
        OR 5432 OR 1433 OR 27017 OR 6379 OR 5984 OR 6984 OR 9200))) ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))
        @http.useragent:cloudformation.amazonaws.com @userIdentity.invokedBy:cloudformation.amazonaws.com",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_opened_by_automated_service"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:3306 OR @requestParameters.ipPermissions.items.fromPort:3306
        OR @requestParameters.toPort:3306 OR @requestParameters.ipPermissions.items.toPort:3306)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:3306
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:3306))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_mysql_port"}, {"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:5432 OR @requestParameters.ipPermissions.items.fromPort:5432
        OR @requestParameters.toPort:5432 OR @requestParameters.ipPermissions.items.toPort:5432)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:5432
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:5432))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_postgres_port"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:1433 OR @requestParameters.ipPermissions.items.fromPort:1433
        OR @requestParameters.toPort:1433 OR @requestParameters.ipPermissions.items.toPort:1433)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:1433
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:1433))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_mssql_port"}, {"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:27017 OR @requestParameters.ipPermissions.items.fromPort:27017
        OR @requestParameters.toPort:27017 OR @requestParameters.ipPermissions.items.toPort:27017)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:27017
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:27017))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_mongodb_port"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:6379 OR @requestParameters.ipPermissions.items.fromPort:6379
        OR @requestParameters.toPort:6379 OR @requestParameters.ipPermissions.items.toPort:6379)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:6379
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:6379))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_redis_port"}, {"query":
        "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:5984 OR @requestParameters.ipPermissions.items.fromPort:5984
        OR @requestParameters.toPort:5984 OR @requestParameters.ipPermissions.items.toPort:5984)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:5984
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:5984))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_couchdb_http_port"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:6984 OR @requestParameters.ipPermissions.items.fromPort:6984
        OR @requestParameters.toPort:6984 OR @requestParameters.ipPermissions.items.toPort:6984)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:6984
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:6984))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_couchdb_https_port"},
        {"query": "source:cloudtrail @eventSource:ec2.amazonaws.com @eventName:(AuthorizeSecurityGroupIngress
        OR ModifySecurityGroupRules) ((@requestParameters.fromPort:9200 OR @requestParameters.ipPermissions.items.fromPort:9200
        OR @requestParameters.toPort:9200 OR @requestParameters.ipPermissions.items.toPort:9200)
        OR (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.FromPort:9200
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.ToPort:9200))
        ((@requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\") OR @requestParameters.cidrIp:(\"0.0.0.0/0\" OR \"::/0\"))  OR
        (@requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv4:\"0.0.0.0/0\"
        OR @requestParameters.ModifySecurityGroupRulesRequest.SecurityGroupRule.SecurityGroupRule.CidrIpv6:\"::/0\"))",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "sg_elastic_search_port"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Event generated by automated
        service", "status": "low", "notifications": [], "condition": "sg_opened_by_automated_service
        > 0"}, {"name": "MySQL", "status": "medium", "notifications": [], "condition":
        "sg_mysql_port > 0"}, {"name": "PostgresSQL", "status": "medium", "notifications":
        [], "condition": "sg_postgres_port > 0"}, {"name": "MSSQL", "status": "medium",
        "notifications": [], "condition": "sg_mssql_port > 0"}, {"name": "MongoDB",
        "status": "medium", "notifications": [], "condition": "sg_mongodb_port > 0"},
        {"name": "redis", "status": "medium", "notifications": [], "condition": "sg_redis_port
        > 0"}, {"name": "CouchDB HTTP", "status": "medium", "notifications": [], "condition":
        "sg_couchdb_http_port > 0"}, {"name": "CouchDB HTTPS", "status": "medium",
        "notifications": [], "condition": "sg_couchdb_https_port > 0"}, {"name": "Elasticsearch",
        "status": "medium", "notifications": [], "condition": "sg_elastic_search_port
        > 0"}], "message": "## Goal\nDetect when an AWS security group is opened to
        the world on a port commonly associated with a database service.\n\n## Strategy\nMonitor
        CloudTrail and detect when an AWS security group has been created or modified
        with one of the following API calls:\n* [`AuthorizeSecurityGroupIngress`][1]\n\nThis
        rule inspects the `@requestParameters.ipPermissions.items.ipRanges.items.cidrIp`
        or `@requestParameters.cidrIp` array to determine if either of the strings
        are contained - `0.0.0.0/0` or `::/0` for the following ports:\n* 1433 (MSSQL)\n*
        3306 (MySQL)\n* 5432 (PostgresSQL)\n* 5984/6984 (CouchDB)\n* 6379 (Redis)\n*
        9200 (Elasticsearch)\n* 27017 (MongoDB)\n\nDatabase ports that are open to
        the world are a common target for attackers to gain unauthorized access to
        resources or data.\n\n**Note:** A separate rule to detect AWS [Security Group
        Open to the World][2].\n\n## Triage and response\n1. Determine if `{{@userIdentity.session_name}}`
        should have made a `{{@evt.name}}` API call.\n2. If the API call was not made
        by the user:\n  * Rotate the user credentials.\n  * Determine what other API
        calls were made by the user.\n  * Investigate VPC flow logs and OS system
        logs to determine if unauthorized access occurred.\n3. If the API call was
        made legitimately by the user:\n  * Advise the user to modify the IP range
        to the company private network or bastion host.\n4. Revert security group
        configuration back to known good state if required:\n  * Use the `aws-cli`
        command [`revoke-security-group-ingress`][3] or the [AWS console][4] to remove
        the rule.\n  * Use the `aws-cli` command [`modify-security-group-rules`][5]
        or [AWS console][6] to modify the existing rule.\n\n## Changelog\n15 December
        2022 - Updated rule query and severity.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html\n[2]:
        https://docs.datadoghq.com/security/default_rules/aws-security-group-open-to-world/\n[3]:
        https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html\n[4]:
        https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#deleting-security-group-rules\n[5]:
        https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-security-group-rules.html\n[6]:
        https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#updating-security-group-rules",
        "tags": ["security:compliance", "scope:ec2", "iaas:aws", "requirement:Monitoring",
        "framework:cis-aws", "source:cloudtrail", "technique:T1562-impair-defenses",
        "control:4.10", "tactic:TA0005-defense-evasion", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0005-defense-evasion", "technique:T1562-impair-defenses",
        "requirement:Monitoring", "control:4.10", "iaas:aws", "mitre_platform:cloud",
        "framework:cis-aws", "source:cloudtrail", "mitre_platform:iaas", "security:compliance",
        "scope:ec2", "security:attack"], "version": 87, "id": "tb5-gf8-kj7", "updatedAt":
        1736369674064, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Process memory dumped using ProcDump", "createdAt": 1720453221635, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:sentinelone endpoint:edr_telemetry
        @evt.name:PROCESSCREATION @tgt.process.name:*procdump* @tgt.process.cmdline:*\\.dmp*",
        "groupByFields": ["@sentinelone.host_name"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "process_memory_dumped_using_procdump"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "process_memory_dumped_using_procdump > 0"}], "message":
        "## Goal\nDetect when ProcDump is used to dump process memory.\n\n## Strategy\nProcDump
        is a Sysinternals tool originally created to help troubleshoot running applications.
        Threat actors have used it to dump process memory in an attempt to extract
        credentials, often from the LSASS process. \n\n## Triage and response\n1.
        Identify what process is being dumped, and if it is authorized or expected.\n2.
        If it''s not authorized, isolate the host from the network.\n3. Follow your
        organization''s internal processes for investigating and remediating compromised
        systems.", "tags": ["mitre_platform:windows", "source:sentinelone", "scope:sentinelone",
        "technique:T1003-os-credential-dumping", "tactic:TA0006-credential-access",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["scope:sentinelone", "source:sentinelone", "technique:T1003-os-credential-dumping",
        "security:attack", "mitre_platform:windows", "tactic:TA0006-credential-access"],
        "version": 87, "id": "def-000-qrv", "updatedAt": 1736369676291, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Process memory dumped using the minidump
        function of comsvcs.dll", "createdAt": 1720453221374, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:sentinelone endpoint:edr_telemetry @evt.name:PROCESSCREATION
        @tgt.process.name:rundll32.exe @tgt.process.cmdline:(*MiniDump* AND *comsvcs*)",
        "groupByFields": ["@sentinelone.host_name"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "process_memory_dumped_using_minidump"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "process_memory_dumped_using_minidump > 0"}], "message":
        "## Goal\nDetect the minidump function of `comsvcs.dll` being used to dump
        process memory.\n\n## Strategy\nThreat actors are known to use tools found
        natively in a victim''s environment to accomplish their objectives. `comsvcs.dll`,
        a legitimate Windows DLL, has been abused by malicious actors in the past
        to dump process memory, notably from LSASS in an attempt to extract credentials.
        \n\n## Triage and response\n1. Identify what process is being dumped, and
        confirm if it is authorized or expected.\n2. If it''s not authorized, isolate
        the host from the network.\n3. Follow your organization''s internal processes
        for investigating and remediating compromised systems.", "tags": ["mitre_platform:windows",
        "source:sentinelone", "scope:sentinelone", "technique:T1003-os-credential-dumping",
        "tactic:TA0006-credential-access", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:sentinelone",
        "source:sentinelone", "technique:T1003-os-credential-dumping", "security:attack",
        "mitre_platform:windows", "tactic:TA0006-credential-access"], "version": 87,
        "id": "def-000-zww", "updatedAt": 1736369676469, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "PsExec execution detected", "createdAt":
        1715872907598, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:windows.events (@evt.id:7045 OR evt.id:4697) @Event.EventData.Data.ServiceName:PSEXESVC",
        "groupByFields": ["@Event.System.Computer"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "new_psexec_service_created"},
        {"query": "source:windows.events @evt.id:5145 @Event.EventData.Data.ShareName:\"\\\\*\\IPC$\"
        ((@Event.EventData.Data.RelativeTargetName:*-stdin OR @Event.EventData.Data.RelativeTargetName:*-stdout
        OR @Event.EventData.Data.RelativeTargetName:*-stderr))", "groupByFields":
        ["@Event.System.Computer"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "network_file_share_access_psexec"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "new_psexec_service_created",
        "status": "high", "notifications": [], "condition": "new_psexec_service_created
        > 0"}, {"name": "network_file_share_access_psexec", "status": "high", "notifications":
        [], "condition": "network_file_share_access_psexec > 0"}], "message": "##
        Goal\nDetects when the Windows utility PsExec was executed on a system. PsExec
        is commonly utilized for executing processes remotely on Windows machines,
        often as part of legitimate system administration activity. This could be
        evidence of unauthorized remote access by an attcker.\n\n## Strategy\nMonitoring
        of Windows event logs where `@evt.id` is `7045` or `4697` and grouping by
        `@Event.System.Computer`, which detects service psexec service installation
        on a system./ logs where `@evt.id` is `5145` and grouping by `@Event.System.Computer`,
        where A network share object was checked to see whether client can be granted
        desired access by psexec.\n\n## Triage & Response\nVerify if the exection
        of psexec on `{{@@Event.System.Computer}}` is expected. If the execution was
        not intended isolate the system.", "tags": ["scope:windows", "mitre_platform:windows",
        "technique:T1569-system-services", "tactic:TA0002-execution", "source:windows",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["technique:T1569-system-services", "tactic:TA0002-execution",
        "security:attack", "mitre_platform:windows", "source:windows", "scope:windows"],
        "version": 87, "id": "def-000-w8e", "updatedAt": 1736369677326, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "SSH interesting hostname login notice
        from Zeek", "createdAt": 1713252889262, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:zeek service:notice @zeek.note:\"SSH::Interesting_Hostname_Login\"",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "zeek_interesting_hostname_login"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "zeek_interesting_hostname_login > 0"}], "message": "## Goal\nDetect
        the [SSH interesting hostname login notice][1].\n\n## Strategy\nThis rule
        monitors Zeek logs for the notice `SSH::Interesting_Hostname_Login`. The notice
        is generated if a login originates or responds with a host with a reverse
        hostname that looks suspicious.\n\n## Triage and response\n1. Identify the
        owners of the host that has been accessed.\n2. Work with the team to understand
        if this authentication was expected/legitimate.\n3. 3. If it is determined
        that the activity is malicious:\n    * Block the IP address, if it aligns
        with organization incident response processes.\n    * Begin your organization''s
        incident response process and investigate.\n\n[1]: https://docs.zeek.org/en/master/scripts/policy/protocols/ssh/interesting-hostnames.zeek.html",
        "tags": ["mitre_platform:network", "source:zeek", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:zeek",
        "security:attack", "mitre_platform:network"], "version": 87, "id": "def-000-1zk",
        "updatedAt": 1736369702404, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "SSH login by password guesser from Zeek", "createdAt":
        1713252889267, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:zeek service:notice @zeek.note:\"SSH::Login_By_Password_Guesser\"",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "zeek_login_by_password_guesser"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "zeek_login_by_password_guesser > 0"}], "message": "## Goal\nDetect
        the [SSH login by password guesser notice][1].\n\n## Strategy\nThis rule monitors
        Zeek logs for the notice `SSH::Login_By_Password_Guesser`. The notice is generated
        if a successful login attempt is detected for a host that has been previously
        identified as a \"password guesser\".\n\n## Triage and response\n1. Identify
        the owners of the host that has been accessed.\n2. Work with the team to understand
        if this authentication was expected/legitimate.\n3. If it is determined that
        the activity is malicious:\n    * Block the IP address, if it aligns with
        organization incident response processes.\n    * Begin your organization''s
        incident response process and investigate.\n\n[1]: https://docs.zeek.org/en/master/scripts/policy/protocols/ssh/detect-bruteforcing.zeek.html",
        "tags": ["tactic:TA0006-credential-access", "mitre_platform:network", "technique:T1110-brute-force",
        "source:zeek", "security:attack"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "source:zeek", "mitre_platform:network",
        "tactic:TA0006-credential-access", "technique:T1110-brute-force"], "version":
        87, "id": "def-000-xu9", "updatedAt": 1736369702381, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "SSH password guessing notice from Zeek",
        "createdAt": 1713252887668, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:zeek service:notice @zeek.note:\"SSH::Password_Guessing\"",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "zeek_ssh_password_guessing"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "zeek_ssh_password_guessing > 0"}], "message": "## Goal\nDetect
        the [SSH password guesser notice][1].\n\n## Strategy\nThis rule monitors Zeek
        logs for the notice `SSH::Password_Guessing`. The notice is generated when
        a host exceeds the failed logins `SSH::password_guesses_limit` threshold.\n\n##
        Triage and response\n1. Identify the owners of the host that has been accessed.\n2.
        Work with the team to understand if this authentication was expected/legitimate.\n3.
        If it is determined that the activity is malicious:\n    * Block the IP address,
        if it aligns with organization incident response processes.\n    * Begin your
        organization''s incident response process and investigate.\n\n[1]: https://docs.zeek.org/en/master/scripts/policy/protocols/ssh/detect-bruteforcing.zeek.html",
        "tags": ["tactic:TA0006-credential-access", "mitre_platform:network", "technique:T1110-brute-force",
        "source:zeek", "security:attack"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "source:zeek", "mitre_platform:network",
        "tactic:TA0006-credential-access", "technique:T1110-brute-force"], "version":
        87, "id": "def-000-79f", "updatedAt": 1736369702438, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "SSH watched country login notice from
        Zeek", "createdAt": 1713252889277, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:zeek service:notice @zeek.note:\"SSH::Watched_Country_Login\"",
        "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "zeek_watched_country_login"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "zeek_watched_country_login > 0"}], "message": "## Goal\nDetect
        the SSH [watched country login notice][1].\n\n## Strategy\nThis rule monitors
        Zeek logs for the notice `SSH::Watched_Country_Login`. The notice is generated
        if an SSH login is seen originating to or from a \"watched\" country based
        on the `SSH::watched_countries` variable.\n\n## Triage and response\n1. Identify
        the owners of the host that has been accessed.\n2. Work with the team to understand
        if this authentication was expected/legitimate.\n3. If it is determined that
        the activity is malicious:\n    * Block the IP address, if it aligns with
        organization incident response processes.\n    * Begin your organization''s
        incident response process and investigate.\n\n[1]: https://docs.zeek.org/en/master/scripts/policy/protocols/ssh/geo-data.zeek.html",
        "tags": ["mitre_platform:network", "source:zeek", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:zeek",
        "security:attack", "mitre_platform:network"], "version": 87, "id": "def-000-jhq",
        "updatedAt": 1736369703504, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Salesforce Brute force attack on user", "createdAt":
        1629705617845, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:salesforce @status:\"Invalid Password\"", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "failed_login"}, {"query": "source:salesforce @status:Success", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "successful_login"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "Successful", "status": "medium", "notifications": [],
        "condition": "failed_login>5 && successful_login>=1"}, {"name": "Attempt",
        "status": "info", "notifications": [], "condition": "failed_login>10"}], "message":
        "## Goal\nDetect a brute force attack on a Salesforce user. \n\n## Strategy\n**To
        determine a successful attempt:** Detect when the same user fails to login
        five times and then successfully logs in. This generates a `MEDIUM` severity
        signal.\n\n**To determine an unsuccessful attempt:** Detect when the same
        user fails to login ten times. This generates an `INFO` severity signal.\n\n##
        Triage and response\n1. Inspect the logs to see if this was a valid login
        attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised,
        rotate user credentials.\n", "tags": ["source:salesforce", "tactic:TA0006-credential-access",
        "scope:salesforce", "mitre_platform:saas", "technique:T1110-brute-force",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["source:salesforce", "scope:salesforce",
        "mitre_platform:cloud", "mitre_platform:saas", "technique:T1110-brute-force",
        "security:attack", "tactic:TA0006-credential-access"], "version": 87, "id":
        "gfg-cli-otv", "updatedAt": 1736369704729, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Salesforce login from disabled account",
        "createdAt": 1629705616405, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:salesforce @evt.name:LoginEvent @status:\"User is Inactive\"",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "disabled_login"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "Multiple Attempts", "status": "medium", "notifications":
        [], "condition": "disabled_login > 10"}, {"name": "Single Attempt", "status":
        "info", "notifications": [], "condition": "disabled_login > 1"}], "message":
        "## Goal\nDetect when a disabled account attempts to log into Salesforce\n\n##
        Strategy\nInspect Salesforce logs and determine if there is a login attempt
        (`@evt.name:LoginEvent`) from from a disabled account (`@status:\\\"User is
        Inactive\\\"`). If more than ten attempts to authenticate to a disabled account
        a `MEDIUM` severity signal is created.\n\n## Triage and response\nDetermine
        if the IP (`@network.client.ip`) has attempted to log into other accounts.\n",
        "tags": ["source:salesforce", "tactic:TA0006-credential-access", "scope:salesforce",
        "mitre_platform:saas", "technique:T1110-brute-force", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["source:salesforce", "scope:salesforce", "mitre_platform:cloud", "mitre_platform:saas",
        "technique:T1110-brute-force", "security:attack", "tactic:TA0006-credential-access"],
        "version": 87, "id": "kcl-yns-z9l", "updatedAt": 1736369704719, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Scout Suite user agent observed", "createdAt":
        1701763061895, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gcp.* @http.useragent:*ScoutSuite*", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "scoutsuite_user_agent_gcp"}, {"query": "source:cloudtrail @http.useragent:*ScoutSuite*",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "scoutsuite_user_agent_cloudtrail"},
        {"query": "source:azure.* @http.useragent:*ScoutSuite*", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "scoutsuite_user_agent_azure"}, {"query": "source:kubernetes.audit
        @userAgent:*ScoutSuite*", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "scoutsuite_user_agent_k8s"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "scoutsuite_user_agent_azure > 0 || scoutsuite_user_agent_cloudtrail
        > 0 || scoutsuite_user_agent_gcp > 0 || scoutsuite_user_agent_k8s > 0"}],
        "message": "## Goal\nDetect when the [Scout Suite][1] user agent is observed.\n\n##
        Strategy\nThis rule monitors cloud audit logs with the user agent `ScoutSuite`.
        Scout Suite is an open source multi-cloud security-auditing tool, which enables
        security posture assessment of cloud environments. Using the APIs exposed
        by cloud providers, Scout Suite gathers configuration data for manual inspection
        and highlights risk areas. While this tool may be used legitimately by an
        organization to assess their security posture it can also be used by attackers
        as a means of discovery once they have gained unauthorized access to your
        cloud environment.\n\nThe following cloud providers are currently supported
        by Scout Suite:\n\n* Amazon Web Services\n* Microsoft Azure\n* Google Cloud
        Platform\n* Alibaba Cloud (alpha)\n* Oracle Cloud Infrastructure (alpha)\n*
        Kubernetes clusters on a cloud provider (alpha)\n\n## Triage and response\n1.
        Determine if your organization is using the Scout Suite tool to assess its
        security posture.\n2. If it is, consider adding a suppression for the Scout
        Suite''s identity or IP address. See this article on [Best practices for creating
        detection rules with Datadog Cloud SIEM][2] for more information.\n3. If the
        results of the triage indicate that this tool is not used by your organization,
        begin your company''s incident response process and an investigation.\n    *
        If appropriate, disable or rotate the affected credential/identity.\n    *
        Investigate any actions taken by the identity.\n\n[1]: https://github.com/nccgroup/ScoutSuite\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack",
        "technique:T1526-cloud-service-discovery", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "technique:T1526-cloud-service-discovery", "mitre_platform:iaas", "tactic:TA0007-discovery",
        "mitre_platform:cloud"], "version": 88, "id": "def-000-psn", "updatedAt":
        1736369705041, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Security group open to the world", "createdAt": 1629705613306, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail @evt.name:AuthorizeSecurityGroupIngress
        @requestParameters.ipPermissions.items.ipRanges.items.cidrIp:(\"0.0.0.0/0\"
        OR \"::/0\")", "groupByFields": ["@recipientAccountId"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "sg_open_to_world"}],
        "options": {"evaluationWindow": 7200, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "SG open to world", "status":
        "medium", "notifications": [], "condition": "sg_open_to_world > 0"}], "message":
        "## Goal\nDetect when an AWS security group is opened to the world.\n\n##
        Strategy\nMonitor CloudTrail and detect when an AWS security group has been
        created or modified with one of the following API calls:\n* [AuthorizeSecurityGroupIngress][1]\n\nThis
        rule inspects the `@requestParameters.ipPermissions.items.ipRanges.items.cidrIp`
        array to determine if either of the strings are contained:\n* `0.0.0.0/0`\n*
        `::/0`\n\n## Triage and response\n1. Determine who the user was who made this
        API call.\n2. Contact the user and see if this was an API call which was made
        by the user.\n3. If the API call was not made by the user:\n  * Rotate the
        user credentials and investigate what other API calls.\n  * Determine what
        other API calls the user made which were not made by the user.\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html\n\n##
        Changelog\n18 March 2022 - Updated rule query.\n", "tags": ["security:compliance",
        "scope:ec2", "iaas:aws", "framework:cis", "source:cloudtrail", "technique:T1562-impair-defenses",
        "control:cis-3.10", "tactic:TA0005-defense-evasion", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["tactic:TA0005-defense-evasion",
        "control:cis-3.10", "security:attack", "technique:T1562-impair-defenses",
        "mitre_platform:cloud", "mitre_platform:iaas", "security:compliance", "iaas:aws",
        "framework:cis", "scope:ec2", "source:cloudtrail"], "version": 87, "id": "6f3-c4d-9f0",
        "updatedAt": 1736369706751, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Security incident detected by Sqreen", "createdAt": 1629705619264,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": true, "queries": [{"query": "@evt.name:sq.dd0.incident  @sqreen.payload.severity:critical
        @sqreen.payload.event_type:create", "groupByFields": ["service", "@sqreen.payload.name"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@sqreen.payload.incident_id"],
        "aggregation": "cardinality", "name": "sqreen_critical_incidents"}, {"query":
        "@evt.name:sq.dd0.incident  @sqreen.payload.severity:major @sqreen.payload.event_type:create",
        "groupByFields": ["service", "@sqreen.payload.name"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@sqreen.payload.incident_id"], "aggregation": "cardinality",
        "name": "sqreen_major_incidents"}, {"query": "@evt.name:sq.dd0.incident  @sqreen.payload.severity:minor
        @sqreen.payload.event_type:create", "groupByFields": ["service", "@sqreen.payload.name"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@sqreen.payload.incident_id"],
        "aggregation": "cardinality", "name": "sqreen_minor_incidents"}], "options":
        {"evaluationWindow": 0, "detectionMethod": "threshold", "maxSignalDuration":
        0, "keepAlive": 0}, "cases": [{"name": "Critical", "status": "critical", "notifications":
        [], "condition": "sqreen_critical_incidents > 0"}, {"name": "Major", "status":
        "high", "notifications": [], "condition": "sqreen_major_incidents > 0"}, {"name":
        "Minor", "status": "medium", "notifications": [], "condition": "sqreen_minor_incidents
        > 0"}], "message": "# WARNING: This rule is being deprecated on 30 November
        2023.\n\n## Goal\nDetect a threat on your application.\n\n## Strategy\nThis
        rule creates a signal for every security incident created by Sqreen.\n\n##
        Triage and response\nReview the incident on the [Sqreen dashboard][1].\n\n[1]:
        https://my.sqreen.com/incidents\n\n## Changelog\n23 June 2022 - Updated groupby
        count to reduce rule noise.", "tags": ["mitre_platform:saas", "source:sqreen",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:saas", "mitre_platform:cloud",
        "source:sqreen"], "version": 3, "id": "x8x-2yk-m3b", "updatedAt": 1734518643831,
        "blocking": false, "deprecationDate": 1701302400000, "metadata": {"entities":
        null, "sources": null}, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "", "name": ""}}, {"name": "SentinelOne Alerts", "createdAt": 1720453187435,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "@evt.severity:Low",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@evt.severity:Medium",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@evt.severity:High", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}, {"query": "@evt.severity:Critical", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod":
        "third_party", "maxSignalDuration": 86400, "keepAlive": 1800, "thirdPartyRuleOptions":
        {"signalTitleTemplate": "SentinelOne custom alert - {{@evt.name}} on {{@agentRealtimeInfo.name}}",
        "defaultStatus": "medium", "rootQueries": [{"query": "source:sentinelone endpoint:cloud_detection_alerts",
        "groupByFields": ["@agentRealtimeInfo.name"]}], "defaultNotifications": []}},
        "cases": [{"name": "", "status": "low", "notifications": []}, {"name": "",
        "status": "medium", "notifications": []}, {"name": "", "status": "high", "notifications":
        []}, {"name": "", "status": "critical", "notifications": []}], "message":
        "## Goal\nDetect when SentinelOne raises a custom alert.\n\n## Strategy\nSentinelOne
        allows users to create custom rules from event search queries, that trigger
        alerts and response when the rule matches on the specified criteria.\n\n##
        Triage and response\n1. Investigate the SentinelOne custom alert to determine
        if it is malicious or benign.\n2. If the alert is benign, consider including
        the user, host or IP address in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][1] for more information.\n\n[1]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#customize-security-signal-messages-to-fit-your-environment",
        "tags": ["source:sentinelone", "scope:sentinelone", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:sentinelone", "source:sentinelone"], "version": 86, "id": "def-000-dzm",
        "updatedAt": 1736369707598, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "thirdPartyCases": [{"name": "", "status": "low", "notifications":
        [], "query": "@evt.severity:Low"}, {"name": "", "status": "medium", "notifications":
        [], "query": "@evt.severity:Medium"}, {"name": "", "status": "high", "notifications":
        [], "query": "@evt.severity:High"}, {"name": "", "status": "critical", "notifications":
        [], "query": "@evt.severity:Critical"}], "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "SentinelOne Threats", "createdAt": 1720453187427,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "@threatInfo.confidenceLevel:suspicious
        @threatInfo.mitigationStatus:mitigated", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}, {"query":
        "(@threatInfo.confidenceLevel:suspicious @threatInfo.mitigationStatus:not_mitigated)
        OR (@threatInfo.confidenceLevel:malicious @threatInfo.mitigationStatus:mitigated)",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}, {"query": "@threatInfo.confidenceLevel:malicious
        @threatInfo.mitigationStatus:not_mitigated", "groupByFields": [], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "none", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "third_party", "maxSignalDuration":
        86400, "keepAlive": 1800, "thirdPartyRuleOptions": {"signalTitleTemplate":
        "SentinelOne new threat detected - {{@evt.category}} - machine {{@agentRealtimeInfo.agentComputerName}}
        mitigation status - {{@threatInfo.mitigationStatus}}", "defaultStatus": "medium",
        "rootQueries": [{"query": "source:sentinelone endpoint:threats", "groupByFields":
        ["@agentRealtimeInfo.agentComputerName"]}], "defaultNotifications": []}},
        "cases": [{"name": "", "status": "low", "notifications": []}, {"name": "",
        "status": "medium", "notifications": []}, {"name": "", "status": "high", "notifications":
        []}], "message": "## Goal\nDetect when SentinelOne raises a threat.\n\n##
        Strategy\nA SentinelOne threat is generated when the agent detects suspicious
        or malicious activity. The confidence levels are:\n\n* Malicious - The Agent
        AI is very confident that the threat is malicious.\n* Suspicious - The Agent
        AI found traits that are suspicious, but not enough to mark it as malicious.\n\nThis
        confidence level is set by the SentinelOne Agent and cannot be changed.\n\n##
        Triage and response\n1. Investigate the SentinelOne threat to determine if
        it is malicious or benign.\n2. If the alert is benign, consider including
        the user, host or IP address in a suppression list. See [Best practices for
        creating detection rules with Datadog Cloud SIEM][1] for more information.\n\n[1]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#customize-security-signal-messages-to-fit-your-environment",
        "tags": ["source:sentinelone", "scope:sentinelone", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "scope:sentinelone", "source:sentinelone"], "version": 86, "id": "def-000-85o",
        "updatedAt": 1736369707788, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "thirdPartyCases": [{"name": "", "status": "low", "notifications":
        [], "query": "@threatInfo.confidenceLevel:suspicious @threatInfo.mitigationStatus:mitigated"},
        {"name": "", "status": "medium", "notifications": [], "query": "(@threatInfo.confidenceLevel:suspicious
        @threatInfo.mitigationStatus:not_mitigated) OR (@threatInfo.confidenceLevel:malicious
        @threatInfo.mitigationStatus:mitigated)"}, {"name": "", "status": "high",
        "notifications": [], "query": "@threatInfo.confidenceLevel:malicious @threatInfo.mitigationStatus:not_mitigated"}],
        "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Signal Sciences flagged an IP", "createdAt": 1629705618815, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:signal_sciences
        @title:*flag", "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 300, "keepAlive":
        300}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when an IP is flagged by Signal Sciences.\n\n##
        Strategy\nThis rule lets you monitor Signal Sciences events submitted through
        the Signal Sciences [integration][1] to detect when an IP is flagged. \n\n##
        Triage and response\n1. Determine whether the attack is a false positive.\n2.
        Determine whether the attack was successful.\n3. If the attack exploited a
        vulnerability in the application, triage the vulnerability.\n\n[1]: https://app.datadoghq.com/account/settings#integrations/sigsci\n",
        "tags": ["source:signal_sciences", "scope:signal_sciences"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:signal_sciences",
        "scope:signal_sciences"], "version": 86, "id": "4ec-343-f90", "updatedAt":
        1736369716159, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Slack Brute force attack on user", "createdAt": 1728590454388, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:slack service:audit-logs-service
        @evt.name:user_login_failed", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "failed_login"},
        {"query": "source:slack service:audit-logs-service @evt.name:user_login",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "successful_login"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "Successful", "status": "medium", "notifications":
        [], "condition": "failed_login>5 && successful_login>=1"}, {"name": "Attempt",
        "status": "info", "notifications": [], "condition": "failed_login>10"}], "message":
        "## Goal\n\nDetect a brute force attack on a Slack user.\n\n## Strategy\n\n**To
        determine a successful attempt:** Detect when the same user fails to login
        five times and then successfully logs in. This generates a `MEDIUM` severity
        signal.\n\n**To determine an unsuccessful attempt:** Detect when the same
        user fails to login ten times. This generates an `INFO` severity signal.\n\n##
        Triage and response\n\n1. Inspect the logs to see if this was a valid login
        attempt.\n2. See if 2FA was authenticated.\n3. If the user was compromised,
        rotate user credentials.\n", "tags": ["tactic:TA0006-credential-access", "mitre_platform:saas",
        "source:slack", "technique:T1110-brute-force", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:attack", "source:slack", "technique:T1110-brute-force",
        "mitre_platform:saas", "tactic:TA0006-credential-access"], "version": 87,
        "id": "def-002-otv", "updatedAt": 1736369716344, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack CLI login from suspicious IP address",
        "createdAt": 1728590448426, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:slack service:audit-logs-service @evt.name:cli_login (@threat_intel.results.intention:(suspicious
        OR malicious) OR @threat_intel.results.category:(botnet_proxy OR hosting_proxy))",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_cli_login"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "slack_cli_login > 0"}], "message": "## Goal\n\nDetect when a Slack CLI login
        occurs from a suspicious IP address.\n\n## Strategy\n\nThis rule monitors
        Slack events for CLI logins that originate from suspicious or unusual IP addresses.
        A CLI login from a risky IP could indicate unauthorized access, especially
        if it originates from a Tor exit node or an IP previously associated with
        malicious activity.\n\nPotential risks associated with suspicious CLI logins
        include:\n\n- Unauthorized access to Slack data, configurations, or admin-level
        actions.\n- Compromised user credentials allowing attackers to interact with
        the workspace through API calls.\n- Further infiltration into the organization''
        systems or data exfiltration.\n\n## Triage and response\n\n1. Determine if
        the login is expected by:\n\n   - Contacting the user `{{@usr.email}}` to
        confirm if they performed the CLI login from the identified IP address.\n   -
        Checking Slack logs for unusual activities after the login, such as privilege
        escalations, data downloads, or unauthorized API interactions.\n\n2. If the
        login is deemed suspicious or unauthorized:\n\n   - Begin your organization''s
        incident response process and investigate further.\n   - Terminate the session
        immediately to prevent continued access to the Slack environment.\n   - Reset
        the affected user''s credentials and enforce multi-factor authentication (MFA)
        to secure the account.\n   - Review recent activity associated with the account
        to identify any other compromised sessions or suspicious behavior.\n", "tags":
        ["mitre_platform:saas", "technique:T1078-valid-accounts", "source:slack",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "security:attack", "source:slack", "mitre_platform:saas"], "version": 87,
        "id": "def-004-oxv", "updatedAt": 1736369716730, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack IdP configuration changed", "createdAt":
        1705996363779, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:slack service:audit-logs-service @evt.name:(idp_configuration_added
        OR idp_configuration_deleted OR idp_prod_configuration_updated)", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "slack_idp_configuration_changed"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "slack_idp_configuration_changed > 0"}], "message": "## Goal\nDetect when
        there has been a modification to a Slack [identity provider][1] (IdP) configuration
        setting.\n\n## Strategy\nThis rule monitors Slack audit logs for when a configuration
        has been modified in Slack''s IdP settings. Attackers may try to modify authentication
        processes to access user credentials or gain unauthorized access to other
        accounts.\n\n## Triage and response\n1. Determine if the change taken by `{{@usr.email}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.\n\n[1]: https://slack.com/intl/en-gb/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org",
        "tags": ["technique:T1556-modify-authentication-process", "mitre_platform:saas",
        "source:slack", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "tactic:TA0003-persistence", "technique:T1556-modify-authentication-process",
        "security:attack", "source:slack", "mitre_platform:saas"], "version": 87,
        "id": "def-000-io7", "updatedAt": 1736369716731, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack SSO setting changed", "createdAt":
        1705996361449, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:slack service:audit-logs-service @evt.name:pref.sso_setting_changed",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_sso_setting_changed"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "slack_sso_setting_changed > 0"}], "message": "## Goal\nDetect
        when a change to [Single Sign On (SSO) restrictions][1] has occurred.\n\n##
        Strategy\nThis rule monitors Slack audit logs for when a change to SSO restrictions
        has occurred. Attackers may try to modify authentication processes to access
        user credentials or gain unauthorized access to other accounts.\n\n## Triage
        and response\n1. Determine if the change taken by `{{@usr.email}}` is authorized.\n2.
        If the change was not authorized or was unexpected, begin your organization''s
        incident response process and investigate.\n\n[1]: https://slack.com/intl/en-gb/help/articles/220403548-Manage-single-sign-on-settings",
        "tags": ["technique:T1556-modify-authentication-process", "mitre_platform:saas",
        "source:slack", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "tactic:TA0003-persistence", "technique:T1556-modify-authentication-process",
        "security:attack", "source:slack", "mitre_platform:saas"], "version": 87,
        "id": "def-000-9ue", "updatedAt": 1736369716762, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack anomaly event", "createdAt": 1705996363792,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:slack
        service:audit-logs-service @evt.name:anomaly", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "slack_anomaly_event"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 21600}, "cases": [{"name":
        "", "status": "low", "notifications": [], "condition": "slack_anomaly_event
        > 0"}], "message": "## Goal\n\nDetect when a Slack audit [anomaly event][1]
        is raised.\n\n## Strategy\n\nThis rule monitors Slack audit logs for when
        a Slack anomaly event is raised. Anomaly events are a special part of the
        Audit Logs API that help surface unexpected user behaviors. There will be
        a reason code published for any anomalous event. Anomalous events can include:\n\n-
        Excessive number of file downloads.\n- A Tor exit node was used.\n- Anomalous
        behaviour from an administrator account.\n\n## Triage and response\n\n1. Determine
        if the behaviour is expected by:\n   - Contacting the user for more information.\n   -
        Check for other signals and logs generated by the impacted user `{{@usr.email}}`,
        and look for deviations in the geolocation, ASN, or device properties.\n2.
        If the activity is deemed malicious:\n   - Begin your organization''s incident
        response process and investigate.\n\n[1]: https://api.slack.com/admins/audit-logs-anomaly\n",
        "tags": ["mitre_platform:saas", "source:slack", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "source:slack", "mitre_platform:cloud", "mitre_platform:saas"],
        "version": 87, "id": "def-000-ntd", "updatedAt": 1736369717131, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack data export download", "createdAt":
        1728590446529, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:slack service:audit-logs-service @evt.name:(channels_export_downloaded
        OR manual_export_downloaded OR manual_user_export_downloaded)", "groupByFields":
        ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "slack_data_export"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 21600},
        "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "slack_data_export > 5"}], "message": "## Goal\n\nDetect when a Slack export,
        such as a channel export, manual export, or manual user export, is downloaded.\n\n##
        Strategy\n\nThis rule monitors Slack events for when a channel export, manual
        export, or manual user export is downloaded. These export actions involve
        downloading a significant amount of Slack data, including conversations, files,
        and user information. Unauthorized exports could indicate a potential data
        breach, insider threat, or misuse of administrative privileges.\n\nPotential
        risks associated with these export actions include:\n\n- Unauthorized access
        to and exfiltration of sensitive company data.\n- Insider threats downloading
        and sharing confidential information.\n- Exposure of private conversations,
        files, and user details to unauthorized parties.\n\n## Triage and response\n\n1.
        Determine if the export download is expected by:\n   - Contacting the user
        or admin `{{@usr.email}}` who initiated the export to verify the legitimacy
        of the request.\n   - Reviewing the context and scope of the export, including:\n     -
        The type of data exported (e.g., specific channels or user data).\n     -
        The time and date of the export and the business justification for the action.\n   -
        Checking Slack logs for other unusual or suspicious activity by the user,
        such as mass downloads, file sharing, or privilege escalation.\n\n2. If the
        export is unauthorized or unexpected:\n   - Begin your organization''s incident
        response process and investigate further.\n   - Analyze the exported data
        for sensitive information, and determine the scope of exposure.\n   - Monitor
        for any further attempts to export data or download sensitive information
        across the workspace.\n", "tags": ["tactic:TA0009-collection", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "source:slack", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1213-data-from-information-repositories",
        "tactic:TA0009-collection", "security:attack", "source:slack", "mitre_platform:saas"],
        "version": 87, "id": "def-006-oxv", "updatedAt": 1736369717125, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack data loss prevention rule modified",
        "createdAt": 1705996361402, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:slack service:audit-logs-service @evt.name:(native_dlp_rule_deactivated
        OR native_dlp_violation_deleted)", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "slack_dlp_rule_deactivated"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "slack_dlp_rule_deactivated > 0"}], "message": "## Goal\nDetect
        when a Slack DLP rule is disabled or DLP violation is deleted.\n\n## Strategy\nThis
        rule monitors Slack audit logs for when a Slack DLP rule is disabled or DLP
        violation is deleted. [Slack DLP][1] scans messages and files sent by members
        of your organisation in channels and direct messages for content that violates
        custom rules that you create.\n\n## Triage and response\n1. Determine if the
        change taken by `{{@usr.email}}` is authorized.\n2. If the change was not
        authorized or was unexpected, begin your organization''s incident response
        process and investigate.\n\n## Changelog\n* 8 May 2024 - update detection
        rule severity from Low to Medium.\n\n[1]: https://slack.com/intl/en-gb/help/articles/12914005852819-Slack-Connect--Data-loss-prevention#:~:text=DLP%20admins%20can%20create%20custom,files%20from%20the%20DLP%20dashboard.",
        "tags": ["mitre_platform:saas", "technique:T1562-impair-defenses", "source:slack",
        "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:attack", "tactic:TA0005-defense-evasion",
        "source:slack", "technique:T1562-impair-defenses", "mitre_platform:saas"],
        "version": 88, "id": "def-000-oxv", "updatedAt": 1736369717142, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack enterprise organization created
        or deleted", "createdAt": 1705996363797, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:slack service:audit-logs-service @evt.name:organization_created",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_organization_created"}, {"query":
        "source:slack service:audit-logs-service @evt.name:organization_deleted",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_organization_deleted"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "created", "status": "low",
        "notifications": [], "condition": "slack_organization_created > 0"}, {"name":
        "deleted", "status": "low", "notifications": [], "condition": "slack_organization_deleted
        > 0"}], "message": "## Goal\nDetect when an organization has been [created][1]
        or [deleted][1] in Slack.\n\n## Strategy\nThis rule monitors Slack audit logs
        for when an organization has been created or deleted.\n\n## Triage and response\n1.
        Determine if the change taken by `{{@usr.email}}` is authorized.\n2. If the
        change was not authorized or was unexpected, begin your organization''s incident
        response process and investigate.\n\n[1]: https://slack.com/intl/en-gb/help/articles/206845317-Create-a-Slack-workspace\n[2]:
        https://slack.com/intl/en-gb/help/articles/204067366-Delete-a-workspace",
        "tags": ["technique:T1098-account-manipulation", "tactic:TA0040-impact", "technique:T1531-account-access-removal",
        "mitre_platform:saas", "source:slack", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["tactic:TA0003-persistence", "security:attack",
        "technique:T1531-account-access-removal", "mitre_platform:saas", "technique:T1098-account-manipulation",
        "source:slack", "tactic:TA0040-impact", "mitre_platform:cloud"], "version":
        88, "id": "def-000-uum", "updatedAt": 1736369717849, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack malicious content detected in
        uploaded file", "createdAt": 1728590454390, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:slack service:audit-logs-service @evt.name:file_malicious_content_detected",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_malicious_file_detected"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "slack_malicious_file_detected > 0"}], "message": "## Goal\n\nDetect
        when a malicious file is shared or uploaded within Slack.\n\n## Strategy\n\nThis
        rule monitors Slack for file uploads or shares that are flagged as potentially
        malicious. Files can be detected as malicious through integrated security
        tools or antivirus scanning mechanisms. Sharing of malicious files could lead
        to malware infections, data breaches, or other security risks if users inadvertently
        download or interact with the file.\n\n## Triage and response\n\n1. Determine
        if the file is truly malicious by:\n\n   - Reviewing the details of the flagged
        file, including file type, name, and hash, using security tools or integrated
        antivirus solutions.\n   - Identifying the user `{{@usr.email}}` who uploaded
        or shared the file and contacting them to determine if the file was shared
        intentionally or if their account may be compromised.\n   - Checking the activity
        logs of the user, including recent file uploads, message history, and other
        behaviors that could indicate compromised credentials or malicious intent.\n\n2.
        If the file is confirmed as malicious:\n\n   - Begin your organization''s
        incident response process to contain and investigate further.\n   - Quarantine
        the file: Remove the malicious file from Slack, ensuring no one else can download
        or access it.\n   - Instruct all users who interacted with the file to:\n     -
        Refrain from downloading the file.\n     - Run antivirus or endpoint detection
        tools on their systems to check for potential compromise.\n   - Review and
        block any additional files from the same source, and monitor Slack for similar
        uploads from the user or others in the organization.\n   - Investigate if
        the user''s account has been compromised, and if so, reset credentials and
        enforce multi-factor authentication (MFA).\n", "tags": ["tactic:TA0002-execution",
        "mitre_platform:saas", "source:slack", "technique:T1204-user-execution", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1204-user-execution",
        "tactic:TA0002-execution", "security:attack", "source:slack", "mitre_platform:saas"],
        "version": 87, "id": "def-003-oxv", "updatedAt": 1736369718177, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack manual export downloaded", "createdAt":
        1705996362716, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:slack service:audit-logs-service @evt.name:manual_export_downloaded",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_manual_export_downloaded"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "slack_manual_export_downloaded > 0"}], "message": "## Goal\nDetect
        when a Slack [manual export][1] has been downloaded.\n\n## Strategy\nThis
        rule monitors Slack audit logs for when a manual export has been downloaded.
        With Slack, you can export data from your workspace or Enterprise Grid organization,
        this includes messages and links to files in public channels, private channels,
        and direct messages.\n\n## Triage and response\n1. Determine if the change
        taken by `{{@usr.email}}` is authorized.\n2. If the change was not authorized
        or was unexpected, begin your organization''s incident response process and
        investigate.\n\n[1]: https://slack.com/intl/en-gb/help/articles/201658943-Export-your-workspace-data",
        "tags": ["tactic:TA0009-collection", "technique:T1213-data-from-information-repositories",
        "mitre_platform:saas", "source:slack", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1213-data-from-information-repositories",
        "tactic:TA0009-collection", "security:attack", "source:slack", "mitre_platform:saas"],
        "version": 88, "id": "def-000-epo", "updatedAt": 1736369718559, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack private channel converted to public",
        "createdAt": 1728590456747, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:slack service:audit-logs-service @evt.name:private_channel_converted_to_public",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_channel_visibility_changed"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "slack_channel_visibility_changed > 0"}], "message": "##
        Goal\n\nDetect when a Slack channel is changed from private to public.\n\n##
        Strategy\n\nThis rule monitors Slack events for when a channel''s privacy
        setting is modified from private to public. Changing a private channel to
        public can expose sensitive conversations, files, and information that were
        previously restricted. This action may be deliberate, accidental, or malicious,
        making it essential to track and verify the intent behind the change.\n\nPotential
        risks associated with this change include:\n\n- Exposure of sensitive or confidential
        information to a wider audience.\n- Unintended sharing of critical discussions
        with external collaborators or users.\n- Increased risk of data leaks or breaches
        if the channel contains sensitive information.\n\n## Triage and response\n\n1.
        Determine if the channel change is expected by:\n\n   - Contacting the channel
        owner or administrators to confirm if they authorized the change.\n   - Reviewing
        Slack logs related to the user `{{@usr.email}}` who performed the change,
        focusing on:\n     - The time of the change and surrounding activities.\n     -
        Unusual behavior or other changes, such as role modifications or new members
        added to the channel.\n   - Checking the content of the channel to assess
        whether it contains sensitive information that should not be public.\n\n2.
        If the activity is deemed unauthorized or malicious:\n\n   - Begin your organization''s
        incident response process to investigate further.\n   -  Immediately revert
        the channel back to private if it contains sensitive data.\n   - Review access
        permissions and ensure only trusted users can modify channel privacy settings.\n   -
        Investigate if any unauthorized users accessed the channel while it was public
        and evaluate potential exposure.\n", "tags": ["tactic:TA0009-collection",
        "technique:T1213-data-from-information-repositories", "mitre_platform:saas",
        "source:slack", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "technique:T1213-data-from-information-repositories", "tactic:TA0009-collection",
        "security:attack", "source:slack", "mitre_platform:saas"], "version": 87,
        "id": "def-009-oxv", "updatedAt": 1736369718724, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack two factor authentication requirement
        changed", "createdAt": 1705996362703, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:slack service:audit-logs-service @evt.name:pref.two_factor_auth_changed",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_two_factor_auth_changed"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "slack_two_factor_auth_changed > 0"}], "message": "## Goal\nDetect
        when Slacks two factor requirement has been changed.\n\n## Strategy\nThis
        rule monitors Slack audit logs for when a two-factor requirement has been
        changed. Attackers may try to modify authentication processes to access user
        credentials or gain unauthorized access to other accounts.\n\n## Triage and
        response\n1. Determine if the change taken by `{{@usr.email}}` is authorized.\n2.
        If the change was not authorized or was unexpected, begin your organization''s
        incident response process and investigate.\n\n[1]: https://slack.com/intl/en-gb/help/articles/204509068-Set-up-two-factor-authentication",
        "tags": ["technique:T1556-modify-authentication-process", "mitre_platform:saas",
        "source:slack", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "tactic:TA0003-persistence", "technique:T1556-modify-authentication-process",
        "security:attack", "source:slack", "mitre_platform:saas"], "version": 87,
        "id": "def-000-yl4", "updatedAt": 1736369719056, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack user logout due to suspicious
        activity", "createdAt": 1728590446452, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:slack service:audit-logs-service @evt.name:user_logout_compromised",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_user_logout_compromise"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "slack_user_logout_compromise > 0"}], "message": "## Goal\n\nAlert
        when a Slack user is logged out due to a detected compromised account.\n\n##
        Strategy\n\nThis rule monitors Slack events for when a user is logged out
        as a result of a detected compromise. Slack may log out users if they detect
        suspicious behavior indicative of account takeover. This could involve actions
        like unusual login patterns or unauthorized access attempts.\n\n## Triage
        and response\n\n1. Determine if the behavior is expected by:\n\n   - Contacting
        the user to confirm if they initiated any recent unusual actions.\n   - Checking
        Slack logs and other relevant logs for the user `{{@usr.email}}`, focusing
        on: Geolocation, IP address, and ASN.\n   - Determine if other actions were
        taken before being logged out such as file downloads and channel messages.\n\n2.
        If the activity is deemed malicious:\n\n   - Begin your organization''s incident
        response process and investigate.\n   - Force a password reset for the user.\n   -
        Review and revoke any suspicious OAuth integrations tied to the user''s account.\n   -
        Enable or enforce multi-factor authentication (MFA) if not already implemented
        for the user.\n", "tags": ["mitre_platform:saas", "technique:T1078-valid-accounts",
        "source:slack", "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "technique:T1078-valid-accounts", "tactic:TA0001-initial-access",
        "security:attack", "source:slack", "mitre_platform:saas"], "version": 87,
        "id": "def-002-oxv", "updatedAt": 1736369719068, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Slack user role elevated to administrative
        privileges", "createdAt": 1705996362696, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:slack service:audit-logs-service @evt.name:(role_change_to_admin
        OR role_change_to_owner)", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "slack_role_changed_to_admin_or_owner"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "slack_role_changed_to_admin_or_owner > 0"}], "message":
        "## Goal\nDetect when a Slack [users role][1] has been changed to an administrator
        or owner.\n\n## Strategy\nThis rule monitors Slack audit logs for when a Slack
        user''s role has been changed to an administrator or owner. Roles determine
        what people can see and do in Slack. There are administrative roles that are
        designed for people who are responsible for managing accounts and settings
        in Slack.\n\n## Triage and response\n1. Determine if the change taken by `{{@usr.email}}`
        is authorized.\n2. If the change was not authorized or was unexpected, begin
        your organization''s incident response process and investigate.\n\n## Changelog\n*
        8 May 2024 - update detection rule severity from Low to Medium.\n\n[1]: https://slack.com/intl/en-gb/help/articles/360018112273-Types-of-roles-in-Slack",
        "tags": ["tactic:TA0004-privilege-escalation", "technique:T1098-account-manipulation",
        "mitre_platform:saas", "source:slack", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "security:attack", "technique:T1098-account-manipulation",
        "source:slack", "mitre_platform:saas", "tactic:TA0004-privilege-escalation"],
        "version": 87, "id": "def-000-868", "updatedAt": 1736369719077, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake Brute force attack on user",
        "createdAt": 1716910405319, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:snowflake @evt.name:LOGIN @evt.outcome:NO @first_authentication_factor:PASSWORD",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "failed_login"}, {"query": "source:snowflake
        @evt.name:LOGIN @evt.outcome:YES @first_authentication_factor:PASSWORD", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "successful_login"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "Successful", "status": "high", "notifications": [], "condition":
        "failed_login>5 && successful_login>=1"}, {"name": "Attempt", "status": "info",
        "notifications": [], "condition": "failed_login>10"}], "message": "## Goal\nDetect
        a brute force attack on a Snowflake user. \n\n## Strategy\n**To determine
        a successful attempt:** Detect when the same user fails to login five times
        and then successfully logs in. This generates a `MEDIUM` severity signal.\n\n**To
        determine an unsuccessful attempt:** Detect when the same user fails to login
        ten times. This generates an `INFO` severity signal.\n\n## Triage and response\n1.
        Inspect the logs to see if this was a valid login attempt.\n2. See if 2FA
        was authenticated.\n3. If the user was compromised, rotate user credentials.\n",
        "tags": ["scope:snowflake", "tactic:TA0006-credential-access", "mitre_platform:saas",
        "source:snowflake", "technique:T1110-brute-force", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "mitre_platform:saas", "technique:T1110-brute-force",
        "scope:snowflake", "source:snowflake", "security:attack", "tactic:TA0006-credential-access"],
        "version": 87, "id": "def-000-otf", "updatedAt": 1736369719790, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake UI login via password", "createdAt":
        1718038547537, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:snowflake snowflake.table:login_history @first_authentication_factor:PASSWORD
        @reported_client_type:SNOWFLAKE_UI @evt.outcome:YES @evt.name:LOGIN", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "user_login_ui"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 3600, "keepAlive": 3600}, "cases": [{"name":
        "User logged in via Snowflake UI with a password", "status": "medium", "notifications":
        [], "condition": "user_login_ui > 0"}], "message": "## Goal\n\nDetect a user
        account login using a password for authentication directly into the Snowflake
        UI.\n\n## Strategy\n\nThis rule allows you to detect when an account uses
        a password to login to the Snowflake UI.\n\n## Triage and response\n\n1. Inspect
        the logs to identify the user or service account and associated IP address.\n2.
        Review the IP address against other logs associated with that user.\n3. Investigate
        whether that user has MFA enabled.\n4. If the IP address has not been observed
        in the past and MFA is not enabled, disable the user and rotate credentials.\n",
        "tags": ["scope:snowflake", "mitre_platform:saas", "source:snowflake", "technique:T1078-valid-accounts",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "mitre_platform:saas", "scope:snowflake", "source:snowflake",
        "tactic:TA0001-initial-access", "security:attack", "technique:T1078-valid-accounts"],
        "version": 87, "id": "def-000-oto", "updatedAt": 1736369719817, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake UI login via password from
        proxy or vpn", "createdAt": 1718038547479, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:snowflake @evt.name:LOGIN @threat_intel.results.category:*vpn
        @evt.outcome:YES @first_authentication_factor:PASSWORD", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "suspicious_login_from_vpn"}, {"query": "source:snowflake
        @evt.name:LOGIN @threat_intel.results.category:*proxy @evt.outcome:YES @first_authentication_factor:PASSWORD",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "suspicious_login_from_proxy"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Successful login via VPN", "status":
        "high", "notifications": [], "condition": "suspicious_login_from_vpn>=1"},
        {"name": "Successful login via Proxy", "status": "medium", "notifications":
        [], "condition": "suspicious_login_from_proxy>=1"}], "message": "## Goal\n\nDetect
        a user account login using a password for authentication directly into the
        Snowflake UI from a proxy or VPN service.\n\n## Strategy\n\nThis rule allows
        you to detect when an account uses a password to login to the Snowflake UI
        from a proxy or VPN service.\n\n## Triage and response\n\n1. Inspect the logs
        to identify the user or service account and associated IP address.\n2. Review
        the IP address against other logs associated with that user.\n3. Investigate
        whether that user has MFA enabled.\n4. If the IP address has not been observed
        in the past and MFA is not enabled, disable the user and rotate credentials.\n",
        "tags": ["scope:snowflake", "mitre_platform:saas", "source:snowflake", "technique:T1078-valid-accounts",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "mitre_platform:saas", "scope:snowflake", "source:snowflake",
        "tactic:TA0001-initial-access", "security:attack", "technique:T1078-valid-accounts"],
        "version": 87, "id": "def-000-ogf", "updatedAt": 1736369719827, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake abnormal usage of OAuth access
        token", "createdAt": 1718038547535, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:snowflake snowflake.table:login_history @first_authentication_factor:OAUTH_ACCESS_TOKEN
        -@reported_client_type:JDBC_DRIVER -@reported_client_type:ODBC_DRIVER -@reported_client_type:PYTHON_DRIVER
        -@reported_client_type:JAVASCRIPT_DRIVER -@network.client.ip:0.0.0.0", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "abnormal_oauth_token_usage"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "Abnormal Usage of OAuth Access Token", "status":
        "high", "notifications": [], "condition": "abnormal_oauth_token_usage>0"}],
        "message": "## Goal\n\nDetect abnormal OAuth access token usage in your Snowflake
        environment.\n\n## Strategy\n\nThis rule allows you to detect when an account
        authenticates with an OAuth access token outside an automated service/driver.\n\nOAuth
        access tokens act like digital keys that grant access to protected resources.\nIf
        an attacker compromises a user account, they might steal the associated access
        token.\n\nBy reviewing access token usage during an incident, you can identify
        unusual activity patterns. This could involve:\n\n- Access tokens being used
        from unexpected locations (attacker''s IP address).\n- Access tokens being
        used to access unauthorized resources.\n- A sudden spike in access token usage.\n\n##
        Triage and response\n\n1. Inspect the logs to see if the IP address is aligned
        with expected user or service account behavior.\n2. If the IP address has
        not been seen before and is followed by query activity, investigate the actions
        taken.\n3. If the account was compromised, recreate the access token.\n",
        "tags": ["scope:snowflake", "tactic:TA0006-credential-access", "mitre_platform:saas",
        "source:snowflake", "technique:T1528-steal-application-access-token", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "scope:snowflake", "source:snowflake", "security:attack", "technique:T1528-steal-application-access-token",
        "tactic:TA0006-credential-access"], "version": 87, "id": "def-000-oth", "updatedAt":
        1736369720069, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Snowflake anomalous querying of data by user", "createdAt": 1718038547474,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": true,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:snowflake
        snowflake.table:query_history", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@database.name"], "aggregation": "cardinality",
        "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 86400, "keepAlive": 7200}, "cases": [{"name": "", "status":
        "medium", "notifications": []}], "message": "## Goal\n\nDetect anomalous amount
        of data queried by a user account in your Snowflake environment.\n\n## Strategy\n\nThis
        rule allows you to detect when an account queries a anomalous amount of data
        in Snowflake.\n\n## Triage and response\n\n1. Inspect the logs to identify
        the user or service account and the table accessed.\n2. Investigate whether
        that user role is expected to access the specific table.\n3. Reach out to
        user if there are no signs of compromise and validate business use case.\n4.
        If there are signs of compromise, disable the user and rotate credentials.\n",
        "tags": ["scope:snowflake", "tactic:TA0009-collection", "mitre_platform:saas",
        "source:snowflake", "technique:T1530-data-from-cloud-storage", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1530-data-from-cloud-storage",
        "tactic:TA0009-collection", "mitre_platform:cloud", "mitre_platform:saas",
        "scope:snowflake", "source:snowflake", "security:attack"], "version": 87,
        "id": "def-000-otd", "updatedAt": 1736369720708, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake external access occurred",
        "createdAt": 1720550639438, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:snowflake snowflake.table:external_access", "groupByFields":
        ["@network.client.ip"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "metric": "@network.client.ip", "metrics": ["@network.client.ip"], "aggregation":
        "new_value", "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod":
        "new_value", "maxSignalDuration": 86400, "keepAlive": 3600, "newValueOptions":
        {"forgetAfter": 28, "learningDuration": 7, "learningThreshold": 0, "learningMethod":
        "duration"}, "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "",
        "status": "medium", "notifications": []}], "message": "## Goal\n\nDetect when
        an external access event occurs in your Snowflake environment.\n\n## Strategy\n\nThis
        rule allows you to detect when a new external access event occurs in Snowflake.
        Review any suspicious entries of external access performed by procedure or
        user-defined function (UDF) handler code within the last 365 days through
        the External Access History table. Unexpected use of external access for your
        environment is a potential indicator of compromise.\n\n## Triage and response\n\n1.
        Inspect the logs to identify the source cloud, source region, target cloud,
        target region, and query ID.\n2. Investigate whether the source and target
        cloud locations are expected.\n3. Using the query ID, correlate the behavior
        with Query History logs to determine the user, query, and other useful information.\n4.
        If there are signs of compromise, disable the user associated with the external
        access integration and rotate credentials.\n", "tags": ["scope:snowflake",
        "technique:T1199-trusted-relationship", "mitre_platform:saas", "source:snowflake",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1199-trusted-relationship", "mitre_platform:cloud", "mitre_platform:saas",
        "scope:snowflake", "source:snowflake", "tactic:TA0001-initial-access", "security:attack"],
        "version": 87, "id": "def-000-eer", "updatedAt": 1736369721001, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake known malicious client application
        session", "createdAt": 1720550640774, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:snowflake snowflake.table:sessions @client_environment.APPLICATION:(*rapeflake*)",
        "groupByFields": ["@client_environment.APPLICATION"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "snowflake_rapeflake_indicator_observed"},
        {"query": "source:snowflake snowflake.table:sessions @client_environment.APPLICATION:(*DBeaver*)
        @client_environment.OS:Windows", "groupByFields": ["@client_environment.APPLICATION"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "snowflake_dbeaver_indicator_observed"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "snowflake_rapeflake_indicator_observed >= 1 || snowflake_dbeaver_indicator_observed
        >= 1"}], "message": "## Goal\n\nDetect known malicious client applications
        interacting in your Snowflake environment.\n\n## Strategy\n\nThis rule allows
        you to detect when a [malicious client application](https://community.snowflake.com/s/article/Communication-ID-0108977-Additional-Information)
        establishes a session in Snowflake. Client applications are set up to allow
        for automation and integrations. An attacker may have set up a session from
        an outside tool in order to access and exfiltrate data.\n\n## Triage and response\n\n1.
        Inspect the logs to identify the client application, operating system, and
        timestamp.\n2. Investigate whether that client application is expected in
        your environment.\n3. If there are signs of compromise, disable the client
        application associated with the session and rotate credentials.\n", "tags":
        ["scope:snowflake", "technique:T1199-trusted-relationship", "mitre_platform:saas",
        "source:snowflake", "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1199-trusted-relationship", "mitre_platform:cloud", "mitre_platform:saas",
        "scope:snowflake", "source:snowflake", "tactic:TA0001-initial-access", "security:attack"],
        "version": 87, "id": "def-000-dgf", "updatedAt": 1736369721025, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake login from anomalous location",
        "createdAt": 1718038547583, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:snowflake snowflake.table:login_history @evt.name:LOGIN
        @evt.outcome:YES -@first_authentication_factor:SAML2_ASSERTION ", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": ["@network.client.geoip.country.name"],
        "aggregation": "cardinality", "name": ""}], "options": {"evaluationWindow":
        1800, "detectionMethod": "anomaly_detection", "maxSignalDuration": 86400,
        "keepAlive": 7200}, "cases": [{"name": "", "status": "medium", "notifications":
        []}], "message": "## Goal\n\nDetect a user account login from an abnormal
        country in your Snowflake environment.\n\n## Strategy\n\nThis rule allows
        you to detect when an account uses an anomalous geolocation to login.\n\n##
        Triage and response\n\n1. Inspect the logs to identify the user or service
        account and associated IP address.\n2. Investigate whether that user is expected
        to be in that location.\n3. Reach out to user if there are no signs of compromise
        and validate business use case.\n4. If there are signs of compromise, disable
        the user and rotate credentials.\n", "tags": ["scope:snowflake", "mitre_platform:saas",
        "source:snowflake", "technique:T1078-valid-accounts", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "mitre_platform:saas",
        "scope:snowflake", "source:snowflake", "tactic:TA0001-initial-access", "security:attack",
        "technique:T1078-valid-accounts"], "version": 87, "id": "def-000-otj", "updatedAt":
        1736369721418, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Snowflake network policy modified", "createdAt": 1718038549406, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": true, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:snowflake snowflake.table:query_history
        @query.type:(CREATE_NETWORK_POLICY OR ALTER_NETWORK_POLICY OR DROP_NETWORK_POLICY)",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "network_policy_modified"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Network Policy Successfully
        Modified", "status": "medium", "notifications": [], "condition": "network_policy_modified>=1"}],
        "message": "## Goal\n\nDetect a network policy was created, modified, or deleted
        in your Snowflake environment.\n\n## Strategy\n\nThis rule allows you to detect
        when a network policy was altered.\n\n## Triage and response\n\n1. Inspect
        the logs to identify the user that ran the query.\n2. Investigate whether
        that user is an admin by refernecing the Grants to User table in Snowflake.\n3.
        If the user is not an admin or has only recently been assigned admin, investigate
        for signs of compromise.\n4. Otherwise, review internal change management
        to validate this was an expected change.\n", "tags": ["scope:snowflake", "mitre_platform:saas",
        "source:snowflake", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud", "technique:T1562-impair-defenses",
        "mitre_platform:saas", "scope:snowflake", "source:snowflake", "tactic:TA0005-defense-evasion",
        "security:attack"], "version": 87, "id": "def-000-otp", "updatedAt": 1736369721395,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake new client application sessions",
        "createdAt": 1721299122009, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:snowflake snowflake.table:sessions", "groupByFields": ["@usr_name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@client_environment.APPLICATION",
        "metrics": ["@client_environment.APPLICATION"], "aggregation": "new_value",
        "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod": "new_value",
        "maxSignalDuration": 0, "keepAlive": 0, "newValueOptions": {"forgetAfter":
        28, "learningDuration": 7, "learningThreshold": 0, "learningMethod": "duration"}},
        "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\n\nDetect anomalous client applications interacting in your Snowflake
        environment.\n\n## Strategy\n\nThis rule allows you to detect when an anomalous
        client application establishes a session in Snowflake. Client applications
        are set up to allow for automation and integrations. An attacker may have
        set up a session from an outside tool in order to access and exfiltrate data.\n\n##
        Triage and response\n\n1. Inspect the logs to identify the client application,
        operating system, and timestamp.\n2. Investigate whether that client application
        is expected in your environment.\n3. If there are signs of compromise, disable
        the client application associated with the session and rotate credentials.\n",
        "tags": ["scope:snowflake", "technique:T1199-trusted-relationship", "mitre_platform:saas",
        "source:snowflake", "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["technique:T1199-trusted-relationship", "mitre_platform:cloud", "mitre_platform:saas",
        "scope:snowflake", "source:snowflake", "tactic:TA0001-initial-access", "security:attack"],
        "version": 87, "id": "def-000-jjl", "updatedAt": 1736369721398, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake new data transfer to location",
        "createdAt": 1721299126418, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:snowflake snowflake.table:data_transfer_history @transfer_type:COPY",
        "groupByFields": ["@evt.action"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "metric": "@target_cloud", "metrics": ["@target_cloud", "@target_region"],
        "aggregation": "new_value", "name": ""}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 0, "keepAlive": 0,
        "newValueOptions": {"forgetAfter": 28, "learningDuration": 7, "learningThreshold":
        0, "learningMethod": "duration"}}, "cases": [{"name": "", "status": "medium",
        "notifications": []}], "message": "## Goal\n\nDetect anomalous transfer of
        data to an external cloud provider in your Snowflake environment.\n\n## Strategy\n\nThis
        rule allows you to detect when an external data transfer occurs to an unexpected
        cloud provider in Snowflake. Data transfers include `@source_cloud`, `@bytes_transferred`,
        and `@source_region` that can be compared with the `@target_cloud` and `@target_region`.
        This behavior can be traced to known data transfers from expected cloud environments.
        If the source and target destinations do not match, consider further investigation
        to determine if this is a potential indicator of data exfiltration.\n\n##
        Triage and response\n\n1. Inspect the logs to identify the target cloud, target
        region, and transfer type.\n2. Investigate whether that cloud region is expected.\n3.
        Using the transfer type and start time, correlate the behavior with other
        logs to determine user, query, and other useful information.\n4. If there
        are signs of compromise, disable the user associated with the transfer and
        rotate credentials.\n", "tags": ["scope:snowflake", "technique:T1537-transfer-data-to-cloud-account",
        "mitre_platform:saas", "source:snowflake", "tactic:TA0010-exfiltration", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1537-transfer-data-to-cloud-account",
        "mitre_platform:cloud", "tactic:TA0010-exfiltration", "mitre_platform:saas",
        "scope:snowflake", "source:snowflake", "security:attack"], "version": 87,
        "id": "def-000-fxj", "updatedAt": 1736369722213, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake stage set to anomalous external
        cloud location", "createdAt": 1720550634579, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:snowflake snowflake.table:stages @stage_action:CREATED
        (@stage_url:s3* OR @stage_url:gcs* OR @stage_url:azure*)", "groupByFields":
        ["@stage_url"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod":
        "anomaly_detection", "maxSignalDuration": 86400, "keepAlive": 7200}, "cases":
        [{"name": "", "status": "medium", "notifications": []}], "message": "## Goal\n\nDetect
        an anomalous stage transfer to an external cloud provider in your Snowflake
        environment.\n\n## Strategy\n\nSnowflake facilitates data export to cloud
        storage services through the \"stage\" functionality. This rule allows you
        to detect an external data transfer through a stage to an unexpected cloud
        provider in Snowflake. There may be cases in which setting a stage to an external
        stage URL is expected behavior; however, all URLs in the logs should be populated
        from your own infrastructure resources, such as a company-owned S3 bucket.
        An unknown external stage URL can be an indicator that an attacker has exfiltrated
        data to that URL.\n\n## Triage and response\n\n1. Inspect the logs to identify
        the stage URL, timestamp, username and stage name.\n2. Investigate whether
        that export bucket is expected and owned by the company.\n3. If there are
        signs of compromise, disable the user associated with the stage and rotate
        credentials.\n", "tags": ["scope:snowflake", "technique:T1537-transfer-data-to-cloud-account",
        "mitre_platform:saas", "source:snowflake", "tactic:TA0010-exfiltration", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["technique:T1537-transfer-data-to-cloud-account",
        "mitre_platform:cloud", "tactic:TA0010-exfiltration", "mitre_platform:saas",
        "scope:snowflake", "source:snowflake", "security:attack"], "version": 87,
        "id": "def-000-ftu", "updatedAt": 1736369722193, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Snowflake user granted admin role",
        "createdAt": 1720550639504, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:snowflake snowflake.table:grants_to_users @evt.action:GRANT_CREATED
        (@role:ORGADMIN OR @role:ACCOUNTADMIN OR @role:SECURITYADMIN OR @role:SYSADMIN)",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "admin_role_granted_to_user"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "admin_role_granted_to_user>=1"}], "message": "## Goal\n\nDetect
        a new admin grant to a user in your Snowflake environment.\n\n## Strategy\n\nThis
        rule allows you to detect when a user acccount gains adminstrator privileges
        in Snowflake. If an attacker gains administrative access, they may grant admin-level
        access to a second compromised user in an attempt to fly under the radar.
        The following admin permissions are available: AccountAdmin, OrgAdmin, SysAdmin,
        and SecurityAdmin.\n\n## Triage and response\n\n1. Inspect the logs to identify
        the user, role granted, and timestamp.\n2. Investigate whether the user''s
        elevated permissions are expected.\n3. If there are signs of compromise, disable
        the user associated with the admin grant and rotate credentials.\n", "tags":
        ["scope:snowflake", "mitre_platform:saas", "source:snowflake", "technique:T1078-valid-accounts",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:cloud", "mitre_platform:saas", "scope:snowflake", "source:snowflake",
        "tactic:TA0001-initial-access", "security:attack", "technique:T1078-valid-accounts"],
        "version": 87, "id": "def-000-igf", "updatedAt": 1736369722501, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Sophos Endpoint: Attempt to Clean Malware
        on Device Failed", "createdAt": 1734042207440, "isDefault": false, "isPartner":
        true, "isEnabled": true, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "@rapdev.sophos.category:malware", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod":
        "third_party", "maxSignalDuration": 86400, "keepAlive": 3600, "thirdPartyRuleOptions":
        {"signalTitleTemplate": "Sophos: Core Malware Clean Failed", "defaultStatus":
        "high", "rootQueries": [{"query": "@rapdev.sophos.type:\"Event::Endpoint::CoreCleanFailed\"",
        "groupByFields": ["@managedAgent.name", "@rapdev.sophos.type"]}], "defaultNotifications":
        ["@slack-int-dd-security-testing"]}, "decreaseCriticalityBasedOnEnv": false},
        "cases": [{"name": "Condition 1", "status": "high", "notifications": ["@slack-int-dd-security-testing"]}],
        "message": "### Message:\nAn attempt to clean malware has failed on {{@managedAgent.type}}
        host: {{@managedAgent.name}} and manual action is needed to remove it.\n\n{{@description}}",
        "tags": ["source:rapdev-sophos", "security:malware"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:rapdev-sophos",
        "security:malware"], "version": 18, "id": "ext-001-rds", "updatedAt": 1736369722512,
        "blocking": false, "partnerIntegrationId": "rapdev-sophos", "metadata": {"entities":
        null, "sources": null}, "thirdPartyCases": [{"name": "Condition 1", "status":
        "high", "notifications": ["@slack-int-dd-security-testing"], "query": "@rapdev.sophos.category:malware"}],
        "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Sophos Endpoint: Attempt to Clean PUA on Device Failed", "createdAt": 1734042207458,
        "isDefault": false, "isPartner": true, "isEnabled": true, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "@rapdev.sophos.category:pua",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}], "options": {"evaluationWindow": 0,
        "detectionMethod": "third_party", "maxSignalDuration": 86400, "keepAlive":
        3600, "thirdPartyRuleOptions": {"signalTitleTemplate": "Sophos: Core PUA Clean
        Failed", "defaultStatus": "medium", "rootQueries": [{"query": "@rapdev.sophos.type:\"Event::Endpoint::CorePuaCleanFailed\"",
        "groupByFields": ["@managedAgent.name", "@rapdev.sophos.type"]}], "defaultNotifications":
        ["@slack-int-dd-security-testing"]}, "decreaseCriticalityBasedOnEnv": false},
        "cases": [{"name": "Condition 1", "status": "medium", "notifications": ["@slack-int-dd-security-testing"]}],
        "message": "### Message:\nAn attempt to clean a PUA (Potentially Unwanted
        Application) has failed on {{@managedAgent.type}} host: {{@managedAgent.name}}
        and manual action is needed to remove it.\n\n{{@description}}", "tags": ["security:pua",
        "source:rapdev-sophos"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:pua", "source:rapdev-sophos"], "version":
        18, "id": "ext-003-rds", "updatedAt": 1736369723184, "blocking": false, "partnerIntegrationId":
        "rapdev-sophos", "metadata": {"entities": null, "sources": null}, "thirdPartyCases":
        [{"name": "Condition 1", "status": "medium", "notifications": ["@slack-int-dd-security-testing"],
        "query": "@rapdev.sophos.category:pua"}], "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}], "meta": {"page": {"total_count": 560, "total_filtered_count":
        100}}}'
    headers:
      Content-Type:
      - application/json
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Content-Type:
      - application/json
    method: GET
    uri: https://us5.datadoghq.com/api/v2/security_monitoring/rules?page%5Bnumber%5D=5&page%5Bsize%5D=100
  response:
    body:
      string: '{"data": [{"name": "Sophos Endpoint: Malware Detected on Device", "createdAt":
        1734042207441, "isDefault": false, "isPartner": true, "isEnabled": true, "isBeta":
        false, "isDeleted": false, "isDeprecated": false, "queries": [{"query": "@rapdev.sophos.category:malware",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}], "options": {"evaluationWindow": 0,
        "detectionMethod": "third_party", "maxSignalDuration": 86400, "keepAlive":
        3600, "thirdPartyRuleOptions": {"signalTitleTemplate": "Sophos: Core Malware
        Detected", "defaultStatus": "high", "rootQueries": [{"query": "@rapdev.sophos.type:\"Event::Endpoint::CoreDetection\"",
        "groupByFields": ["@managedAgent.name", "@rapdev.sophos.type"]}], "defaultNotifications":
        ["@slack-int-dd-security-testing"]}, "decreaseCriticalityBasedOnEnv": false},
        "cases": [{"name": "Condition 1", "status": "high", "notifications": ["@slack-int-dd-security-testing"]}],
        "message": "### Message:\nMalware has been detected on {{@managedAgent.type}}
        host: {{@managedAgent.name}} and manual action may be needed to remove it.
        Automated action has already begun. Monitoring of the host is recommended.\n\n{{@description}}",
        "tags": ["source:rapdev-sophos", "security:malware"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:rapdev-sophos",
        "security:malware"], "version": 18, "id": "ext-002-rds", "updatedAt": 1736369723493,
        "blocking": false, "partnerIntegrationId": "rapdev-sophos", "metadata": {"entities":
        null, "sources": null}, "thirdPartyCases": [{"name": "Condition 1", "status":
        "high", "notifications": ["@slack-int-dd-security-testing"], "query": "@rapdev.sophos.category:malware"}],
        "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Sophos Endpoint: Potentially Unwanted Application Detected on Device", "createdAt":
        1734042207484, "isDefault": false, "isPartner": true, "isEnabled": true, "isBeta":
        false, "isDeleted": false, "isDeprecated": false, "queries": [{"query": "@rapdev.sophos.category:pua",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "none", "name": ""}], "options": {"evaluationWindow": 0,
        "detectionMethod": "third_party", "maxSignalDuration": 86400, "keepAlive":
        3600, "thirdPartyRuleOptions": {"signalTitleTemplate": "Sophos: Core PUA Detected",
        "defaultStatus": "medium", "rootQueries": [{"query": "@rapdev.sophos.type:\"Event::Endpoint::CorePuaDetection\"",
        "groupByFields": ["@managedAgent.name", "@rapdev.sophos.type"]}], "defaultNotifications":
        ["@slack-int-dd-security-testing"]}, "decreaseCriticalityBasedOnEnv": false},
        "cases": [{"name": "Condition 1", "status": "medium", "notifications": ["@slack-int-dd-security-testing"]}],
        "message": "### Message:\nA PUA (Potentially Unwanted Application) was detected
        on {{@managedAgent.type}} host: {{@managedAgent.name}} and manual action may
        be needed to remove it. Automated action to remove the PUA has already begun.
        Monitoring of the host is recommended.\n\n{{@description}}", "tags": ["security:pua",
        "source:rapdev-sophos"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:pua", "source:rapdev-sophos"], "version":
        18, "id": "ext-004-rds", "updatedAt": 1736369723505, "blocking": false, "partnerIntegrationId":
        "rapdev-sophos", "metadata": {"entities": null, "sources": null}, "thirdPartyCases":
        [{"name": "Condition 1", "status": "medium", "notifications": ["@slack-int-dd-security-testing"],
        "query": "@rapdev.sophos.category:pua"}], "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Sophos: Man-In-The-Middle Attack Detected
        on WiFi Network", "createdAt": 1734042207503, "isDefault": false, "isPartner":
        true, "isEnabled": true, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "@rapdev.sophos.category:mitm", "groupByFields":
        [], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "none", "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod":
        "third_party", "maxSignalDuration": 86400, "keepAlive": 3600, "thirdPartyRuleOptions":
        {"signalTitleTemplate": "Sophos: Man-In-The-Middle Attack Detected on WiFi",
        "defaultStatus": "high", "rootQueries": [{"query": "(@rapdev.sophos.type:\"Event::Smc::MitmAttackEvent::0\"
        OR @rapdev.sophos.type:\"Event::Smc::MitmAttackEvent::1\" ...)", "groupByFields":
        ["@managedAgent.name", "@rapdev.sophos.type"]}], "defaultNotifications": ["@slack-int-dd-security-testing"]},
        "decreaseCriticalityBasedOnEnv": false}, "cases": [{"name": "Condition 1",
        "status": "high", "notifications": ["@slack-int-dd-security-testing"]}], "message":
        "### Message:\nA MITM (Man-In-The-Middle) attack has been detected on {{@managedAgent.type}}
        host: {{@managedAgent.name}} and may be reading important network traffic.
        Immediate investigation is recommended.\nTechniques and Mitigations may be
        found here: https://attack.mitre.org/techniques/T1557/\n\n{{@description}}",
        "tags": ["source:rapdev-sophos", "technique:T1557-adversary-in-the-middle",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["security:attack", "technique:T1557-adversary-in-the-middle",
        "source:rapdev-sophos"], "version": 18, "id": "ext-005-rds", "updatedAt":
        1736369723885, "blocking": false, "partnerIntegrationId": "rapdev-sophos",
        "metadata": {"entities": null, "sources": null}, "thirdPartyCases": [{"name":
        "Condition 1", "status": "high", "notifications": ["@slack-int-dd-security-testing"],
        "query": "@rapdev.sophos.category:mitm"}], "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Spring RCE post-exploitation activity
        attempted", "createdAt": 1648745573745, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "@http.url_details.path:*.jsp @http.url_details.queryString.pwd:*
        @http.url_details.queryString.cmd:* @http.method:GET @http.status_code:200",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "pwd_cmd_in_details"}, {"query": "@http.url:*cmd*
        @http.url:*pwd* @http.method:GET @http.url:*.jsp* @http.status_code:200",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "pwd_cmd_in_url"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 7200, "keepAlive":
        3600}, "cases": [{"name": "PWD/CMD request in http.url_details.queryString
        key", "status": "low", "notifications": [], "condition": "pwd_cmd_in_details
        > 0"}, {"name": "PWD/CMD request in http.url key", "status": "low", "notifications":
        [], "condition": "pwd_cmd_in_url > 0"}], "message": "## Goal\nThis rule detects
        attempted post-exploitation activity of [CVE-2022-22965][1] with an HTTP GET
        parameter.\n\n## Strategy\nThis rule looks for `@http.url_details.path` =
        <RANDOM_FILE_NAME>.jsp, `@http.url_details.queryString.pwd` = `*`, and `@http.url_details.queryString.cmd`
        = <RANDOM_CMD_EXECUTION>. If found, it indicates web shell activity observed
        with successful Spring RCE exploitation. \n\n## Triage and response\nCheck
        your host to see if the {{@http.url_details.queryString.cmd}} command ran
        successfully. If so,\n   * Refer to your company''s Incident Response process
        since this is detection post-exploitation activity.\n   * Refer to the vendor''s
        [advisory][2] for remediation of this Remote Code Execution (RCE) vulnerability.\n\n##
        Changelog\n- 06 June 2022 - The severity has been lowered due to rule fidelity
        on just log telemetry.\n- 31 March 2022 - Rule added in response to [CVE-2022-22965][1]\n\n[1]:
        https://tanzu.vmware.com/security/cve-2022-22965\n[2]: https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement",
        "tags": ["technique:T1190-exploit-public-facing-application", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:cloud",
        "tactic:TA0001-initial-access", "technique:T1190-exploit-public-facing-application",
        "security:attack"], "version": 87, "id": "ypt-ydt-obj", "updatedAt": 1736369725019,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Suricata anomaly detected from source
        IP address", "createdAt": 1724053808918, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:suricata service:anomaly", "groupByFields":
        ["@network.client.ip"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "anomalies"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 7200, "keepAlive":
        3600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "anomalies > 0"}], "message": "## Goal\nDetect when Suricata raises an anomaly
        based detection.\n\n## Strategy\nThe rule monitors the anomaly type of Suricata
        log for when there is an anomaly detected from a source IP address.\n\n##
        Triage and response\n1. Investigate the anomaly generated from `{{@network.client.ip}}`
        by anomaly type - `{{@anomaly.type}}` and anomaly event name - `{{@anomaly.event}}`\n2.
        Examine the reassembled traffic to understand the nature of the anomaly and
        determine if the anomaly is due to benign network issues or malicious activity.\n3.
        If the anomalies are deemed malicious, take steps to block the offending traffic
        and strengthen network defences.", "tags": ["source:suricata", "security:anomaly",
        "mitre_platform:network"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:network", "security:anomaly",
        "source:suricata"], "version": 87, "id": "def-000-0w8", "updatedAt": 1736369726221,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Suricata baseline deviation from expected
        IP requests", "createdAt": 1724053808918, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:suricata -service:(alert OR anomaly OR
        stats) ", "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        ["@network.client.ip"], "aggregation": "cardinality", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        1800, "keepAlive": 1800}, "cases": [{"name": "", "status": "low", "notifications":
        []}], "message": "## Goal\nDetect an unusually high number of unique IP addresses
        connecting to a server, which could indicate a Distributed Denial-of-Service
        (DDoS) attack, a scanning attempt, or other forms of malicious activities.\n\n##
        Strategy\nMonitor Suricata logs where a server is receiving connections from
        an unusually high number of unique IP addresses within a short period. This
        detection rule aims to identify potential threats early, allowing for timely
        investigation and mitigation to protect server resources and maintain service
        availability.\n\n## Triage and response\n1. Assess the reputation of the source
        IP addresses for known threats.\n2. Check if there are common characteristics
        among the source IPs (e.g., geographical clustering, similar ISP).\n3. If
        malicious, reduce the impact by rate limiting, blocking, or filtering suspicious
        IPs.\n4. Inform IT security teams and management about the incident and actions
        taken.", "tags": ["source:suricata", "security:anomaly", "mitre_platform:network"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:network", "security:anomaly", "source:suricata"], "version":
        107, "id": "def-000-kny", "updatedAt": 1736369726552, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Suricata high number of bytes out detected",
        "createdAt": 1724053801695, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:suricata service:flow ", "groupByFields": ["@network.client.ip"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@network.bytes_written",
        "metrics": ["@network.bytes_written"], "aggregation": "sum", "name": ""}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 1800, "keepAlive": 1800}, "cases": [{"name": "", "status":
        "medium", "notifications": []}], "message": "## Goal\nDetect scenarios where
        an unusually high number of bytes are being sent out from a server, which
        could indicate data exfiltration or other malicious activities.\n\n## Strategy\nMonitor
        Suricata logs where the outgoing data from a server seems unusual. This could
        be indicative of data exfiltration attempts, malware communication, or other
        suspicious activities that require immediate investigation.\n\n## Triage and
        response\n1. Identify if the server typically handles high volumes of outbound
        traffic.\n2. Verify whether the Client IP `{{@network.client.ip}}` is internal
        or external.\n    * For internal IPs, identify the corresponding host and
        collaborate with the owner to investigate the unusual data transfer from the
        server.\n    * For external IPs, assess the IP address reputation.\n3. Review
        Client''s IP `{{@network.client.ip}}`, port `{{@network.client.port}}`, and
        protocol `{{@suricata.proto}}` to identify unexpected destinations or sensitive
        data transfers.\n4. If malicious activity is confirmed, block Client IP `{{@network.client.ip}}`,
        isolate the server, and capture traffic for analysis.\n5. Inform IT security
        teams and management about the incident and actions taken.", "tags": ["source:suricata",
        "mitre_platform:network", "tactic:TA0010-exfiltration", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:network", "source:suricata", "security:attack", "tactic:TA0010-exfiltration"],
        "version": 88, "id": "def-000-jlw", "updatedAt": 1736369726568, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Suricata high number of requests detected
        from single IP address", "createdAt": 1724053808919, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:suricata -service:(alert OR anomaly OR
        stats) ", "groupByFields": ["@network.client.ip"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": ""}], "options":
        {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection", "maxSignalDuration":
        1800, "keepAlive": 1800}, "cases": [{"name": "", "status": "low", "notifications":
        []}], "message": "## Goal\nDetect an unusually high number of requests are
        made from a single IP address, which could indicate a potential brute force
        attack, Denial-of-Service (DoS) attempt, or other malicious activities aimed
        at overwhelming or exploiting the server.\n\n## Strategy\nMonitor Suricata
        logs where a single IP address generates a high number of requests within
        a short period. This detection rule aims to identify potential threats early,
        allowing for timely investigation and mitigation to protect server resources
        and maintain service availability.\n\n## Triage and response\n1. Analyse the
        pattern and volume of requests to distinguish between legitimate traffic and
        potential attacks.\n2. Investigate the source IP `{{@network.client.ip}}`
        address to determine if the activity is malicious.\n3. Implement immediate
        measures to block or limit the impact of the suspicious activity if confirmed
        as a threat.", "tags": ["source:suricata", "mitre_platform:network", "technique:T1110-brute-force"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:network", "source:suricata", "technique:T1110-brute-force"],
        "version": 87, "id": "def-000-6er", "updatedAt": 1736369726920, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Suricata possible ARP spoofing detected",
        "createdAt": 1724053801749, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:suricata service:arp ", "groupByFields": ["@arp.dest_mac"],
        "hasOptionalGroupByFields": false, "distinctFields": ["@arp.src_ip"], "aggregation":
        "cardinality", "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 7200, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "low", "notifications": [], "condition": "a > 1"}], "message":
        "## Goal\nDetect ARP spoofing attempts, which could indicate a Man-in-the-Middle
        (MitM) attack or other malicious activities aimed at intercepting or altering
        network traffic.\n\n## Strategy\nMonitor network traffic for ARP spoofing,
        such as multiple devices claiming the same IP address. This detection rule
        aims to identify ARP spoofing attempts early, allowing for timely investigation
        and mitigation to protect network integrity and prevent data interception.\n\n##
        Triage and response\n1. Analyse the Suricata ARP logs to confirm the presence
        of ARP spoofing. Verify the suspicious activity with additional network monitoring
        tools like Wireshark.\n2. Analyse `{{@arp.src_ip}}` and `{{@arp.dest_ip}}`
        IPs that might be involved in the spoofing attack.\n3. Isolate the compromised
        devices from the network to prevent further unauthorized access and damage.\n4.
        Clear the ARP cache on affected devices to remove any spoofed entries.\n5.
        Configure static ARP entries on critical devices to prevent ARP spoofing.\n6.
        Ensure all network devices, including routers, switches, and firewalls, are
        updated with the latest firmware and security patches.", "tags": ["source:suricata",
        "tactic:TA0006-credential-access", "mitre_platform:network", "technique:T1557-adversary-in-the-middle",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["mitre_platform:network", "tactic:TA0006-credential-access",
        "source:suricata", "technique:T1557-adversary-in-the-middle", "security:attack"],
        "version": 88, "id": "def-000-3m1", "updatedAt": 1736369727243, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Suspicious named pipe created", "createdAt":
        1715872907556, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:windows.events @evt.id:5145 @Event.EventData.Data.ShareName:\"\\\\*\\IPC$\"
        -@Event.EventData.Data.RelativeTargetName:(atsvc,samr,lsarpc,lsass,winreg,netlogon,srvsvc,protected_storage,wkssvc,browser,etdfs,svcctl,spoolss,ntsvcs,LSM_API_service,HydraLsPipe,TermSrv_API_service,MsFteWds,sql\\query,eventlog)",
        "groupByFields": ["@Event.System.Computer"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "suspicious_named_pipe_created"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "suspicious_named_pipe_created",
        "status": "medium", "notifications": [], "condition": "suspicious_named_pipe_created
        > 0"}], "message": "## Goal\nDetects when a suspicious remote named pipe is
        observed, which could indicate lateral movement or remote execution attempts
        by malicious actors.\n\n## Strategy\nMonitoring of Windows event logs where
        `@evt.id` is `5145` and grouping by `@Event.System.Computer`, where A network
        share object was checked to see whether client can be granted desired access.
        The value that was observed was unusual, which made it suspicious.\n\n## Triage
        & Response\nVerify if the exection of the suspicious pipe on `{{@@Event.System.Computer}}`
        is expected. If the execution was not intended isolate the system.", "tags":
        ["scope:windows", "mitre_platform:windows", "tactic:TA0008-lateral-movement",
        "source:windows", "technique:T1021-remote-services", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "mitre_platform:windows", "technique:T1021-remote-services", "scope:windows",
        "source:windows", "tactic:TA0008-lateral-movement"], "version": 87, "id":
        "def-000-rte", "updatedAt": 1736369727269, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Tailscale API access token created",
        "createdAt": 1698720461280, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:tailscale service:logstream-config @evt.name:CREATE @target.type:API_KEY
        @target.name:\"API key\"", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "api_key_created"},
        {"query": "source:tailscale service:logstream-config @evt.name:CREATE @target.type:API_KEY
        @target.name:\"Auth key\"", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "auth_key_created"},
        {"query": "source:tailscale service:logstream-config @evt.name:CREATE @target.type:API_KEY
        @target.name:\"OAuth client\"", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "oauth_client_credentials_created"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "API key", "status": "medium",
        "notifications": [], "condition": "api_key_created > 0"}, {"name": "auth key",
        "status": "medium", "notifications": [], "condition": "auth_key_created >
        0"}, {"name": "oauth client credentials", "status": "medium", "notifications":
        [], "condition": "oauth_client_credentials_created > 0"}], "message": "##
        Goal\nDetect when a Tailscale API access token has been created.\n\n## Strategy\nThis
        rule monitors Tailscale logs for when an API access token has been created.
        An attacker may create an API access token to maintain unauthorized access
        to the environment. This rule detects the creation of:\n\n* [API keys][1]\n*
        [Auth keys][2]\n* [OAuth client credentials][3]\n\n## Triage and response\n1.
        Investigate the user `{{@usr.email}}` that created the API Key `{{@target.id}}`.\n2.
        Investigate the `{{@new.capabilities}}` details to determine the scope of
        permissions that the created API Key has and if it should have those permissions.\n3.
        If the activity is deemed malicious:\n    * Begin your organization''s incident
        response process and investigate.\n\n[1]: https://tailscale.com/kb/1101/api/\n[2]:
        https://tailscale.com/kb/1085/auth-keys/\n[3]: https://tailscale.com/kb/1215/oauth-clients/\n",
        "tags": ["technique:T1098-account-manipulation", "mitre_platform:saas", "scope:tailscale",
        "source:tailscale", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0003-persistence", "scope:tailscale", "source:tailscale", "security:attack",
        "mitre_platform:cloud", "mitre_platform:saas", "technique:T1098-account-manipulation"],
        "version": 88, "id": "def-000-09i", "updatedAt": 1736369729636, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Tailscale device approval configuration
        disabled", "createdAt": 1698970503262, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:tailscale service:logstream-config @evt.name:DISABLE
        @target.property:MACHINE_APPROVAL_NEEDED", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "device_approval_disabled"}], "options": {"evaluationWindow": 3600,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 3600},
        "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "device_approval_disabled > 0"}], "message": "## Goal\nDetect when a [device
        approval][1] configuration has been disabled in Tailscale.\n\n## Strategy\nThis
        rule monitors Tailscale logs for when a device approval configuration has
        been disabled in Tailscale. The device approval feature allows Tailscale network
        administrators to review and approve new devices before they can join the
        network. This is to ensure that only trusted devices, such as workplace-managed
        laptops and phones, can access a network. An attacker disabling this could
        be an attempt to impair defenses.\n\n## Triage and response\n1. Investigate
        the user `{{@usr.email}}` that disabled device approval within your Tailscale
        configuration.\n2. If the activity is deemed malicious:\n    * Begin your
        organization''s incident response process and investigate.\n\n[1]: https://tailscale.com/kb/1099/device-approval/",
        "tags": ["mitre_platform:saas", "scope:tailscale", "technique:T1562-impair-defenses",
        "source:tailscale", "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:tailscale", "source:tailscale", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud", "technique:T1562-impair-defenses", "mitre_platform:saas"],
        "version": 87, "id": "def-000-we4", "updatedAt": 1736369730290, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Tailscale security email modified",
        "createdAt": 1699440639316, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:tailscale service:logstream-config @target.property:SECURITY_EMAIL
        @evt.name:UPDATE", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "security_email_modified"}],
        "options": {"evaluationWindow": 3600, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "security_email_modified > 0"}], "message": "## Goal\nDetect
        when the Tailscale security issues email has been modified.\n\n## Strategy\nThis
        rule monitors Tailscale logs when the security issues email has been modified.
        The Tailscale security issues email is used for notifications about security
        issues affecting your tailnet. An unauthorized entity modifying this email
        could be an indicator of a compromised tailscale tenant owner or an insider
        threat.\n\n## Triage and response\n1. Investigate the user `{{@usr.email}}`
        that modified the security email within your Tailscale configuration.\n2.
        If the activity is deemed malicious:\n    * Begin your organization''s incident
        response process and investigate.\n\n[1]: https://tailscale.com/kb/1224/contact-preferences/#setting-the-security-issues-email",
        "tags": ["mitre_platform:saas", "scope:tailscale", "technique:T1562-impair-defenses",
        "source:tailscale", "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:tailscale", "source:tailscale", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud", "technique:T1562-impair-defenses", "mitre_platform:saas"],
        "version": 87, "id": "def-000-8u5", "updatedAt": 1736369730320, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Tailscale user approval configuration
        disabled", "createdAt": 1698778864070, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:tailscale service:logstream-config @evt.name:DISABLE
        @target.property:USER_APPROVAL_REQUIRED", "groupByFields": ["@usr.email"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "user_approval_disabled"}], "options": {"evaluationWindow": 3600,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 3600},
        "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "user_approval_disabled > 0"}], "message": "## Goal\nDetect when the TailScale
        [user approval][1] configuration has been disabled.\n\n## Strategy\nThis rule
        monitors Tailscale logs for when the user approval configuration has been
        disabled. The user approval feature allows Tailscale network administrators
        to review and approve new users before they can join the network. An attacker
        disabling this could be an attempt to disable defenses.\n\n## Triage and response\n1.
        Investigate the user `{{@usr.email}}` that disabled user approval within your
        Tailscale configuration.\n2. If the activity is deemed malicious:\n    * Begin
        your organization''s incident response process and investigate.\n\n[1]: https://tailscale.com/kb/1239/user-approval/",
        "tags": ["mitre_platform:saas", "scope:tailscale", "technique:T1562-impair-defenses",
        "source:tailscale", "tactic:TA0005-defense-evasion", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:tailscale", "source:tailscale", "tactic:TA0005-defense-evasion", "security:attack",
        "mitre_platform:cloud", "technique:T1562-impair-defenses", "mitre_platform:saas"],
        "version": 87, "id": "def-000-dr5", "updatedAt": 1736369730464, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Tailscale user role updated", "createdAt":
        1698767235265, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:tailscale service:logstream-config @evt.name:UPDATE @target.type:USER
        @target.property:USER_ROLE", "groupByFields": ["@target.name"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@usr.email"], "aggregation": "cardinality", "name":
        "user_role_updated"}], "options": {"evaluationWindow": 3600, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name":
        "", "status": "medium", "notifications": [], "condition": "user_role_updated
        > 0"}], "message": "\n## Goal\nDetect when a Tailscale user''s role is updated.\n\n##
        Strategy\nThis rule monitors Tailscale logs for when a user''s role is updated.
        This could be a privilege escalation vector for an attacker looking to bypass
        restrictions from a lower privileged user.\n\n## Triage and response\n\n\n1.
        Investigate the user `{{@usr.email}}` that performed the UPDATE action on
        user `{{@target.name}}`.\n2. Compare the previous roles `{{@old}}` with the
        new role updates containing the `{{@new}}` role and confirm that they should
        be assigned to the user `{{@target.name}}`.\n3. If the activity is deemed
        malicious:\n    * Begin your organization''s incident response process and
        investigate.\n", "tags": ["tactic:TA0004-privilege-escalation", "mitre_platform:saas",
        "technique:T1078-valid-accounts", "scope:tailscale", "source:tailscale", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["scope:tailscale", "source:tailscale", "security:attack",
        "tactic:TA0004-privilege-escalation", "technique:T1078-valid-accounts", "mitre_platform:cloud",
        "mitre_platform:saas"], "version": 87, "id": "def-000-8uj", "updatedAt": 1736369730484,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Temporary AWS security credentials generated
        for user", "createdAt": 1695754996405, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @eventName:GetFederationToken @eventSource:sts.amazonaws.com",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@responseElements.federatedUser.arn"], "aggregation":
        "cardinality", "name": "federation_token_generated"}, {"query": "source:cloudtrail
        @eventName:GetFederationToken @eventSource:sts.amazonaws.com (@requestParameters.policyArns.arn:\"arn:aws:iam::aws:policy/AdministratorAccess\"
        OR @requestParameters.policyArns.arn:\"arn:aws:iam::aws:policy/PowerUserAccess\"
        OR (@requestParameters.SessionPolicyARN.Statement.Action:\"\\*\" @requestParameters.SessionPolicyARN.Statement.Effect:Allow
        @requestParameters.SessionPolicyARN.Statement.Resource:\"\\*\"))", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@responseElements.federatedUser.arn"], "aggregation": "cardinality", "name":
        "federation_token_generated_permissive_policy"}, {"query": "source:cloudtrail
        @eventName:GetFederationToken @eventSource:sts.amazonaws.com @threat_intel.results.intention:malicious",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@responseElements.federatedUser.arn"], "aggregation":
        "cardinality", "name": "federation_token_generated_threat_enriched_ip_malicious"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "from malicious IP", "status":
        "high", "notifications": [], "condition": "federation_token_generated_threat_enriched_ip_malicious
        > 0"}, {"name": "with a high privilage policy attached", "status": "medium",
        "notifications": [], "condition": "federation_token_generated_permissive_policy
        > 0"}, {"name": "Temporary credentials generated", "status": "low", "notifications":
        [], "condition": "federation_token_generated > 0"}], "message": "## Goal\nDetect
        when a set of temporary security credentials consisting of an access key ID,
        a secret access key, and a security token, are generated for a user.\n\n##
        Strategy\nThis rule monitors CloudTrail and detects when any `@eventName`
        has a value of `GetFederationToken` and `@eventSource` has a value of `sts.amazonaws.com`.
        An adversary can maintain persistence within an AWS environment using credentials
        generated from `sts:GetFederationToken`, even if the original AWS access keys
        have been deleted.\n\n## Triage & Response\n1. Determine if the user `{{@userIdentity.arn}}`
        intended to generate a federated token for the observed federated user(s).\n2.
        If `{{@userIdentity.arn}}` didn''t intend to generate the federated token:\n    -
        Completely remove all permissions of the compromised IAM user, as simply disabling
        the access key used to issue the session is not enough for containment **OR**
        \n    - Attach an explicit deny-all IAM policy to the compromised IAM user
        as this will take precedence over all allow statements.\n    - Follow [AWS''
        recommendation][1] on `How to revoke federated users\u2019 active AWS sessions`.\n3.
        Investigate other activities performed by the user `{{@userIdentity.arn}}`
        and the observed federated user(s) using the Cloud SIEM - User Investigation
        dashboard.\n4. Begin your organization''s incident response process and investigate.\n5.
        Consider the usage of **temporary credentials** over long-lived credentials
        associated with IAM users. This prevents the usage of long-lived AWS Access
        keys which are [required][2] for creating federated sessions from IAM users.\n\n[1]:
        https://aws.amazon.com/blogs/security/how-to-revoke-federated-users-active-aws-sessions/\n[2]:
        https://docs.aws.amazon.com/STS/latest/APIReference/API_GetFederationToken.html\n\n##
        Changelog\n* 06 Nov 2024 - Rule query and severity updated.\n", "tags": ["scope:iam",
        "iaas:aws", "technique:T1098-account-manipulation", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:iam",
        "mitre_platform:iaas", "iaas:aws", "mitre_platform:cloud", "tactic:TA0003-persistence",
        "security:attack", "technique:T1098-account-manipulation", "source:cloudtrail"],
        "version": 87, "id": "def-000-a9s", "updatedAt": 1736369730875, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "The AWS managed policy AWSCompromisedKeyQuarantineV2
        has been attached", "createdAt": 1679987978578, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:cloudtrail @evt.name:AttachUserPolicy
        @requestParameters.policyArn:*AWSCompromisedKeyQuarantine*", "groupByFields":
        ["@requestParameters.userName", "@recipientAccountId"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "aws_attach_user_policy"},
        {"query": "source:cloudtrail @evt.name:AttachRolePolicy @requestParameters.policyArn:*AWSCompromisedKeyQuarantine*",
        "groupByFields": ["@requestParameters.roleName", "@recipientAccountId"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "aws_attach_role_policy"},
        {"query": "source:cloudtrail @evt.name:AttachGroupPolicy @requestParameters.policyArn:*AWSCompromisedKeyQuarantine*",
        "groupByFields": ["@requestParameters.groupName", "@recipientAccountId"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "aws_attach_group_policy"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 3600},
        "cases": [{"name": "to a user", "status": "critical", "notifications": [],
        "condition": "aws_attach_user_policy > 0"}, {"name": "to a role", "status":
        "critical", "notifications": [], "condition": "aws_attach_role_policy > 0"},
        {"name": "to a group", "status": "critical", "notifications": [], "condition":
        "aws_attach_group_policy > 0"}], "message": "## Goal\nDetect when the AWS
        managed policy [AWSCompromisedKeyQuarantine(V2)][1] has been attached to a
        user, role, or group.\n\n## Strategy\nThis rule monitors AWS CloudTrail and
        detects when the AWS managed policy AWSCompromisedKeyQuarantine(V2) has been
        attached to a user, role, or group. It is applied by the AWS team in the event
        that an IAM user''s credentials has been compromised or publicly exposed.\n\n##
        Triage and response\n1. An AWS support case has been opened regarding this
        event and contains instructions for investigation.\n2. Investigate any other
        actions carried out by the compromised identity `{{@userIdentity.arn}}` using
        the Cloud SIEM investigator.\n\n[1]: https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AWSCompromisedKeyQuarantineV2.html",
        "tags": ["technique:T1078-valid-accounts", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud", "tactic:TA0001-initial-access"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0001-initial-access", "security:attack", "mitre_platform:iaas",
        "mitre_platform:cloud", "technique:T1078-valid-accounts", "source:cloudtrail"],
        "version": 88, "id": "def-000-57b", "updatedAt": 1736369733908, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Tor client IP address identified in
        Slack", "createdAt": 1705996361430, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:slack service:audit-logs-service @threat_intel.results.category:tor",
        "groupByFields": ["@usr.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "slack_tor_traffic"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "slack_tor_traffic > 0"}], "message": "## Goal\nDetect when Tor client activity
        is seen in Slack audit logs.\n\n## Strategy\nThis rule monitors Slack audit
        logs to determine when an activity had originated from a Tor client. Datadog
        enriches all ingested logs with [expert-curated threat intelligence][1] in
        real time. An attacker may use a Tor client to anonymize their true origin.
        \n\n## Triage and response\n1. Determine if the actions taken by the identity
        `{{@usr.email}}` are legitimate by looking at past activity and the type of
        logs occurring. \n2. If the results of the triage indicate that an attacker
        has taken the action, begin your organization''s incident response process
        and investigate.\n\n[1]: https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog",
        "tags": ["technique:T1090-proxy", "mitre_platform:saas", "source:slack", "tactic:TA0011-command-and-control",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["security:attack", "source:slack",
        "mitre_platform:saas", "tactic:TA0011-command-and-control", "mitre_platform:cloud",
        "technique:T1090-proxy"], "version": 88, "id": "def-000-kk3", "updatedAt":
        1736369750781, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Tor client IP address identified within AWS environment", "createdAt": 1679558651730,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @eventCategory:Management -@userIdentity.sessionContext.webIdFederationData.federatedProvider:cognito-identity.amazonaws.com
        @threat_intel.results.category:tor -@network.client.geoip.as.domain:amazon.com",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "aws_tor_traffic"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "aws_tor_traffic > 0"}], "message": "## Goal\nDetect when
        Tor client activity is seen in AWS CloudTrail management plane logs.\n\n##
        Strategy\nThis rule monitors AWS CloudTrail management plane logs to determine
        when an activity had originated from a Tor client. Datadog enriches all ingested
        logs with [expert-curated threat intelligence][1] in real time. An attacker
        may use a Tor client to anonymize their true origin. \n\n## Triage and response\n1.
        Determine if the actions taken by the identity `{{@userIdentity.arn}}` are
        legitimate by looking at past activity and the type of API calls occurring.
        \n2. If the results of the triage indicate that an attacker has taken the
        action, begin your company''s incident response process and an investigation.\n\n##
        Changelog\n* 17 August 2023 - Updated query to replace attribute `@threat_intel.results.subcategory:tor`
        with `@threat_intel.results.category:tor`.\n\n[1]: https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog",
        "tags": ["technique:T1078-valid-accounts", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0001-initial-access", "security:attack", "mitre_platform:iaas",
        "mitre_platform:cloud", "technique:T1078-valid-accounts", "source:cloudtrail"],
        "version": 88, "id": "def-000-fn6", "updatedAt": 1736369751059, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Tor client IP address identified within
        Azure environment", "createdAt": 1679558651847, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:azure.* @threat_intel.results.category:tor
        -@evt.category:(FrontDoorWebApplicationFirewallLog OR AppServiceHTTPLogs OR
        FrontdoorWebApplicationFirewallLog OR FrontDoorAccessLog OR ApplicationGatewayAccessLog
        OR AzureCdnAccessLog OR ApplicationGatewayFirewallLog)", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "azure_tor_traffic"}, {"query": "source:azure.activedirectory
        @threat_intel.results.category:tor @evt.name:\"Self-service password reset
        flow activity progress\"", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "azuread_password_reset_tor_traffic"},
        {"query": "source:azure.activedirectory @threat_intel.results.category:tor
        @evt.name:\"Sign-in activity\" @evt.category:SignInLogs @evt.outcome:success",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "azuread_signin_tor_traffic"}, {"query":
        "source:azure.activedirectory @threat_intel.results.category:tor @evt.name:\"Sign-in
        activity\" @evt.category:SignInLogs @evt.outcome:failure", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "azuread_signin_tor_traffic_failure"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "successful sign in", "status": "high", "notifications":
        [], "condition": "azuread_signin_tor_traffic > 0"}, {"name": "attempted self
        service password reset", "status": "low", "notifications": [], "condition":
        "azuread_password_reset_tor_traffic > 0"}, {"name": "failed sign in", "status":
        "low", "notifications": [], "condition": "azuread_signin_tor_traffic_failure
        > 0"}, {"name": "additional log sources", "status": "low", "notifications":
        [], "condition": "azure_tor_traffic > 0"}], "message": "## Goal\nDetect when
        Tor client activity is seen in Azure logs.\n\n## Strategy\nThis rule monitors
        Azure logs to determine when an activity originated from a Tor client. Datadog
        enriches all ingested logs with [expert-curated threat intelligence][1] in
        real time. An attacker may use a Tor client to anonymize their true origin.
        \n\n## Triage and response\n1. Determine if the actions taken by the identity
        `{{@usr.id}}` are legitimate by looking at past activity and the type of API
        calls occurring. \n2. If the results of the triage indicate that an attacker
        has taken the action, begin your company''s incident response process and
        an investigation.\n\n## Changelog\n* 17 August 2023 - Updated query to replace
        attribute `@threat_intel.results.subcategory:tor` with `@threat_intel.results.category:tor`.\n\n[1]:
        https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog",
        "tags": ["technique:T1090-proxy", "source:azure", "tactic:TA0011-command-and-control",
        "technique:T1573-encrypted-channel", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:azure", "mitre_platform:iaas", "technique:T1573-encrypted-channel",
        "technique:T1090-proxy", "security:attack", "tactic:TA0011-command-and-control",
        "mitre_platform:cloud"], "version": 88, "id": "def-000-fky", "updatedAt":
        1736369751059, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Tor client IP address identified within Google Cloud environment", "createdAt":
        1679558651951, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:gcp.* @threat_intel.results.category:tor @data.protoPayload.@type:\"type.googleapis.com/google.cloud.audit.AuditLog\"
        @data.protoPayload.authorizationInfo.granted:true", "groupByFields": ["project_id",
        "@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "allowed_google_cloud_tor_traffic"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "allowed_google_cloud_tor_traffic > 0"}], "message": "## Goal\nDetect when
        Tor client activity is seen in Google Cloud Audit Logs.\n\n## Strategy\nThis
        rule monitors Google Cloud Audit Logs to determine when an activity had originated
        from a Tor client. Datadog enriches all ingested logs with [expert-curated
        threat intelligence][1] in real time. An attacker may use a Tor client to
        anonymize their true origin. \n\n## Triage and response\n1. Investigate other
        activities performed by the identity `{{@usr.id}}` using the Cloud SIEM -
        User Investigation dashboard.\n2. If the results of the triage indicate that
        an attacker had taken the action, begin your company''s incident response
        process and an investigation.\n\n## Changelog\n* 18 December 2024 - Updated
        query to replace attribute @threat_intel.results.subcategory:tor with @threat_intel.results.category:tor.\n\n[1]:
        https://www.datadoghq.com/blog/datadog-threat-intelligence/#expert-threat-intelligence-managed-by-datadog",
        "tags": ["source:gcp", "technique:T1090-proxy", "technique:T1133-external-remote-services",
        "mitre_platform:iaas", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "tactic:TA0001-initial-access",
        "technique:T1090-proxy", "security:attack", "technique:T1133-external-remote-services",
        "source:gcp", "mitre_platform:cloud"], "version": 89, "id": "def-000-1so",
        "updatedAt": 1736369751079, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "TruffleHog user agent observed in AWS", "createdAt":
        1687880783709, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @http.useragent:TruffleHog @evt.name:GetCallerIdentity",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "trufflehog_user_agent"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "high", "notifications":
        [], "condition": "trufflehog_user_agent > 0"}], "message": "## Goal\nDetect
        when a TruffleHog user agent is seen in AWS CloudTrail management plane logs.\n\n##
        Strategy\nThis rule monitors AWS CloudTrail management plane logs for the
        `GetCallerIdentity` API call with the user agent `TruffleHog`. TruffleHog
        is a tool designed to scan source code repositories for leaked secrets. There
        is a credential verification feature to verify if the credential is still
        active. For AWS it performs a `GetCallerIdentity` API call. While this tool
        can be used legitimately by teams to scan for leaked secrets internally, it
        may also be used by attackers to identify leaked credentials.\n\n## Triage
        and response\n1. Determine if your organization is using the TruffleHog tool
        to scan for secrets.\n2. If it is an internal tool, notify the relevant team
        so that the leaked key can be triaged appropriately.\n3. If the results of
        the triage indicate that this tool is not used by your organization, begin
        your company''s incident response process and an investigation.\n    * If
        appropriate, disable or rotate the affected credential.\n    * Investigate
        any actions taken by the identity `{{@userIdentity.arn}}`.\n    * Work with
        the relevant teams to remove the key from any source code repositories.\n\n##
        Changelog\n* 10 November 2023 - updated severity of detection from `Low` to
        `High`", "tags": ["scope:iam", "technique:T1552-unsecured-credentials", "iaas:aws",
        "tactic:TA0006-credential-access", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "mitre_platform:cloud"], "hasExtendedTitle": true, "type":
        "log_detection", "filters": [], "defaultTags": ["scope:iam", "mitre_platform:iaas",
        "iaas:aws", "mitre_platform:cloud", "security:attack", "tactic:TA0006-credential-access",
        "technique:T1552-unsecured-credentials", "source:cloudtrail"], "version":
        88, "id": "def-000-f2a", "updatedAt": 1736369751523, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Twilio account geographic permissions
        updated", "createdAt": 1728975545221, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": true, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:twilio @actor_type:twilio-admin @evt.name:(voice-geographic-permissions.updated
        OR sms-geographic-permissions.updated)", "groupByFields": ["@account_sid"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "twilio_account_geo_perm_updated"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "medium", "notifications": [], "condition":
        "twilio_account_geo_perm_updated > 0"}], "message": "## Goal\nDetect when
        an update was made to the Geographic Permissions in a Twilio account.\n\n##
        Strategy\nThis rule monitors when a change is made to the [Geographic Permissions][1]
        in an account. Attackers may leverage this for voice and messaging usage,
        leading to unexpectedly high costs.\n\n## Triage and response\n1. Investigate
        if the change was expected.\n2. Follow the [guidelines][2] provided by Twilio.\n\n[1]:
        https://help.twilio.com/articles/223180168-What-Are-Geographic-Permissions-and-Why-do-They-Exist-\n[2]:
        https://help.twilio.com/articles/360021347073", "tags": ["tactic:TA0004-privilege-escalation",
        "technique:T1098-account-manipulation", "source:twilio", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:twilio", "technique:T1098-account-manipulation",
        "tactic:TA0004-privilege-escalation", "security:attack"], "version": 20, "id":
        "def-000-qu2", "updatedAt": 1736369751536, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Twilio account token promoted", "createdAt":
        1728975545221, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:twilio @actor_type:twilio-admin @evt.name:account-auth-token.promoted",
        "groupByFields": ["@account_sid"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "twilio_account_token_promoted"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "twilio_account_token_promoted > 0"}], "message": "## Goal\nDetect
        when a secondary token was promoted to primary.\n\n## Strategy\nThis rule
        monitors for the promotion of an authentication token to primary status. An
        attacker may attempt this to escalate their privileges within the account.\n\n##
        Triage and response\n1. Investigate the other actions performed by the account
        SID `{{@account_sid}}`.\n2. Follow the [guidelines][1] provided by Twilio.\n\n[1]:
        https://help.twilio.com/articles/360021347073", "tags": ["tactic:TA0004-privilege-escalation",
        "technique:T1098-account-manipulation", "source:twilio", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:cloud", "source:twilio", "technique:T1098-account-manipulation",
        "tactic:TA0004-privilege-escalation", "security:attack"], "version": 20, "id":
        "def-000-ffs", "updatedAt": 1736369751536, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Twilio bulk export from unusual location",
        "createdAt": 1728975545221, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:twilio @actor_type:twilio-admin @evt.name:(bulkexports.downloaded
        OR bulkexports.created)", "groupByFields": ["@account_sid"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@network.client.geoip.country.name",
        "metrics": ["@network.client.geoip.country.name"], "aggregation": "new_value",
        "name": "twilio_bulk_export_new_value"}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 86400, "keepAlive":
        3600, "newValueOptions": {"forgetAfter": 14, "learningDuration": 7, "learningThreshold":
        0, "learningMethod": "duration"}}, "cases": [{"name": "twilio_bulk_export_new_value",
        "status": "medium", "notifications": []}], "message": "## Goal\nDetect when
        a BulkExport operation was detected from unsual location.\n\n## Strategy\nThis
        rule monitors for [BulkExport][1] API calls from unusual location. This may
        indicate an attacker gaining access to sensitive inforamtion and exfiltrating
        data.\n\n## Triage and response\n1. Investigate the other actions performed
        by the account SID `{{@account_sid}}`.\n2. Follow the [guidelines][2] provided
        by Twilio.\n\n[1]:https://www.twilio.com/docs/usage/bulkexport \n[2]:https://help.twilio.com/articles/360021347073",
        "tags": ["technique:T1537-transfer-data-to-cloud-account", "tactic:TA0010-exfiltration",
        "source:twilio", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0010-exfiltration",
        "mitre_platform:cloud", "source:twilio", "technique:T1537-transfer-data-to-cloud-account",
        "security:attack"], "version": 20, "id": "def-000-pgq", "updatedAt": 1736369751557,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Unfamiliar IAM user retrieved SSM parameter",
        "createdAt": 1686068286921, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventSource:ssm.amazonaws.com @evt.name:(GetParameters
        OR GetParameter) @userIdentity.type:IAMUser", "groupByFields": ["@userIdentity.accountId"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@userIdentity.arn",
        "metrics": ["@userIdentity.arn"], "aggregation": "new_value", "name": ""}],
        "options": {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter": 28, "learningDuration":
        7, "learningThreshold": 0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when data about one or more parameters is retrieved from
        AWS Systems Manager.\n\n## Strategy\nThis rule lets you monitor CloudTrail
        and detect when data about one or more parameters is retrieved from AWS Systems
        Manager with one of the following API calls:\n* [GetParameter][1] \n* [GetParameters][2]
        \n\nThis rule uses the New Value detection method. Datadog learns the historical
        behavior of the identities within your environment,  then creates a signal
        when unfamiliar values appear.\n\n## Triage and response\n1. Determine if
        `{{@userIdentity.arn}}` is expected to perform the `{{@evt.name}}` API call
        on the parameter `{{@resource.ARN}}`.\n2. If the action is legitimate, consider
        including the user in a suppression list. See [Best practices for creating
        detection rules with Datadog Cloud SIEM][3] for more information.\n3. Otherwise,
        if the results of the triage indicate that an attacker has taken the action,
        begin your company''s incident response process and an investigation.\n\n[1]:
        https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetParameter.html\n[2]:
        https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetParameters.html\n[3]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#customize-security-signal-messages-to-fit-your-environment\n",
        "tags": ["technique:T1555-credentials-from-password-stores", "iaas:aws", "tactic:TA0006-credential-access",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "security:attack", "tactic:TA0006-credential-access",
        "source:cloudtrail", "iaas:aws", "technique:T1555-credentials-from-password-stores",
        "mitre_platform:cloud"], "version": 88, "id": "def-000-iye", "updatedAt":
        1736369754497, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Unfamiliar IAM user retrieved a decrypted AWS Systems Manager parameter",
        "createdAt": 1685720633323, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @eventSource:ssm.amazonaws.com @evt.name:GetParameters
        @requestParameters.withDecryption:true @userIdentity.type:IAMUser", "groupByFields":
        ["@userIdentity.accountId"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "metric": "@userIdentity.arn", "metrics": ["@userIdentity.arn"], "aggregation":
        "new_value", "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod":
        "new_value", "maxSignalDuration": 86400, "keepAlive": 3600, "newValueOptions":
        {"forgetAfter": 28, "learningDuration": 7, "learningThreshold": 0, "learningMethod":
        "duration"}, "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "",
        "status": "low", "notifications": []}], "message": "## Goal\nDetect when an
        IAM user retrieves a decrypted AWS Systems Manager parameter.\n\n## Strategy\nThis
        rule lets you monitor CloudTrail and detect when an IAM user retrieves a decrypted
        parameter from AWS Systems Manager using the [GetParameters][1] API calls\n\nThis
        rule uses the New Value detection method. Datadog learns the historical behavior
        of the identities within your environment,  then creates a signal when unfamiliar
        values appear.\n\n## Triage & response\n1. Determine if `{{@userIdentity.arn}}`
        is expected to perform the `{{@evt.name}}` API call on the parameter `{{@resource.ARN}}`.\n2.
        If the action is legitimate, consider including the user in a suppression
        list. See [Best practices for creating detection rules with Datadog Cloud
        SIEM][2] for more information.\n3. Otherwise, if the results of the triage
        indicate that an attacker has taken the action, begin your company''s incident
        response process and an investigation.\n\n[1]: https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetParameters.html\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#customize-security-signal-messages-to-fit-your-environment",
        "tags": ["technique:T1555-credentials-from-password-stores", "iaas:aws", "tactic:TA0006-credential-access",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "security:attack", "tactic:TA0006-credential-access",
        "source:cloudtrail", "iaas:aws", "technique:T1555-credentials-from-password-stores",
        "mitre_platform:cloud"], "version": 88, "id": "def-000-088", "updatedAt":
        1736369754520, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Unfamiliar IAM user retrieved secret from AWS Secrets Manager", "createdAt":
        1685720637074, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "service:cloudtrail @eventSource:secretsmanager.amazonaws.com @evt.name:GetSecretValue
        @userIdentity.type:IAMUser", "groupByFields": ["@evt.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@userIdentity.arn", "metrics": ["@userIdentity.arn"],
        "aggregation": "new_value", "name": ""}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 86400, "keepAlive":
        3600, "newValueOptions": {"forgetAfter": 28, "learningDuration": 7, "learningThreshold":
        0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv": true},
        "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when a previously unseen IAM user retrieves secrets from
        AWS Secrets Manager.\n\n## Strategy\nThis rule lets you monitor the [`GetSecretValue`][1]
        CloudTrail API calls to detect when a secret is retrieved. It does this by
        inspecting the IAM users accessing secrets within your AWS account over a
        7-day window. Newly detected users after this 7-day window will generate security
        signals.\n\n## Triage and response\n1. Determine whether the IAM user: `{{@userIdentity.arn}}`
        is expected to access the Secrets Manager and the secrets within `@requestParameters.secretId`.\n2.
        If the action is legitimate, consider including the user in a suppression
        list. See [Best practices for creating detection rules with Datadog Cloud
        SIEM][2] for more information.\n3. If the action shouldn''t have happened:\n   *
        Contact the user: `{{@userIdentity.arn}}` and see if they made the API call.\n   *
        Use the Cloud SIEM - User Investigation dashboard to see if the user `{{@userIdentity.arn}}`
        has taken other actions.\n   * Use the Cloud SIEM - IP Investigation dashboard
        to see if there''s more traffic from the IP `{{@network.client.ip}}`.\n4.
        If the results of the triage indicate that an attacker has taken the action,
        begin your company''s incident response process as well as an investigation.\n\n[1]:
        https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["technique:T1555-credentials-from-password-stores", "iaas:aws", "tactic:TA0006-credential-access",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "security:attack", "tactic:TA0006-credential-access",
        "source:cloudtrail", "iaas:aws", "technique:T1555-credentials-from-password-stores",
        "mitre_platform:cloud"], "version": 88, "id": "def-000-v4g", "updatedAt":
        1736369754594, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "Unusual 1Password device authorization activity", "createdAt": 1687967174554,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:1password
        @evt.type:1password-audit-events @object_type:device @evt.name:*", "groupByFields":
        ["@object_uuid"], "hasOptionalGroupByFields": false, "distinctFields": [],
        "metric": "@evt.name", "metrics": ["@evt.name"], "aggregation": "new_value",
        "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod": "new_value",
        "maxSignalDuration": 86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter":
        28, "learningDuration": 7, "learningThreshold": 0, "learningMethod": "duration"},
        "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "", "status": "medium",
        "notifications": []}], "message": "## Goal\nDetect when a 1Password device
        authorization action is observed.\n\n## Strategy\nThis rule monitors 1Password
        audit logs for device authorization action that may allow an attacker to maintain
        persistence within a 1Password tenant.\n\n**Note:**  This rule uses the `New
        Value` detection method to determine when a previously unseen device authorization
        action is observed.\n\n## Triage & response\nInvestigate user `{{@usr.email}}`
        attempting an unfamiliar `{{@evt.name}}` device authorization action on `{{@session.device_uuid}}`
        from `{{@network.client.ip}}`.", "tags": ["technique:T1098-account-manipulation",
        "mitre_platform:saas", "source:1password", "scope:onepassword", "security:attack",
        "tactic:TA0003-persistence", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0003-persistence",
        "security:attack", "scope:onepassword", "source:1password", "mitre_platform:cloud",
        "mitre_platform:saas", "technique:T1098-account-manipulation"], "version":
        87, "id": "def-000-99w", "updatedAt": 1736369761255, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Unusual 1Password item usage action
        observed from user", "createdAt": 1687967174594, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:1password @evt.type:1password-item-usages
        @evt.name:*", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@evt.name", "metrics": ["@evt.name"],
        "aggregation": "new_value", "name": ""}], "options": {"evaluationWindow":
        0, "detectionMethod": "new_value", "maxSignalDuration": 86400, "keepAlive":
        3600, "newValueOptions": {"forgetAfter": 28, "learningDuration": 7, "learningThreshold":
        0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv": true},
        "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when 1Password item usage activity is observed.\n\n## Strategy\nThis
        rule monitors 1Password audit logs for the following item usage actions\n-
        [enter-item-edit-mode][1]\n- [export][2]\n- [fill][3]\n- [reveal][4]\n- [select-sso-provider][5]\n-
        [secure-copy][6]\n- [server-create][7]\n- [server-fetch][8]\n- [server-update][9]\n-
        [share][10]\n\n**Note:**  This rule uses the `New Value` detection method,
        to determine when a previously unseen item usage action is observed.\n\n##
        Triage & response\nInvestigate `{{@usr.email}}` attempting an item usage action:
        `{{@evt.name}}` that they haven''t performed recently with item `{{@item_uuid}}`
        within vault `{{@vault_uuid}}`.\n\n[1]: https://developer.1password.com/docs/events-api/item-usage-actions/#enter-item-edit-mode\n[2]:
        https://developer.1password.com/docs/events-api/item-usage-actions/#export\n[3]:
        https://developer.1password.com/docs/events-api/item-usage-actions/#fill\n[4]:
        https://developer.1password.com/docs/events-api/item-usage-actions/#reveal\n[5]:
        https://developer.1password.com/docs/events-api/item-usage-actions/#select-sso-provider\n[6]:
        https://developer.1password.com/docs/events-api/item-usage-actions/#secure-copy\n[7]:
        https://developer.1password.com/docs/events-api/item-usage-actions/#server-create\n[8]:
        https://developer.1password.com/docs/events-api/item-usage-actions/#server-fetch\n[9]:
        https://developer.1password.com/docs/events-api/item-usage-actions/#server-update\n[10]:
        https://developer.1password.com/docs/events-api/item-usage-actions/#share\n",
        "tags": ["technique:T1555-credentials-from-password-stores", "tactic:TA0006-credential-access",
        "mitre_platform:saas", "source:1password", "scope:onepassword", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:attack", "tactic:TA0006-credential-access",
        "technique:T1555-credentials-from-password-stores", "scope:onepassword", "source:1password",
        "mitre_platform:cloud", "mitre_platform:saas"], "version": 87, "id": "def-000-80w",
        "updatedAt": 1736369761268, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Unusual AWS enumeration event from EC2 instance", "createdAt":
        1686068286390, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:cloudtrail @userIdentity.session_name:i-* -@userIdentity.assumed_role:terraform*
        @evt.name:(Get* OR List* OR Describe*)", "groupByFields": ["@userIdentity.session_name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "metric": "@userIdentity.assumed_role",
        "metrics": ["@userIdentity.assumed_role"], "aggregation": "new_value", "name":
        ""}], "options": {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter": 28, "learningDuration":
        7, "learningThreshold": 0, "learningMethod": "duration"}, "decreaseCriticalityBasedOnEnv":
        true}, "cases": [{"name": "", "status": "low", "notifications": []}], "message":
        "## Goal\nDetect when a previously unseen EC2 instance enumerates resources
        within AWS.\n\n## Strategy\nThis rule lets you monitor Amazon EC2 instances
        to detect when any `Get`, `List`, or `Describe` API call is observed. It does
        this by inspecting the EC2 instance roles (`@userIdentity.assumed_role`) performing
        actions within your AWS account over a 7-day window. Newly detected instance
        roles after this 7-day window will generate security signals.\n\n## Triage
        and response\n1. Determine whether the activity from the role: `{{@userIdentity.assumed_role}}`
        attached to EC2 instance: `{{@host}}` is expected.\n2. If the action is legitimate,
        consider including the EC2 instance in a suppression list. See [Best practices
        for creating detection rules with Datadog Cloud SIEM][2] for more information.\n3.
        If the action shouldn''t have been happened:\n   * Contact the owner of the
        instance: `{{@host}}` and see if they made the API call.\n   * Use the Host
        Investigation dashboard to see if the host: `{{@host}}` has taken other actions.\n   *
        Use the Cloud SIEM - IP Investigation dashboard to see if there''s more traffic
        from the IP: `{{@network.client.ip}}`.\n4. If the results of the triage indicate
        that an attacker has taken the action, begin your company''s incident response
        process as well as an investigation.\n\n[1]: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html\n[2]:
        https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["iaas:aws", "technique:T1580-cloud-infrastructure-discovery", "source:cloudtrail",
        "tactic:TA0007-discovery", "mitre_platform:iaas", "security:attack", "technique:T1526-cloud-service-discovery",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "iaas:aws", "tactic:TA0007-discovery",
        "technique:T1526-cloud-service-discovery", "technique:T1580-cloud-infrastructure-discovery",
        "mitre_platform:cloud", "security:attack", "source:cloudtrail"], "version":
        88, "id": "def-000-sfh", "updatedAt": 1736369762653, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Unusual Authentication by Microsoft
        365 Azure AD Service Principal", "createdAt": 1660849631337, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "source:microsoft-365
        service:AzureActiveDirectory @evt.name:UserLoggedIn @evt.outcome:Success @UserDescription:\"A
        service principal\"", "groupByFields": ["@usr.email"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@AuthenticationMethod", "metrics":
        ["@AuthenticationMethod"], "aggregation": "new_value", "name": ""}], "options":
        {"evaluationWindow": 0, "detectionMethod": "new_value", "maxSignalDuration":
        86400, "keepAlive": 3600, "newValueOptions": {"forgetAfter": 28, "learningDuration":
        7, "learningThreshold": 0, "learningMethod": "duration"}}, "cases": [{"name":
        "", "status": "medium", "notifications": []}], "message": "## Goal\nDetect
        when a Microsoft 365 Azure AD service principal uses an unusual authentication
        method.\n\n## Strategy\nUsing the `New Value` detection method, find when
        a `Microsoft 365 Azure AD service principal` uses a new `@AuthenticationMethod`.\n\n##
        Triage and response\n1. Determine if the service principal `{{@usr.id}}` should
        be authenticating using the `{{@AuthenticationMethod}}` authentication method
        and `{{@ExtendedProperties.RequestType}}` request type.\n2. If `{{@usr.email}}`
        should not be authenticating using `{{@AuthenticationMethod}}`,\n    * Investigate
        other activities performed by the user `{{@usr.id}}` using the Cloud SIEM
        - User Investigation dashboard \n    * If necessary, initiate your company''s
        incident response (IR) process.", "tags": ["scope:active-directory", "tactic:TA0004-privilege-escalation",
        "source:microsoft-365", "mitre_platform:saas", "technique:T1078-valid-accounts",
        "mitre_platform:office-suite", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:office-suite", "scope:active-directory", "tactic:TA0004-privilege-escalation",
        "technique:T1078-valid-accounts", "mitre_platform:cloud", "source:microsoft-365",
        "mitre_platform:saas", "security:attack"], "version": 87, "id": "6fj-qtv-ei2",
        "updatedAt": 1736369762647, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Unusual login from different IPs", "createdAt": 1706718944557,
        "isDefault": false, "isPartner": true, "isEnabled": true, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "@bottomline.mainframe.activity.resource.code:Login
        ", "groupByFields": ["@bottomline.mainframe.activity.usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": ["@network.client.ip"], "aggregation": "cardinality",
        "name": ""}], "options": {"evaluationWindow": 300, "detectionMethod": "threshold",
        "maxSignalDuration": 86400, "keepAlive": 3600}, "cases": [{"name": "Login
        by User", "status": "high", "notifications": [], "condition": "a > 1"}], "message":
        "@{{bottomline.mainframe.activity.usr.id}} logged in from different IPs within
        short period.", "tags": [], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "version": 56, "id": "ext-003-btm", "updatedAt": 1736369762669,
        "blocking": false, "partnerIntegrationId": "bottomline-recordandreplay", "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Unusual ntdsutil usage", "createdAt":
        1720453221641, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:sentinelone endpoint:edr_telemetry @tgt.process.cmdline:(*create*
        OR *ntds*) @tgt.process.name:ntdsutil.exe", "groupByFields": ["@sentinelone.host_name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "suspicious_ntdsutil_usage"}], "options": {"evaluationWindow": 3600,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 3600},
        "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "suspicious_ntdsutil_usage > 0"}], "message": "## Goal\nDetect when Ntdsutil
        is used in a suspicious manner, typically to access the `Ntds.dit` file.\n\n##
        Strategy\nThreat actors are known to utilize tools found natively in a victim''s
        environment to accomplish their objectives. Ntdsutil, a legitimate Windows
        binary, has been abused by malicious actors in the past to gain access to
        the `Ntds.dit` file.\n\n## Triage and response\n1. Identify if the usage of
        Ntdsutil is authorized, and confirm if the `Ntds.dit` file was downloaded.\n2.
        If it''s not authorized, isolate the host from the network.\n3. Follow your
        organization''s internal processes for investigating and remediating compromised
        systems.\n", "tags": ["mitre_platform:windows", "source:sentinelone", "scope:sentinelone",
        "technique:T1003-os-credential-dumping", "tactic:TA0006-credential-access",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["security:attack", "mitre_platform:windows", "tactic:TA0006-credential-access",
        "scope:sentinelone", "source:sentinelone", "technique:T1003-os-credential-dumping"],
        "version": 87, "id": "def-000-jmj", "updatedAt": 1736369762650, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Unusually high volume of customer maintenance",
        "createdAt": 1706718944579, "isDefault": false, "isPartner": true, "isEnabled":
        true, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "@bottomline.mainframe.activity.resource.code:BNKCSTF ", "groupByFields":
        ["@bottomline.mainframe.activity.usr.id"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        900, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "Customer Maintenance by User", "status": "high",
        "notifications": [], "condition": "a > 40"}], "message": "@{{bottomline.mainframe.activity.usr.id}}
        performed high volume of customer maintenance", "tags": [], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "version": 58, "id": "ext-004-btm",
        "updatedAt": 1736369762683, "blocking": false, "partnerIntegrationId": "bottomline-recordandreplay",
        "metadata": {"entities": null, "sources": null}, "updateAuthorId": 1615666,
        "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "User Attached to a Pod", "createdAt":
        1629705615213, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "(source:kubernetes.audit OR (source:azure.containerservice @evt.category:(kube-audit
        OR kube-audit-admin))) @objectRef.resource:pods @objectRef.subresource:attach
        @http.method:create @http.status_code:[101 TO 299]", "groupByFields": ["@usr.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "standardized_attributes"}, {"query": "@apiVersion:audit.k8s.io* @objectRef.resource:pods
        @objectRef.subresource:attach @verb:create @responseStatus.code:[101 TO 299]",
        "groupByFields": ["@user.username"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "non_standardized_attributes"}, {"query":
        "source:gcp.k8s.cluster @evt.name:io.k8s.core.v1.pods.attach.create -@data.protoPayload.status.code:*",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gke_user_attached_to_pod"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "standardized", "status": "info",
        "notifications": [], "condition": "standardized_attributes > 0 || gke_user_attached_to_pod
        > 0"}, {"name": "non-standardized", "status": "info", "notifications": [],
        "condition": "non_standardized_attributes > 0"}], "message": "## Goal\nDetect
        when a user attaches to a pod.\n\n## Strategy\nThis rule monitors when a user
        attaches (`@objectRef.subresource:attach`) to a pod (`@objectRef.resource:pods`).\n\nA
        user should not need to attach to a pod. Attaching to a pod allows a user
        to attach to any process in a running container which may give an attacker
        access to sensitive data.\n\n## Triage and response\nDetermine if the user
        should be attaching to a running container.\n\n## Changelog\n* 7 May 2024
        - Updated detection query to include logs from Azure Kubernetes Service.\n*
        17 July 2024 - Updated detection query to include logs from Google Kubernetes
        Engine.\n", "tags": ["source:kubernetes", "mitre_platform:containers", "tactic:TA0007-discovery",
        "mitre_platform:iaas", "security:attack", "technique:T1613-container-and-resource-discovery",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "tactic:TA0007-discovery",
        "mitre_platform:containers", "security:attack", "technique:T1613-container-and-resource-discovery",
        "source:kubernetes", "mitre_platform:cloud"], "version": 88, "id": "3e1-0b7-119",
        "updatedAt": 1736369764771, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "User Exec into a Pod", "createdAt": 1629705612188, "isDefault":
        true, "isPartner": false, "isEnabled": false, "isBeta": false, "isDeleted":
        false, "isDeprecated": false, "queries": [{"query": "(source:kubernetes.audit
        OR (source:azure.containerservice @evt.category:(kube-audit OR kube-audit-admin)))
        @objectRef.resource:pods @objectRef.subresource:exec @http.method:create @http.status_code:[101
        TO 299]", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "standardized_attributes"},
        {"query": "@apiVersion:audit.k8s.io* @objectRef.resource:pods @objectRef.subresource:exec
        @verb:create @responseStatus.code:[101 TO 299]", "groupByFields": ["@user.username"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "non_standardized_attributes"}, {"query": "source:gcp.k8s.cluster
        @evt.name:io.k8s.core.v1.pods.exec.create -@data.protoPayload.status.code:*",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "gke_user_exec_into_pod"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "standardized", "status": "info",
        "notifications": [], "condition": "standardized_attributes > 0 || gke_user_exec_into_pod
        > 0"}, {"name": "non-standardized", "status": "info", "notifications": [],
        "condition": "non_standardized_attributes > 0"}], "message": "## Goal\nDetect
        when a user execs into a pod.\n\n## Strategy\nThis rule monitors when a user
        execs (`@objectRef.subresource:exec`) into to a pod (`@objectRef.resource:pods`).\n\nA
        user should not need to exec into a pod. Execing into a pod allows a user
        to execute any process in container which is not already running.\nIt is most
        common to execute the bash process to gain an interactive shell.\nIf this
        is an attacker, they can access any data which the pod has permissions to,
        including secrets.\n\n## Triage and response\nDetermine if the user should
        be execing into a running container.\n\n## Changelog\n* 7 May 2024 - Updated
        detection query to include logs from Azure Kubernetes Service.\n* 17 July
        2024 - Updated detection query to include logs from Google Kubernetes Engine.\n",
        "tags": ["technique:T1059-command-and-scripting-interpreter", "tactic:TA0002-execution",
        "source:kubernetes", "mitre_platform:containers", "mitre_platform:iaas", "security:attack",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["mitre_platform:iaas", "mitre_platform:containers",
        "security:attack", "technique:T1059-command-and-scripting-interpreter", "mitre_platform:cloud",
        "source:kubernetes", "tactic:TA0002-execution"], "version": 88, "id": "1d5-6cd-162",
        "updatedAt": 1736369764795, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "User agent associated with penetration testing tool observed",
        "createdAt": 1721045295114, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gcp.* @http.useragent:(*kali* OR *Kali* OR *parrot* OR
        *Parrot*) @usr.id:(*gserviceaccount.com OR *google.com)", "groupByFields":
        ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "offensive_user_agent_gcp"}, {"query": "source:cloudtrail
        @http.useragent:(*kali* OR *Kali* OR *parrot* OR *Parrot*)", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "offensive_user_agent_cloudtrail"}, {"query":
        "source:azure.* @http.useragent:(*kali* OR *Kali* OR *parrot* OR *Parrot*)",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "offensive_user_agent_azure"}, {"query":
        "source:kubernetes.audit @http.useragent:(*kali* OR *Kali* OR *parrot* OR
        *Parrot*)", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "offensive_user_agent_k8s"},
        {"query": "source:gcp.* @http.useragent:*ScoutSuite* @usr.id:(*gserviceaccount.com
        OR *google.com)", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "scoutsuite_user_agent_gcp"},
        {"query": "source:cloudtrail @http.useragent:*ScoutSuite*", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "scoutsuite_user_agent_cloudtrail"}, {"query":
        "source:azure.* @http.useragent:*ScoutSuite*", "groupByFields": ["@usr.id"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "scoutsuite_user_agent_azure"}, {"query": "source:kubernetes.audit
        @http.useragent:*ScoutSuite*", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "scoutsuite_user_agent_k8s"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 3600}, "cases": [{"name": "Offensive user agent", "status":
        "medium", "notifications": [], "condition": "offensive_user_agent_cloudtrail
        > 0 || offensive_user_agent_azure > 0 || offensive_user_agent_gcp > 0 || offensive_user_agent_k8s
        > 0"}, {"name": "ScoutSuite", "status": "low", "notifications": [], "condition":
        "scoutsuite_user_agent_cloudtrail > 0 || scoutsuite_user_agent_azure > 0 ||
        scoutsuite_user_agent_gcp > 0 || scoutsuite_user_agent_k8s > 0"}], "message":
        "## Goal\nDetect when a penetration testing tool user agent is observed.\n\n##
        Strategy\nThis rule monitors cloud audit logs for requests with a user agent
        correlating to a penetration testing tool. While these tools may be used legitimately
        by an organization to assess their security posture, they can also be used
        by attackers as a means of discovery once they have gained unauthorized access
        to your cloud environment.\n\n## Triage and response\n1. Determine if your
        organization used any of the tools observed for its own security assessment.\n2.
        If the tool was used by your organization, consider adding a suppression for
        the penetration tool''s identity or IP address. See [Best practices for creating
        detection rules with Datadog Cloud SIEM][1] for more information.\n3. If the
        tool was not used by your organization, begin your company''s incident response
        process and an investigation.\n    * If appropriate, disable or rotate the
        affected credential or identity.\n    * Investigate any actions taken by the
        identity.\n\n[1]: https://www.datadoghq.com/blog/writing-datadog-security-detection-rules/#fine-tune-security-signals-to-reduce-noise",
        "tags": ["technique:T1059-command-and-scripting-interpreter", "tactic:TA0002-execution",
        "tactic:TA0043-reconnaissance", "technique:T1592-gather-victim-host-information",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["mitre_platform:iaas",
        "security:attack", "technique:T1592-gather-victim-host-information", "technique:T1059-command-and-scripting-interpreter",
        "tactic:TA0043-reconnaissance", "mitre_platform:cloud", "tactic:TA0002-execution"],
        "version": 88, "id": "def-000-ys8", "updatedAt": 1736369765209, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "User attempted login with leaked password",
        "createdAt": 1629705615132, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:gsuite @evt.category:account_warning @evt.name:account_disabled_password_leak",
        "groupByFields": ["@actor.email"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": ""}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "a > 0"}], "message": "## Goal\nDetect when a user attempts to log in with
        a password which is known to be compromised.\n\n## Strategy\nThis rule allows
        you to monitor this Google Activity API call to detect if an attacker is trying
        to login with a leaked password: \n\n* [Leaked password][1]\n\n## Triage and
        response\n1. Determine which user in your organization owns the compromised
        password.\n2. Contact the user and ensure they rotate the password on Google
        and any other accounts where they may have reused this password. Ensure the
        user is aware of strong password guidelines.\n\n[1]: https://developers.google.com/admin-sdk/reports/v1/appendix/activity/login#account_disabled_password_leak\n",
        "tags": ["source:gsuite", "scope:gsuite", "security:threat-intel", "mitre_platform:saas",
        "technique:T1078-valid-accounts", "security:attack", "tactic:TA0001-initial-access",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["security:threat-intel", "tactic:TA0001-initial-access",
        "technique:T1078-valid-accounts", "scope:gsuite", "mitre_platform:cloud",
        "mitre_platform:saas", "security:attack", "source:gsuite"], "version": 87,
        "id": "dc3-7b8-f07", "updatedAt": 1736369765235, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "User enumerated AWS Secrets Manager
        - Anomaly", "createdAt": 1656425874840, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:cloudtrail @evt.name:GetSecretValue @error.kind:AccessDenied
        -@userIdentity.invokedBy:(apidestinations.events.amazonaws.com OR rds.amazonaws.com
        OR access-analyzer.amazonaws.com OR config.amazonaws.com)", "groupByFields":
        ["@userIdentity.arn"], "hasOptionalGroupByFields": false, "distinctFields":
        ["@requestParameters.secretId"], "aggregation": "cardinality", "name": ""}],
        "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 1800, "keepAlive": 1800}, "cases": [{"name": "", "status":
        "low", "notifications": []}], "message": "## Goal\nDetect when a user is attempting
        to retrieve a high number of secrets while also receiving an error message
        of `AccessDenied`, through Cloudtrail''s [`GetSecretValue`][1] event.\n\n##
        Strategy\nThis rule sets a baseline for user activity in the `GetSecretValue`
        event, and enables the detection of potentially anomalous activity when a
        user receives an anomalous number of `AccessDenied` messages while attempting
        to retrieve secrets.\n\nAn attacker may attempt to enumerate and access the
        AWS Secrets Manager to gain access to Application Programming Interface (API)
        keys, database credentials, Identity and Access Management (IAM) permissions,
        Secure Shell (SSH) keys, certificates, and more. Once these credentials are
        obtained, they can be used to perform lateral movement and access restricted
        information.\n\n## Triage and response\n1. Investigate API activity for `{{@userIdentity.session_name}}`
        to determine if the specific set of API calls are malicious.\n    * Use the
        investigation queries on the suggested actions panel.\n2. Review any other
        security signals for `{{@userIdentity.session_name}}`.\n3. If the activity
        is deemed malicious:\n    * Rotate user credentials.\n    * Determine what
        other API calls were made by the user.\n    * Rotate any AWS secrets that
        were accessed by the user with the `aws-cli` command [`update-secret`][2]
        or use the [AWS Console][3].\n    * Begin your organization''s incident response
        process and investigate.\n4. If the activity is benign:\n    * Use the linked
        blog post in the suggested actions panel to tune out noise.\n\n## Changelog\n25
        October 2022 - Updated query.\n\n[1]: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html\n[2]:
        https://docs.aws.amazon.com/cli/latest/reference/secretsmanager/update-secret.html\n[3]:
        https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_update-secret.html",
        "tags": ["technique:T1555-credentials-from-password-stores", "iaas:aws", "tactic:TA0006-credential-access",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "security:attack", "tactic:TA0006-credential-access",
        "source:cloudtrail", "iaas:aws", "technique:T1555-credentials-from-password-stores",
        "mitre_platform:cloud"], "version": 87, "id": "81g-402-ow1", "updatedAt":
        1736369766787, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "User enumerated AWS Systems Manager parameters - Anomaly", "createdAt": 1656425876179,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:cloudtrail
        @eventSource:ssm.amazonaws.com @evt.name:GetParameter -@userIdentity.invokedBy:(apidestinations.events.amazonaws.com
        OR rds.amazonaws.com OR access-analyzer.amazonaws.com OR config.amazonaws.com)",
        "groupByFields": ["@userIdentity.arn"], "hasOptionalGroupByFields": false,
        "distinctFields": ["@requestParameters.name"], "aggregation": "cardinality",
        "name": ""}], "options": {"evaluationWindow": 1800, "detectionMethod": "anomaly_detection",
        "maxSignalDuration": 1800, "keepAlive": 1800}, "cases": [{"name": "", "status":
        "low", "notifications": []}], "message": "## Goal\nDetect when a user is attempting
        to retrieve a high number of parameters, through Cloudtrail''s [`GetParameter`][1]
        event.\n\n## Strategy\nThis rule sets a baseline for user activity in the
        `GetParameter` event, and enables detection of potentially anomalous activity
        when a user attempts to retrieve an anomalous volume of parameters.\n\nAn
        attacker may attempt to enumerate and access the AWS Systems Manager to gain
        access to Application Programming Interface (API) keys, database credentials,
        Identity and Access Management (IAM) permissions, Secure Shell (SSH) keys,
        certificates, and more. Once these credentials are obtained, they can be used
        to perform lateral movement and access restricted information.\n\n## Triage
        and response\n1. Investigate API activity for `{{@userIdentity.session_name}}`
        to determine if the specific set of API calls are malicious.\n    * Use the
        investigation queries on the suggested actions panel.\n2. Review any other
        security signals for `{{@userIdentity.session_name}}`.\n3. If the activity
        is deemed malicious:\n    * Rotate user credentials.\n    * Determine what
        other API calls were made by the user.\n    * Rotate any parameters that were
        accessed by the user with the `aws-cli` command [`put-parameter`][2].\n    *
        Begin your organization''s incident response process and investigate.\n4.
        If the activity is benign:\n    * Use the linked blog post in the suggested
        actions panel to tune out noise.\n\n[1]: https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetParameter.html\n[2]:
        https://docs.aws.amazon.com/cli/latest/reference/ssm/put-parameter.html",
        "tags": ["technique:T1555-credentials-from-password-stores", "iaas:aws", "tactic:TA0006-credential-access",
        "source:cloudtrail", "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["mitre_platform:iaas", "security:attack", "tactic:TA0006-credential-access",
        "source:cloudtrail", "iaas:aws", "technique:T1555-credentials-from-password-stores",
        "mitre_platform:cloud"], "version": 88, "id": "02d-y74-06e", "updatedAt":
        1736369766786, "blocking": false, "metadata": {"entities": null, "sources":
        null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "michael.richey@datadoghq.com", "name": "Michael Richey"}}, {"name":
        "User logged into an application from a new country", "createdAt": 1629705612971,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": true, "queries": [{"query": "@evt.name:sq.dd0.user_event.login
        @sqreen.payload.success:true", "groupByFields": ["@usr.id"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "metric": "@network.client.geoip.country.name",
        "metrics": ["@network.client.geoip.country.name"], "aggregation": "new_value",
        "name": ""}], "options": {"evaluationWindow": 0, "detectionMethod": "new_value",
        "maxSignalDuration": 86400, "keepAlive": 0, "newValueOptions": {"forgetAfter":
        28, "learningDuration": 7, "learningThreshold": 0, "learningMethod": "duration"}},
        "cases": [{"name": "", "status": "info", "notifications": []}], "message":
        "# WARNING: This rule is being deprecated on 30 November 2023.\n\n## Goal\nDetect
        when a user logs into an application that is using Sqreen from a new country.\n\n##
        Strategy\nThis rule lets you monitor when a user logs into an application
        from a country that has not been seen before.\n\n## Triage and response\nReview
        the user activity on the [Sqreen dashboard][1].\n\n[1]: https://my.sqreen.com/application/goto/users/\n",
        "tags": ["mitre_platform:saas", "source:sqreen", "technique:T1078-valid-accounts",
        "mitre_platform:cloud", "tactic:TA0001-initial-access"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["tactic:TA0001-initial-access",
        "mitre_platform:saas", "mitre_platform:cloud", "source:sqreen", "technique:T1078-valid-accounts"],
        "version": 3, "id": "nl3-tm7-ujl", "updatedAt": 1734518644826, "blocking":
        false, "deprecationDate": 1701302400000, "metadata": {"entities": null, "sources":
        null}, "creator": {"handle": "", "name": ""}, "updater": {"handle": "", "name":
        ""}}, {"name": "User ran a command on Azure Compute", "createdAt": 1629705619531,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:azure.compute
        @evt.name:\"MICROSOFT.COMPUTE/VIRTUALMACHINES/RUNCOMMAND/ACTION\" @evt.outcome:Success",
        "groupByFields": [], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "vm_exec"}, {"query": "source:azure.compute
        @evt.name:\"MICROSOFT.COMPUTE/VIRTUALMACHINESCALESETS/VIRTUALMACHINES/RUNCOMMAND/ACTION\"
        @evt.outcome:Success", "groupByFields": [], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "scaleset_exec"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "Virtual Machine", "status":
        "info", "notifications": [], "condition": "vm_exec > 0"}, {"name": "Virtual
        Machine Scale Set", "status": "info", "notifications": [], "condition": "scaleset_exec
        > 0"}], "message": "## Goal\nDetect when a user runs a command on an Azure
        Virtual Machine through the Azure CLI or Portal.\n\n## Strategy\nMonitor Azure
        Compute logs for `MICROSOFT.COMPUTE/VIRTUALMACHINES/RUNCOMMAND/ACTION` events
        that have `@evt.outcome` of `Success`. \n\n## Triage and response\nReach out
        to the user to determine if the activity is legitimate. ", "tags": ["scope:azure.compute",
        "source:azure", "tactic:TA0002-execution", "technique:T1651-cloud-administration-command",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:azure",
        "mitre_platform:iaas", "security:attack", "scope:azure.compute", "technique:T1651-cloud-administration-command",
        "mitre_platform:cloud", "tactic:TA0002-execution"], "version": 88, "id": "e7n-akg-cid",
        "updatedAt": 1736369766840, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "User travel was impossible in AWS CloudTrail IAM log",
        "createdAt": 1641394450800, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:cloudtrail @userIdentity.type:IAMUser", "groupByFields":
        ["@userIdentity.session_name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "metric": "@network.client.geoip", "metrics": ["@network.client.geoip"],
        "aggregation": "geo_data", "name": ""}], "options": {"evaluationWindow": 0,
        "detectionMethod": "impossible_travel", "maxSignalDuration": 86400, "keepAlive":
        21600, "impossibleTravelOptions": {"baselineUserLocations": true, "detectIpTransition":
        false}}, "cases": [{"name": "", "status": "info", "notifications": []}], "message":
        "## Event Summary\n`@userIdentity.accessKeyId:` `{{@userIdentity.accessKeyId}}`
        had activity from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}` which
        are approximately `{{@impossible_travel.triggering_locations.travel_distance}}km`
        apart within `{{@impossible_travel.triggering_locations.travel_time_human_readable}}`.
        This indicates a potential impossible travel.\n\n## Goal\nDetect an Impossible
        Travel event when a `@userIdentity.type:` `{{@userIdentity.type}}` uses an
        AWS IAM access key in CloudTrail logs.\n\n## Strategy\nThe Impossible Travel
        detection type''s algorithm compares the GeoIP data of the last log and the
        current log to determine if the IAM user with `@userIdentity.session_name:`
        `{{@userIdentity.session_name}}`  traveled more than 500km at over 1,000km/hr
        and used an AWS IAM access key in CloudTrail logs.\n\n## Triage and response\n1.
        Determine if the `@userIdentity.accessKeyId:` `{{@userIdentity.accessKeyId}}`
        for `@userIdentity.session_name:` `{{@userIdentity.session_name}}` should
        be used from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`.\n2.
        If the IAM user should not be used from `{{@impossible_travel.triggering_locations.first_location.city}},
        {{@impossible_travel.triggering_locations.first_location.country}}` and `{{@impossible_travel.triggering_locations.second_location.city}},
        {{@impossible_travel.triggering_locations.second_location.country}}`, then
        consider isolating the account and reset credentials.\n3. Audit any user actions
        that may have occurred after the illegitimate login.", "tags": ["scope:iam",
        "iaas:aws", "technique:T1078-valid-accounts", "source:cloudtrail", "mitre_platform:iaas",
        "security:attack", "tactic:TA0001-initial-access", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:iam", "mitre_platform:iaas", "iaas:aws", "tactic:TA0001-initial-access",
        "technique:T1078-valid-accounts", "mitre_platform:cloud", "security:attack",
        "source:cloudtrail"], "version": 88, "id": "fc6-4t7-vx9", "updatedAt": 1736369767118,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Vault Token Created with Excessive TTL",
        "createdAt": 1629705614212, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": true, "queries":
        [{"query": "source:vault @request.operation:create @auth.token_ttl:>90000",
        "groupByFields": ["@usr.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "high_vault_ttl"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "high_vault_ttl > 0"}], "message": "## WARNING: This rule is being deprecated
        on 9 March 2023.\n\n## Goal\nDetect when a vault token is created with an
        excessive time-to-live (TTL) which can be indicative of an adversary maintaining
        persistence. \n\n## Strategy\nMonitoring of vault audit logs where tokens
        are created with a time-to-live greater than 90000 seconds (25 hours). If
        the TTL requires modification, clone this rule and update `@auth.token_ttl:>90000`
        in the query. \n\n## Triage & Response\n1. Verify max TTL for tokens in the
        appropriate Vault configuration.\n2. If the max TTL is higher than required,
        modify the max TTL.\n3. Verify with the token creator to confirm that the
        high TTL token is legitimate.\n4. Revoke the token if it does not have a legitimate
        use case.", "tags": ["scope:vault", "source:vault", "mitre_platform:saas",
        "technique:T1078-valid-accounts", "security:attack", "tactic:TA0003-persistence",
        "mitre_platform:cloud"], "hasExtendedTitle": true, "type": "log_detection",
        "filters": [], "defaultTags": ["source:vault", "tactic:TA0003-persistence",
        "security:attack", "scope:vault", "technique:T1078-valid-accounts", "mitre_platform:cloud",
        "mitre_platform:saas"], "version": 4, "id": "vih-ylo-wbc", "updatedAt": 1734519090621,
        "blocking": false, "deprecationDate": 1678320000000, "metadata": {"entities":
        null, "sources": null}, "creator": {"handle": "", "name": ""}, "updater":
        {"handle": "", "name": ""}}, {"name": "Vault root token", "createdAt": 1629705618273,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:vault
        @http.url_details.path:\"sys/generate-root/attempt\" @type:response @http.method:update",
        "groupByFields": ["@request.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "root_token_initialized"}, {"query": "source:vault
        @http.url_details.path:\"sys/generate-root/update\" @type:response @http.method:update",
        "groupByFields": ["@request.id"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "root_token_created"}, {"query": "source:vault
        @auth.policies:root @type:response", "groupByFields": ["@auth.accessor"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "root_token_used"}], "options": {"evaluationWindow": 300, "detectionMethod":
        "threshold", "maxSignalDuration": 86400, "keepAlive": 21600}, "cases": [{"name":
        "initialized", "status": "medium", "notifications": [], "condition": "root_token_initialized
        > 0"}, {"name": "created", "status": "medium", "notifications": [], "condition":
        "root_token_created > 0"}, {"name": "used", "status": "medium", "notifications":
        [], "condition": "root_token_used > 0"}], "message": "## Goal\nDetect when
        a vault root token is used. Root tokens can perform any activity and have
        the highest level of privileges in Vault and should only be used in emergencies.
        \n\n## Strategy\nThis rule monitors Vault Audit Logs (`source:vault`) to detect
        when `root` is seen in:\n\n* auth policy (`@auth.policies`)\n\nThis rule also
        monitors the API endpoint `/sys/generate-root` which is used to create new
        root keys.\n\n## Triage & Response\n1. Determine who created the root token
        and when. You can get token creation time using the token accessor with `vault
        token lookup -accessor <accessor>`. \n2. Inspect the requests made with the
        root token and ensure that its usage is valid.\n3. Ensure that after the root
        token is no longer needed, it is revoked (`vault token revoke -accessor <token>`).\n\n##
        Change Log\n* 29 June 2022 - Updated queries to reduce noise levels. Replaced
        initial query with token creation detection.\n* 17 October 2022 - Updated
        queries and cases.\n* 13 December 2023 - Updated group by values.\n* 23 September
        2024 - Reduce severity of cases to Medium.", "tags": ["scope:vault", "source:vault",
        "mitre_platform:saas", "technique:T1078-valid-accounts", "security:attack",
        "tactic:TA0001-initial-access", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["source:vault",
        "tactic:TA0001-initial-access", "security:attack", "scope:vault", "technique:T1078-valid-accounts",
        "mitre_platform:cloud", "mitre_platform:saas"], "version": 88, "id": "d6v-ktd-7pk",
        "updatedAt": 1736369769516, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Windows Domain Admin group changed", "createdAt": 1629705611990,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:windows.events
        @evt.id:4737 @Event.EventData.Data.TargetUserName:\"Domain Admins\"", "groupByFields":
        ["@Event.EventData.Data.SubjectUserName"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "standardized_attributes"},
        {"query": "@Event.System.EventID:4737 @Event.EventData.Data.TargetUserName:\"Domain
        Admins\"", "groupByFields": ["@Event.EventData.Data.SubjectUserName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "non_standardized_attributes"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "standardized", "status": "high",
        "notifications": [], "condition": "standardized_attributes > 0"}, {"name":
        "non-standardized", "status": "high", "notifications": [], "condition": "non_standardized_attributes
        > 0"}], "message": "## Goal\nDetect when the Domain Administrator group is
        modified.\n\n## Strategy\nMonitoring of Windows event logs where `@evt.id`
        is 4737 and the `@Event.EventData.Data.TargetUserName:\"Domain Admins\"`\n\n##
        Triage & Response\nVerify if `{{@Event.EventData.Data.SubjectUserName}}` has
        a legitimate reason for changing the `Domain Admins` group\n", "tags": ["scope:windows",
        "mitre_platform:windows", "technique:T1098-account-manipulation", "source:windows",
        "security:attack", "tactic:TA0003-persistence"], "hasExtendedTitle": true,
        "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "technique:T1098-account-manipulation", "mitre_platform:windows", "scope:windows",
        "source:windows", "tactic:TA0003-persistence"], "version": 87, "id": "p9l-g28-nxb",
        "updatedAt": 1736369791200, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Windows Net command executed to enumerate administrators",
        "createdAt": 1629716591577, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:windows.events @evt.id:4799 @Event.EventData.Data.CallerProcessName:*net1.exe
        @Event.EventData.Data.TargetUserName:Administrators", "groupByFields": ["@Event.System.Computer"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "standardized_attributes"}, {"query": "@Event.System.EventID:4799
        @Event.EventData.Data.CallerProcessName:*net1.exe @Event.EventData.Data.TargetUserName:Administrators",
        "groupByFields": ["@Event.System.Computer"], "hasOptionalGroupByFields": false,
        "distinctFields": [], "aggregation": "count", "name": "non_standardized_attributes"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600}, "cases": [{"name": "standardized", "status": "low",
        "notifications": [], "condition": "standardized_attributes > 0"}, {"name":
        "non-standardized", "status": "low", "notifications": [], "condition": "non_standardized_attributes
        > 0"}], "message": "## Goal\nDetect when a user runs the `net` command to
        enumerate the `Administrators` group, which could be indicative of adversarial
        reconnaissance activity.\n\n## Strategy\nMonitoring of Windows event logs
        where `@evt.id` is `4799`, `@Event.EventData.Data.CallerProcessName` is `*net1.exe`
        and `@Event.EventData.Data.TargetUserName` is `Administrators`.\n\n## Triage
        and response\nVerify if `{{@Event.EventData.Data.SubjectUserName}}` has a
        legitimate reason to check for users in the Administrator group on `{{host}}`.
        \n", "tags": ["mitre_platform:windows", "technique:T1087-account-discovery",
        "source:windows", "tactic:TA0007-discovery", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1087-account-discovery",
        "mitre_platform:windows", "tactic:TA0007-discovery", "source:windows", "security:attack"],
        "version": 87, "id": "sl8-aa0-qkv", "updatedAt": 1736369791188, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Windows audit log cleared", "createdAt":
        1629705617363, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:windows.events @evt.id:1102", "groupByFields": ["@Event.UserData.LogFileCleared.SubjectUserName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "standardized_attributes"}, {"query": "@Event.System.EventID:1102",
        "groupByFields": ["@Event.UserData.LogFileCleared.SubjectUserName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "non_standardized_attributes"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        3600, "keepAlive": 3600, "decreaseCriticalityBasedOnEnv": true}, "cases":
        [{"name": "standardized", "status": "high", "notifications": [], "condition":
        "standardized_attributes > 0"}, {"name": "non-standardized", "status": "high",
        "notifications": [], "condition": "non_standardized_attributes > 0"}], "message":
        "## Goal\nDetect when a user clears Windows Security logs.\n\n## Strategy\nMonitoring
        of Windows event logs where `@evt.id` is `1102`.\n\n## Triage and response\nVerify
        if `{{@Event.UserData.LogFileCleared.SubjectUserName}}` has a legitimate reason
        to clear the security event logs on `{{host}}`.\n\n## Changelog\n27 October
        2022 - Updated tags.\n", "tags": ["mitre_platform:windows", "technique:T1070-indicator-removal",
        "source:windows", "tactic:TA0005-defense-evasion", "security:attack"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1070-indicator-removal",
        "mitre_platform:windows", "tactic:TA0005-defense-evasion", "source:windows",
        "security:attack"], "version": 87, "id": "52l-d2d-n78", "updatedAt": 1736369791217,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Windows directory service restore mode
        password changed", "createdAt": 1629705617675, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        false, "queries": [{"query": "source:windows.events @evt.id:4794", "groupByFields":
        ["host"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "standardized"}, {"query": "@Event.System.EventID:4794",
        "groupByFields": ["host"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "non_standardized"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600, "decreaseCriticalityBasedOnEnv": true}, "cases": [{"name": "standardized",
        "status": "high", "notifications": [], "condition": "standardized > 0"}, {"name":
        "non-standardized", "status": "high", "notifications": [], "condition": "non_standardized
        > 0"}], "message": "## Goal\nDetect when a user resets the Directory Services
        Restore Mode (DSRM). The DSRM enabled emergency access to a Domain Controller.
        The DSRM user is a local administrator account that can be utilized for persistence.
        \n\n## Strategy\nMonitoring of Windows event logs where `@evt.id` is `4794`.\n\n##
        Triage and response\nVerify if `{{@Event.UserData.LogFileCleared.SubjectUserName}}`
        has a legitimate reason to change the DSRM password on `{{host}}`. ", "tags":
        ["scope:windows", "mitre_platform:windows", "technique:T1098-account-manipulation",
        "source:windows", "security:attack", "tactic:TA0003-persistence"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "technique:T1098-account-manipulation", "mitre_platform:windows", "scope:windows",
        "source:windows", "tactic:TA0003-persistence"], "version": 87, "id": "4f3-9ds-lrb",
        "updatedAt": 1736369793070, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Windows firewall disabled", "createdAt": 1629705615346,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:windows.events
        @evt.id:4950 @Event.EventData.Data.SettingValue:No", "groupByFields": ["@Event.System.Computer"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "standardized_attributes"}, {"query": "@Event.System.EventID:4950
        @Event.EventData.Data.SettingValue:No", "groupByFields": ["@Event.System.Computer"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "non_standardized_attributes"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "standardized", "status": "medium", "notifications": [],
        "condition": "standardized_attributes > 0"}, {"name": "non-standardized",
        "status": "medium", "notifications": [], "condition": "non_standardized_attributes
        > 0"}], "message": "## Goal\nDetect when the Windows firewall is disabled.\n\n##
        Strategy\nMonitor the Windows event logs where `@evt.id` is `4950` and the
        `@Event.EventData.Data.SettingValue:No`.\n\n## Triage and response\nVerify
        if `{{@Event.System.Computer}}` has a legitimate reason for having the Windows
        firewall disabled.", "tags": ["scope:windows", "mitre_platform:windows", "source:windows",
        "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "tactic:TA0005-defense-evasion", "mitre_platform:windows",
        "technique:T1562-impair-defenses", "scope:windows", "source:windows"], "version":
        87, "id": "p2q-2n2-wik", "updatedAt": 1736369793052, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Windows shadow copies deleted", "createdAt":
        1720453221887, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": true, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:sentinelone endpoint:edr_telemetry @evt.name:PROCESSCREATION @tgt.process.cmdline:(*delete*shadows*)
        @tgt.process.name:vssadmin.exe", "groupByFields": ["@sentinelone.host_name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "vssadmin_delete_shadow_copies"}], "options": {"evaluationWindow":
        3600, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        3600}, "cases": [{"name": "", "status": "high", "notifications": [], "condition":
        "vssadmin_delete_shadow_copies > 0"}], "message": "## Goal\nDetect when vssadmin
        is used to delete shadow copies.\n\n## Strategy\nThreat actors are known to
        use tools found natively in a victim''s environment to accomplish their objectives.
        `Vssadmin.exe`, a native Windows utility, can be used to delete all shadow
        copies on a system.\n\n## Triage and response\n1. Identify the user or service
        account deleting shadow copies, and confirm if this is authorized or expected.\n2.
        If it''s not authorized, isolate the host from the network.\n3. Follow your
        organization''s internal processes for investigating and remediating compromised
        systems.", "tags": ["mitre_platform:windows", "source:sentinelone", "scope:sentinelone",
        "tactic:TA0040-impact", "technique:T1490-inhibit-system-recovery", "security:attack"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["security:attack", "technique:T1490-inhibit-system-recovery", "mitre_platform:windows",
        "tactic:TA0040-impact", "scope:sentinelone", "source:sentinelone"], "version":
        87, "id": "def-000-my4", "updatedAt": 1736369793436, "blocking": false, "metadata":
        {"entities": null, "sources": null}, "updateAuthorId": 1615666, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Windows user added to Domain Admin group",
        "createdAt": 1629705612439, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:windows.events @evt.id:4728 @Event.EventData.Data.TargetUserName:\"Domain
        Admins\"", "groupByFields": ["@Event.EventData.Data.SubjectUserName", "@Event.EventData.Data.TargetUserName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "standardized_attributes"}, {"query": "@Event.System.EventID:4728
        @Event.EventData.Data.TargetUserName:\"Domain Admins\"", "groupByFields":
        ["@Event.EventData.Data.SubjectUserName", "@Event.EventData.Data.TargetUserName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "non_standardized_attributes"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive": 3600},
        "cases": [{"name": "standardized", "status": "info", "notifications": [],
        "condition": "standardized_attributes > 0"}, {"name": "non-standardized",
        "status": "info", "notifications": [], "condition": "non_standardized_attributes
        > 0"}], "message": "## Goal\nDetect when a user is added to the Domain Administrator
        group. A rogue active directory account can added to the Domain Admins group.\n\n##
        Strategy\nMonitoring of Windows event logs where `@evt.id` is `4728` and the
        `@Event.EventData.Data.TargetUserName:\"Domain Admins\"`\n\n## Triage & Response\nVerify
        if `{{@Event.EventData.Data.TargetUserName}}` should be added to the `Domain
        Admins` group\n", "tags": ["scope:windows", "mitre_platform:windows", "technique:T1098-account-manipulation",
        "source:windows", "security:attack", "tactic:TA0003-persistence"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["security:attack",
        "technique:T1098-account-manipulation", "mitre_platform:windows", "scope:windows",
        "source:windows", "tactic:TA0003-persistence"], "version": 87, "id": "f31-2il-7kq",
        "updatedAt": 1736369794636, "blocking": false, "metadata": {"entities": null,
        "sources": null}, "updateAuthorId": 1615666, "creator": {"handle": "", "name":
        ""}, "updater": {"handle": "michael.richey@datadoghq.com", "name": "Michael
        Richey"}}, {"name": "Windows vulnerable spn enumerated", "createdAt": 1715872907555,
        "isDefault": true, "isPartner": false, "isEnabled": false, "isBeta": false,
        "isDeleted": false, "isDeprecated": false, "queries": [{"query": "source:windows.events
        @evt.id:4769 -@Event.EventData.Data.ServiceName:*$ -@Event.EventData.Data.TicketEncryptionType:0x12
        -@Event.EventData.Data.ServiceName:krbtgt", "groupByFields": ["@Event.EventData.Data.TargetUserName"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "request_tickets_with_weak_encryption"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 3600, "keepAlive":
        3600}, "cases": [{"name": "request_tickets_with_weak_encryption", "status":
        "medium", "notifications": [], "condition": "request_tickets_with_weak_encryption
        > 5"}], "message": "## Goal\nDetects when multiple Service Principle Names
        (SPN) are requested with weak encryption types. This could be evidence of
        a kerberoasting attack being conducted\n\n## Strategy\nMonitoring of Windows
        event logs where `@evt.id` is `4769` and grouping by `@Event.EventData.Data.TargetUserName`.\n\n##
        Triage & Response\nVerify if `{{@Event.EventData.Data.TargetUserName}}` is
        expected to request multiple SPN''s. If possible, disable usage of weak encryption
        types such as RC4 for kerberos tickets.", "tags": ["scope:windows", "mitre_platform:windows",
        "tactic:TA0006-credential-access", "source:windows", "technique:T1558-steal-or-forge-kerberos-tickets",
        "security:attack"], "hasExtendedTitle": true, "type": "log_detection", "filters":
        [], "defaultTags": ["technique:T1558-steal-or-forge-kerberos-tickets", "security:attack",
        "mitre_platform:windows", "tactic:TA0006-credential-access", "scope:windows",
        "source:windows"], "version": 87, "id": "def-000-6n8", "updatedAt": 1736369795063,
        "blocking": false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Zendesk API token is created", "createdAt":
        1699662600871, "isDefault": true, "isPartner": false, "isEnabled": false,
        "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries": [{"query":
        "source:zendesk service:zendesk-audit-logs @source_type:api_token @evt.category:create
        @source_label:\"Zendesk API: Active API tokens\"", "groupByFields": ["@usr.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "zendesk_api_token_created"}], "options": {"evaluationWindow": 300,
        "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive": 21600},
        "cases": [{"name": "", "status": "info", "notifications": [], "condition":
        "zendesk_api_token_created > 0"}], "message": "## Goal\nDetect when an API
        token is created in Zendesk Admin Center.\n\n## Strategy\nMonitor Zendesk
        audit logs to look for events with an `@source_label` value of `\"Zendesk
        API: Active API tokens\"` and `@evt.category:create`. API tokens are auto-generated
        passwords in the Zendesk Admin Center. API tokens can be used to impersonate
        anyone in the account, including admins.\n\n## Triage and response\n1. Determine
        if the user `{{@usr.name}}` intended to create a new API token.\n2. If the
        API token is not required for a legitimate business use case, delete the token.\n",
        "tags": ["technique:T1098-account-manipulation", "mitre_platform:saas", "scope:zendesk",
        "source:zendesk", "security:attack", "tactic:TA0003-persistence", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["tactic:TA0003-persistence", "scope:zendesk", "security:attack", "source:zendesk",
        "mitre_platform:cloud", "mitre_platform:saas", "technique:T1098-account-manipulation"],
        "version": 88, "id": "def-000-xxo", "updatedAt": 1736369795079, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Zendesk Automatic Redaction is disabled",
        "createdAt": 1699662600848, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:zendesk service:zendesk-audit-logs @source_type:account_setting
        @evt.category:update message:\"Turned off\" @source_label:\"Security: Automatic
        redaction\"", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "zendesk_automatic_redaction_disabled"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "medium", "notifications":
        [], "condition": "zendesk_automatic_redaction_disabled > 0"}], "message":
        "## Goal\nDetect when the Automatic Redaction setting is disabled.\n\n## Strategy\nMonitor
        Zendesk audit logs to look for events with an `@source_label` value of `\"Security:
        Automatic redaction\"` and `message:\"Turned off\"`. The Automatic Redaction
        feature redacts or removes digits from credit card numbers found in ticket
        comments or custom fields so that the numbers are no longer useful.\n\n##
        Triage and response\n1. Determine if the user `{{@usr.name}}` intended to
        disable the Automatic Redaction feature.\n2. If the Automatic Redaction is
        required for a legitimate business use case, enable the feature.\n", "tags":
        ["mitre_platform:saas", "technique:T1562-impair-defenses", "scope:zendesk",
        "tactic:TA0005-defense-evasion", "source:zendesk", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:zendesk", "tactic:TA0005-defense-evasion", "security:attack", "source:zendesk",
        "mitre_platform:cloud", "technique:T1562-impair-defenses", "mitre_platform:saas"],
        "version": 87, "id": "def-000-o12", "updatedAt": 1736369795539, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Zendesk IP restriction settings is disabled",
        "createdAt": 1699662600842, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:zendesk service:zendesk-audit-logs @source_type:account_setting
        @evt.category:(create OR update) message:\"Turned off\" @source_label:\"Security:
        Enable IP restrictions\"", "groupByFields": ["@usr.name"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "zendesk_ip_restriction_settings_disabled"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "low", "notifications":
        [], "condition": "zendesk_ip_restriction_settings_disabled > 0"}], "message":
        "## Goal\nDetect when IP restriction is disabled.\n\n## Strategy\nMonitor
        Zendesk audit logs to look for events with an `@source_label` value of `\"Security:
        Enable IP restrictions\"` and `message:\"Turned off\"`. IP restriction allows
        administrators to limit access to Zendesk to users within a certain range
        of IP addresses only.\n\n## Triage and response\n1. Determine if the user
        `{{@usr.name}}` intended to disable IP restriction.\n2. If there is not a
        legitimate business use case, reset the IP restrictions to the original configuration.\n",
        "tags": ["mitre_platform:saas", "technique:T1562-impair-defenses", "scope:zendesk",
        "tactic:TA0005-defense-evasion", "source:zendesk", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:zendesk", "tactic:TA0005-defense-evasion", "security:attack", "source:zendesk",
        "mitre_platform:cloud", "technique:T1562-impair-defenses", "mitre_platform:saas"],
        "version": 88, "id": "def-000-xgm", "updatedAt": 1736369795541, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Zendesk account assumption is enabled",
        "createdAt": 1699662600868, "isDefault": true, "isPartner": false, "isEnabled":
        false, "isBeta": false, "isDeleted": false, "isDeprecated": false, "queries":
        [{"query": "source:zendesk service:zendesk-audit-logs @source_label:\"Security:
        Enable Account assumption\" message:\"Turned on\"", "groupByFields": ["@usr.name"],
        "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation": "count",
        "name": "zendesk_account_assumption_enabled"}], "options": {"evaluationWindow":
        300, "detectionMethod": "threshold", "maxSignalDuration": 86400, "keepAlive":
        21600}, "cases": [{"name": "", "status": "low", "notifications": [], "condition":
        "zendesk_account_assumption_enabled > 0"}], "message": "## Goal\nDetect when
        the Zendesk account assumption setting is enabled.\n\n## Strategy\nMonitor
        Zendesk audit logs to look for events with an `@source_label` value of `\"Security:
        Enable Account assumption\"`. Account assumption grants Zendesk the ability
        to access your account to troubleshoot an issue. It allows Zendesk to assume
        the role of an agent for a specified amount of time.\n\n## Triage and response\n1.
        Determine if the user `{{@usr.name}}` intended to enable the account assumption
        setting.\n2. If Zendesk support should not have the ability to assume the
        role of an agent, disable the setting.\n", "tags": ["tactic:TA0004-privilege-escalation",
        "technique:T1098-account-manipulation", "mitre_platform:saas", "scope:zendesk",
        "source:zendesk", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["scope:zendesk",
        "security:attack", "tactic:TA0004-privilege-escalation", "source:zendesk",
        "mitre_platform:cloud", "mitre_platform:saas", "technique:T1098-account-manipulation"],
        "version": 88, "id": "def-000-0dj", "updatedAt": 1736369796054, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "Zendesk user''s suspension status is
        changed", "createdAt": 1699662600870, "isDefault": true, "isPartner": false,
        "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated": false,
        "queries": [{"query": "source:zendesk service:zendesk-audit-logs @source_type:user_setting
        @evt.category:(create OR update) message:\"Suspended\"", "groupByFields":
        ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields": [], "aggregation":
        "count", "name": "zendesk_user_suspended"}, {"query": "source:zendesk service:zendesk-audit-logs
        @source_type:user_setting @evt.category:(create OR update) message:\"Unsuspended\"",
        "groupByFields": ["@usr.name"], "hasOptionalGroupByFields": false, "distinctFields":
        [], "aggregation": "count", "name": "zendesk_user_unsuspended"}], "options":
        {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        86400, "keepAlive": 21600}, "cases": [{"name": "", "status": "info", "notifications":
        [], "condition": "zendesk_user_suspended > 0 || zendesk_user_unsuspended >
        0"}], "message": "## Goal\nDetect when a Zendesk user''s suspension status
        is changed.\n\n## Strategy\nMonitor Zendesk audit logs to look for events
        with an `@source_type` value of `user_setting\"` and `message:\"Suspended\"`
        or `message:\"unsuspended\"`. Users can be suspended, which means that they
        can no longer sign in and any new support requests you receive from them are
        sent to the suspended tickets queue.\n\n## Triage and response\n1. Determine
        if the user `{{@usr.name}}` intended to change the user''s suspension status.\n",
        "tags": ["mitre_platform:saas", "technique:T1562-impair-defenses", "scope:zendesk",
        "tactic:TA0005-defense-evasion", "source:zendesk", "security:attack", "mitre_platform:cloud"],
        "hasExtendedTitle": true, "type": "log_detection", "filters": [], "defaultTags":
        ["scope:zendesk", "tactic:TA0005-defense-evasion", "security:attack", "source:zendesk",
        "mitre_platform:cloud", "technique:T1562-impair-defenses", "mitre_platform:saas"],
        "version": 87, "id": "def-000-0q9", "updatedAt": 1736369796056, "blocking":
        false, "metadata": {"entities": null, "sources": null}, "updateAuthorId":
        1615666, "creator": {"handle": "", "name": ""}, "updater": {"handle": "michael.richey@datadoghq.com",
        "name": "Michael Richey"}}, {"name": "[DEPRECATED] An AWS S3 bucket lifecycle
        policy was deleted", "createdAt": 1638798266094, "isDefault": true, "isPartner":
        false, "isEnabled": false, "isBeta": false, "isDeleted": false, "isDeprecated":
        true, "queries": [{"query": "-status:error @eventSource:s3.amazonaws.com @evt.name:DeleteBucketLifecycle",
        "groupByFields": ["@requestParameters.bucketName"], "hasOptionalGroupByFields":
        false, "distinctFields": [], "aggregation": "count", "name": "policy_deleted"}],
        "options": {"evaluationWindow": 300, "detectionMethod": "threshold", "maxSignalDuration":
        7200, "keepAlive": 3600}, "cases": [{"name": "lifecycle policy deleted", "status":
        "info", "notifications": [], "condition": "policy_deleted > 0"}], "message":
        "## WARNING: This rule is being deprecated on 17 March 2023.\n\n## Goal\nDetect
        if an entire AWS S3 Lifecycle configuration is deleted from a bucket.\n\n##
        Strategy\nUsing the `@evt.name`, the Datadog standard attribute that shows
        the API call, determine if a `DeleteBucketLifecycle` call occurred.\n\n##
        Triage & Response\n1. Determine if `{{@evt.name}}` should have occurred on
        the `{{@requestParameters.bucketName}}` by `username:` `{{@usr.name}}`, `accountId:`
        `{{@usr.id}}` of `type:` `{{@userIdentity.type}}`.\n2. If the `{{@evt.name}}`
        API call accidentally occurred, restore the configuration to the `{{@requestParameters.bucketName}}`.
        Otherwise, investigate further.\n\n## Changelog\n08 March 2022 - Deprecated
        rule. If a policy is deleted, the data remains forever.", "tags": ["iaas:aws",
        "scope:s3", "source:cloudtrail", "technique:T1562-impair-defenses", "tactic:TA0005-defense-evasion",
        "mitre_platform:iaas", "security:attack", "mitre_platform:cloud"], "hasExtendedTitle":
        true, "type": "log_detection", "filters": [], "defaultTags": ["technique:T1562-impair-defenses",
        "mitre_platform:iaas", "iaas:aws", "scope:s3", "mitre_platform:cloud", "security:attack",
        "tactic:TA0005-defense-evasion", "source:cloudtrail"], "version": 3, "id":
        "wse-vbo-0hc", "updatedAt": 1734518763437, "blocking": false, "deprecationDate":
        1679011200000, "metadata": {"entities": null, "sources": null}, "creator":
        {"handle": "", "name": ""}, "updater": {"handle": "", "name": ""}}], "meta":
        {"page": {"total_count": 560, "total_filtered_count": 60}}}'
    headers:
      Content-Type:
      - application/json
    status:
      code: 200
      message: OK
version: 1
